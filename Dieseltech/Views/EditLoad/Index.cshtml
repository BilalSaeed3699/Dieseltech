@using Dieseltech.Models;

@{
    ViewBag.Title = "Edit Load";

    List<Sp_Get_LoadHeadInformation_Edit_Result> LoadHeadlist = (List<Sp_Get_LoadHeadInformation_Edit_Result>)ViewBag.LoadHead;
    List<tblLoadPickup> LoadPickuplist = (List<tblLoadPickup>)ViewBag.LoadPickup;
    List<tblLoadDelivery> LoadDeliverylist = (List<tblLoadDelivery>)ViewBag.LoadDelivery;
    List<tblLoadCharge1> LoadChargeslist = (List<tblLoadCharge1>)ViewBag.LoadCharges;

    //List<tblLoadCharge1> list = (List<tblLoadCharge1>)ViewBag.LoadPickupDelivery;


    //List<tblLoadPickupDelivery> listPickDelivery = (List<tblLoadPickupDelivery>)ViewBag.LoadPickupDelivery;



    //List<sp_Driver_List_Result> list = (List<sp_Driver_List_Result>)ViewBag.DriverList;
}
@{string display = "";}
@if (Convert.ToInt32(@Session["User_id"]) != 2)
{
    display = "none";
}
else if (Convert.ToInt32(@Session["User_id"]) == 2)
{ display = "block"; }
<head>
    @*<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">

        <script src="//code.jquery.com/jquery-1.10.2.js"></script>

        <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
    <style>

        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
        }

        .nav-tabs.nav-tabs-solid > li > a.active, .nav-tabs.nav-tabs-solid > li > a.active:hover, .nav-tabs.nav-tabs-solid > li > a.active:focus {
            /*background-color: #009efb;
            border-color: #009efb;*/
            background-color: #f1bb62;
            border-color: #f1bb62;
        }

        /* th {
            background-color: white;
            color: black;
        }*/

        .required {
            Color: red !important;
        }
        /*  table {
            counter-reset: tableCount;
        }

        .counterCell:before {
            content: counter(tableCount);
            counter-increment: tableCount;
        }*/
        .select2-container {
            width: 100% !important;
        }

        .table-striped > tbody > tr:nth-child(2n+0) > td, .table-striped {
            background-color: transparent;
        }
        /* change row color on Pikcup selection */
        .table-layout {
            text-align: center;
            border: 1px solid black;
            border-collapse: collapse;
            font-family: "Trebuchet MS";
            margin: 0 auto 0;
        }

            .table-layout td, .table-layout th {
                border: 1px solid grey;
                padding: 5px 5px 0;
            }

            .table-layout td {
                text-align: left;
            }

        .selected {
            color: white;
            background-color: #009efb !important;
        }

        /*change row color on Delivery selection*/
        .table-layout-D {
            text-align: center;
            border: 1px solid black;
            border-collapse: collapse;
            font-family: "Trebuchet MS";
            margin: 0 auto 0;
        }

            .table-layout-D td, .table-layout-D th {
                border: 1px solid grey;
                padding: 5px 5px 0;
            }

            .table-layout-D td {
                text-align: left;
            }

        .selected {
            color: white;
            background-color: #009efb !important;
        }

        .alert-box {
            padding: 4px;
            margin-bottom: 5px;
            border: 1px solid transparent;
            border-radius: 4px;
            width: 30% !important;
            float: right;
        }

        .success {
            color: black !important;
            background-color: #dff0d8;
            border-color: #d6e9c6;
            display: none;
        }

        .failure {
            color: black !important;
            background-color: #f2dede;
            border-color: #ebccd1;
            float: left;
            display: none;
        }

        .warning {
            color: #8a6d3b;
            background-color: #fcf8e3;
            border-color: #faebcc;
            display: none;
        }

        .ImportantFields {
            color: red;
        }
    </style>
</head>


<div class="container">
    <div class="row">
        <div class="col-md-6">
            <br />
            <h3 name="LoaderNumber"> Load Number: @ViewBag.LoadNumber</h3>
            @*<h4 style="color:#009efb"> Load Number : @ViewBag.LoadNumber</h4>*@
            <input type="text" value="@ViewBag.LoadNumber" hidden id="GetLoadNumber" name="GetLoadNumber" class="form-control" required="">
            @*<h3 hidden id="GetLoadNumber" name="LoaderNumber"> Load Number: @ViewBag.LoadNumber</h3>*@

        </div>

        <div class="col-md-6 text-right">
            <br />
            <a id="btnCopyLoad" href="@Url.Action("Index", "CopyLoad", new { LoadNumber = ViewBag.LoadNumber })" style="        background-color: #4c5564 !important" class="btn btn-primary"><i class="fa fa-copy"></i> Copy Load</a>
            <a id="btnEditLoad" href="@Url.Action("LoadConfirmation", "Load", new { LoaderNumber = ViewBag.LoadNumber })" style="background-color: orange !important" class="btn btn-primary"><i class="fa fa-arrow-circle-left"></i> Back</a>


        </div>


    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="notifications  alert-box failure" style="width:100% !important">
                Fill Required Fields <span style="color:red;font-size:14px"> *</span>  ( <strong style="font-size:14px" id="ErrorFieldName"></strong> )
                <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
            </div>
        </div>
        <div class="col-md-6">
            <div class="notifications bottom-right alert-box success">Shipper Added<a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a></div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card-box">
                <!-- Nav tabs -->
                @*<ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#Section1" aria-controls="home" role="tab" data-toggle="tab">General</a></li>
                        <li role="presentation"><a href="#Section2" aria-controls="profile" role="tab" data-toggle="tab">Pickup And Delivery</a></li>
                        <li role="presentation"><a href="#Section3" aria-controls="messages" role="tab" data-toggle="tab">Charges</a></li>
                        <li role="presentation"><a href="#Section4" aria-controls="messages" role="tab" data-toggle="tab">Text Message</a></li>
                    </ul>*@

                <ul class="nav nav-tabs nav-tabs-solid">
                    <li class="nav-item"><a class="nav-link active" id="General" href="#Section1" data-toggle="tab">General</a></li>
                    <li class="nav-item Pickup"><a class="nav-link " id="SectionPickup" href="#Section2" data-toggle="tab">Pickup And Delivery</a></li>
                    <li class="nav-item Message"><a class="nav-link" id="SectionMessages" href="#Section3" data-toggle="tab">Text Messages</a></li>
                    <li class="nav-item Charges"><a class="nav-link" id="SectionCharges" href="#Charges" data-toggle="tab">Charges</a></li>

                    @*<li class="nav-item Charges"><a class="nav-link disabled" id="SectionCharges" href="#Charges" data-toggle="tab">Charges</a></li>*@
                </ul>


                <!-- Tab panes -->
                <div class="tab-content tabs">

                    <label>@ViewBag.Message</label>


                    <div role="tabpanel" class="tab-pane show active" id="Section1">
                        @*@using (Html.BeginForm("Create", "Load", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <form>*@


                        <div class="row ">


                            <div class="col-md-6 ">
                                <div class="card-box shadow-none p-3 mb-5 bg-light rounded">

                                    <h4 class="card-title">Customer</h4>

                                    <div class="form-group" style="display:@display">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label><strong>Agent List</strong></label>
                                                <select id="ddlAgent" required name="ddlAgent"  class="form-control js-example-basic-single">

                                                    @foreach (var item in ViewBag.AgentList)
                                                    {
                                                        <text>
                                                            @if (item.User_ID == ViewBag.UserId)
                                                            {
                                                                <option selected value="@item.User_ID">@item.UserName</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@item.User_ID">@item.UserName</option>
                                                            }


                                                        </text>
                                                    }
                                                </select>



                                            </div>

                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label>Customer Search  <small> (* Search By Type Name,AssignID,MC# )</small> </label>


                                                <input type="text" id="txtBrokerName" name="BrokerName" class="form-control" required="">
                                                <input type="text" hidden id="txtBrokerAssignId" name="BrokerAssignId" class="form-control" required="">



                                            </div>
                                        </div>
                                    </div>
                                    <!--<div class="form-group">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <label>Broker Helper</label>



                                            <select id="BrokerHelperid" required name="BrokerHelperid" onchange="SelectedIndexChanged(this,'BH')"
                                                    class="form-control js-example-basic-single">-->
                                    @*<option value="0">Select Broker Helper</option>
                                        @foreach (var item in ViewBag.BrokerHelper)
                                        {
                                            <text>
                                                <option value="@item.Value">@item.Text</option>

                                            </text>
                                        }*@
                                    <!--</select>


                                    </div>-->
                                    @*<div class="col-md-6">
                                            <label>Broker Search</label>
                                            <select class=" form-control">
                                                <option>Select State</option>
                                                <option value="1">California</option>
                                                <option value="2">Texas</option>
                                                <option value="3">Florida</option>
                                            </select>
                                        </div>*@
                                    <!--</div>
                                    </div>-->
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Company</label>
                                                @*@Html.DropDownList("CompanyId", ViewBag.Company as IEnumerable<SelectListItem>, "Select Company", new { @class = "form-control" })*@
                                                <select id="CompanyId" required name="CompanyId" class="form-control js-example-basic-single">
                                                    <option value="0">Select Company </option>
                                                    @foreach (var item in ViewBag.Company)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>



                                            </div>
                                            <div class="col-md-6">
                                                <label>Customer Rate ($)</label>
                                                <input type="number" id="txtBrokerRate" value="0" name="BrokerRate" class="form-control" required>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Contact Name</label>
                                                <input type="text" id="txtContactName" name="ContactName" class="form-control" required>
                                            </div>
                                            <div class="col-md-6">
                                                <label>Dispatch Email</label>
                                                <input type="email" id="txtContactEmail" name="ContactEmail" class="form-control" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Phone</label>
                                                <input type="text" id="txtContactPhone" name="ContactPhone" class="form-control" required>
                                            </div>
                                            <div class="col-md-6">
                                                <label>Ext.</label>
                                                <input type="text" id="txtExtension" name="Extension" class="form-control" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Customer Reference No</label>
                                                <input onfocusout="Verifyduplication('','E')" type="text" id="txtBrokerReference" name="BrokerReference" class="form-control" required>
                                            </div>
                                            <div class="col-md-6">
                                                <label>Registration Date</label>

                                                @{string date = Convert.ToDateTime(@LoadHeadlist[0].originalRegistrationDate).ToString("yyyy-MM-dd"); }
                                                <input id="txtDateTimeShow" type="date" value="@date" name="RegistrationDateShow" class="form-control" required>

                                                @*<input  id="txtDateTime" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")"  name="RegistrationDate" class="form-control" required>*@
                                            </div>  
                                        </div>
                                    </div>


                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card-box shadow-none p-3 mb-5 bg-light rounded">
                                    <h4 class="card-title">Carrier</h4>



                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label>Carrier Search <small> (* Search By Type Name,AssignID,MC# )</small> </label>

                                                <input type="text" id="txtCarrierSearch" name="CarrierName" class="form-control" required="">
                                                <input type="text" hidden id="txtCarrierAssignId" name="CarrierAssignId" class="form-control" required="">


                                            </div>
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Dispatcher Name</label>
                                                <input type="text" id="txtDispatchName" name="DispatcherName" class="form-control" required>

                                            </div>
                                            <div class="col-md-6">
                                                <label>Contact Number</label>
                                                <input type="text" id="txtContactNumber" name="ContactNumber" class="form-control" required>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label>Truck </label>

                                                @*<select onchange="GetDriverInfo()" id="TruckId" required name="TruckId" class="form-control js-example-basic-single">
                                                        <option value="0">Select Truck </option>

                                                    </select>*@


                                                <select onchange="GetDriverInfo()" id="TruckId" required name="TruckId" class="form-control js-example-basic-single">
                                                    <option value="0">Select Truck </option>
                                                    @foreach (var item in ViewBag.Truck)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>


                                            </div>
                                        </div>


                                    </div>



                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Driver Name</label>
                                                <input type="text" id="txtDriverName" name="DriverName" class="form-control" required>
                                                <input type="text" hidden id="txtDriverId" name="DriverId" class="form-control" required>

                                            </div>
                                            <div class="col-md-6">
                                                <label>Driver Number</label>
                                                <input type="text" id="txtDriverPhone" name="DriverPhone" class="form-control" required>
                                            </div>

                                        </div>
                                    </div>



                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4">
                                                <label>Carrier Rate ($)</label>
                                                <input type="text" id="txtCarrierRate" value="0" name="CarrierRate" class="form-control" required>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Number to Text</label>
                                                <input type="text" id="txtNumberToText" name="NumberToText" class="form-control" required>
                                            </div>
                                            <div class="col-md-4">

                                                <input type="checkbox" id="chkIsSendText" name="checkbox">
                                                <label>Send Text</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label>Load Type</label>
                                                @*@Html.DropDownList("LoadTypeId", ViewBag.LoadType as IEnumerable<SelectListItem>, "Select Load Type", new { @class = "form-control" })*@

                                                <select id="LoadTypeId" required name="LoadTypeId" class="form-control js-example-basic-single">
                                                    <option value="0">Select Load Type </option>
                                                    @foreach (var item in ViewBag.LoadType)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>

                                            </div>
                                            <div class="col-md-6">
                                                <label>Commodity</label>
                                                <input type="text" id="txtCommodity" name="Commodity" class="form-control" required>
                                            </div>
                                        </div>
                                    </div>












                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4">
                                                <label>Full/Partial</label>


                                                @*@Html.DropDownList("LoadSubTypeId", ViewBag.LoadSubType as IEnumerable<SelectListItem>, "Select Load Type", new { @class = "form-control" })*@

                                                <select id="LoadSubTypeId" required name="LoadSubTypeId" class="form-control js-example-basic-single">
                                                    <option value="0">Select Load Type </option>
                                                    @foreach (var item in ViewBag.LoadSubType)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>

                                            </div>
                                            <div class="col-md-4">
                                                <label>Available</label>
                                                <input type="text" id="txtAvailable" name="Available" class="form-control" required>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Weight</label>
                                                <input type="text" id="txtWeight" name="Weight" class="form-control" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4">
                                                <label>Quantity Type</label>

                                                @*@Html.DropDownList("QuantityTypeId", ViewBag.QuantityType as IEnumerable<SelectListItem>, "Select Quantity Type", new { @class = "form-control" })*@

                                                <select id="QuantityTypeId" required name="QuantityTypeId" class="form-control js-example-basic-single">
                                                    <option value="0">Select Quantity </option>
                                                    @foreach (var item in ViewBag.QuantityType)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>

                                            </div>
                                            <div class="col-md-4">
                                                <label>Quantity </label>
                                                <input type="text" id="txtQuantity" name="Quantity" class="form-control" required>
                                            </div>
                                            <div class="col-md-4">
                                                <label>Driver Type</label>
                                                @*@Html.DropDownList("DriverTypeId", ViewBag.DriverTypes as IEnumerable<SelectListItem>, "Select Driver Type", new { @class = "form-control" })*@

                                                <select id="DriverTypeId" required name="DriverTypeId" class="form-control js-example-basic-single">
                                                    <option value="0">Select Driver </option>
                                                    @foreach (var item in ViewBag.DriverTypes)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Carrier Instruction:</label>
                                        <textarea rows="3" cols="3" id="txtCarrierInstructions" name="CarrierInstructions" class="form-control" placeholder="Enter message" required></textarea>
                                    </div>
                                    @*<div class="text-right">
                                            <button type="submit" id="btnGeneralSubmit" class="btn btn-primary">Next</button>
                                            <button type="button" onClick="window.location.reload()" style="background-color:red !important" class="btn btn-danger">Cancel</button>

                                        </div>*@

                                </div>
                            </div>

                        </div>

                        @*</form>*@


                        @*}*@

                    </div>

                    <div class="tab-pane fade" id="Section2">
                        <form>


                            @*<input hidden type="text" name="AccessLoaderNumber" value=@LoaderNumber />*@

                            <div class="row">

                                <div class="col-lg-12  ">


                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group ">
                                                <label>Shipper Search <span class="required">*</span> <small id="lblShipperError" style="color: red;display: none"> Enter Shipper Name </small></label>
                                                <input style="width:100%" class="form-control" placeholder="Shipper Search" type="text" id="txtShipper" required name="ShipperName">
                                                &nbsp;&nbsp;
                                                @*<a id="remove" href="#" data-toggle="modal" data-target="#Add_Shipper" class=" open-AddBookDialog btn btn-primary float-right" style="background-color: #4c5564 !important;"><i class="fa fa-plus"></i></a>*@
                                                <input class="form-control" hidden placeholder="Shipper Id" type="text" id="txtShipperId" required name="ShipperId">
                                                <input hidden class="form-control" placeholder="Pickup Id" type="text" id="txtPickupId" required name="PickupId">
                                                <input hidden class="form-control" placeholder="Delivery Id" type="text" id="txtDeliveryId" required name="DeliveryId">

                                            </div>
                                        </div>

                                        <div class="col-md-3" hidden>
                                            <div class="form-group">
                                                <label>Country  </label>
                                                <input class="form-control" placeholder="Country" value="United States" readonly type="text" id="txtCountry" required name="CountryId">
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Shipper Name  <span class="ImportantFields">*</span></label>
                                                <input class="form-control" placeholder="Shipper Name" type="text" id="txtShipperName" required name="ShipperNewName">
                                            </div>
                                        </div>


                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Address</label>
                                                <input class="form-control" placeholder="Address" type="text" id="txtAddress" required name="Address">
                                                <input value="0" hidden class="form-control" placeholder="Address" type="text" id="txtAddressLongitude" required name="AddressLongitude">
                                                <input value="0" hidden class="form-control" placeholder="Address" type="text" id="txtAddressLatitude" required name="AddressLatitude">
                                            </div>
                                        </div>

                                    </div>


                                    <div class="row">



                                        <div class="col-md-3">


                                            <label>Phone</label>
                                            <input class="form-control" placeholder="Phone" type="text" id="txtPhone" required name="Phone">


                                        </div>

                                        @*<div class="col-md-3">

                                                <label>State</label>
                                                <select id="StateId" required name="StateId" onchange="getCityList('Save')"
                                                        class="js-example-basic-multiple">
                                                    <option value="0">Select State </option>

                                                    @foreach (var item in ViewBag.States)
                                                    {
                                                        <text>
                                                            <option value="@item.Value">@item.Text</option>

                                                        </text>
                                                    }
                                                </select>


                                            </div>


                                            <div class="col-md-3">

                                                <label>City</label>
                                                <select required class="js-example-basic-multiple" name="CityId" id="CitysId">

                                                    <option value="0" selected>Select City</option>

                                                </select>

                                            </div>*@




                                        <div class="col-md-3">
                                            <label>Zip Code <span class="ImportantFields">*</span> <small id="lblZipCodeError" style="Color:red;display:none">Invalid Zip Code</small> </label>
                                            @*<input type="text" id="txtZipCode" name="ZipCode" placeholder="Zip Code" class="form-control">*@

                                            <input class="form-control" placeholder="Zip Code" type="number" id="txtZipCode" onfocusout="GetStateCity()" required name="ZipCode">

                                        </div>
                                        <div class="col-md-3">
                                            <label>State <small id="lblStateCodeError" style="color: red;display: none">Invalid State Code</small></label>

                                            <input type="text" id="txtStates" name="State" class="form-control" required="">

                                            @*<input type="text" onfocusout="GetLocation('S')" id="txtStates" name="State" class="form-control" required="">*@


                                            <input type="text" hidden readonly id="txtStateCode" name="State" class="form-control" required="">
                                        </div>
                                        <div class="col-md-3">
                                            <label>City <small id="lblCityCodeError" style="color: red;display: none">Invalid City Name</small> </label>
                                            <input type="text" id="txtCity" name="City" class="form-control" required="" readonly>

                                            @*<input type="text" id="txtCity" name="City" class="form-control" required="" onfocusout="GetLocation('C')">*@
                                        </div>


                                    </div>




                                    <br />
                                    <div class="row">






                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Date From</label>
                                                <input id="txtdateFrom" onblur="Syncdate()" name="DateTimeFrom" placeholder="Date From" type="datetime-local" class="form-control">
                                            </div>

                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Date To</label>
                                                <input type="datetime-local" id="txtDateTimeTo" name="DateTimeTo" placeholder="Date To" class="form-control">
                                            </div>

                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Trailer</label>
                                                <input type="text" name="Traitor" id="txtTraitor" placeholder="Trailer #:" class="form-control">
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Pickup Number</label>
                                                <input type="text" name="AppointmentNumber" id="txtAppointmentNumber" placeholder="Pickup Number" class="form-control">
                                            </div>

                                        </div>

                                    </div>






                                    <div class="row">
                                        <div class="col-md-3" style="display:none !important">
                                            <label>Pickup Order <small id="lblPickuporder" style="color: red;display: none">Invalid Pickup Order</small></label>

                                            <input type="number" value="1" id="txtpickuporder" name="txtpickuporder" class="form-control ui-autocomplete-input" required="" autocomplete="off">

                                            <input type="number" value="1" id="txtDeliveryporder" name="txtDeliveryporder" class="form-control ui-autocomplete-input" required="" autocomplete="off">

                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Comments</label>
                                                @*<input type="te"  id="txtComments"  class="form-control">*@
                                                <textarea class="form-control" name="Comments" id="txtComments" placeholder="Comment" rows="3"></textarea>
                                            </div>

                                        </div>
                                        <div class="col-md-6 text-right">
                                            <a id="btnAddPickup" href="#"
                                               class="btn btn-primary ThemeColor"><i class="fa fa-plus"></i> Add Pickup</a>

                                            &nbsp;
                                            <a onclick="AlertDisableButton()" id="btnAddDelivery" href="#"
                                               class="btn btn-secondary ThemeColor"><i class="fa fa-plus"></i> Add Delivery</a>
                                            <br />
                                            <label>
                                                <small id="lblDisableDelivery" style="display:none;color:red">
                                                    Add Pickup First
                                                </small>
                                            </label>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-6">

                                        </div>


                                    </div>



                                </div>
                            </div>

                            <div class="col-md-12">

                                <div class="card-box">


                                    <div class="row">
                                        <div class="col-lg-6">
                                            <div class="card-box">
                                                <div class="card-block">


                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <label value="0" hidden id="lblPickupMoveId"></label>
                                                            <h5 class="text-bold card-title">
                                                                Pickup

                                                            </h5>
                                                        </div>

                                                        <div class="col-md-6">
                                                            <div class="text-right">
                                                                @*<button type="submit" href="#" class="btn btn-primary">Add Pickup</button>*@
                                                                <i id="btnPickuptoDelivery" onclick="MovePickuptoDelivery()" style="cursor: pointer; float: right; font-size: 26px; color: cornflowerblue" class="fa fa-toggle-right"></i>


                                                            </div>
                                                        </div>


                                                    </div>


                                                    <div class="table-responsive">
                                                        <table style="font-size:13px" class="table table-condensed table-striped table-sm mb-0 table-layout" id="tblPickup">
                                                            @*<thead>*@
                                                            <tr>
                                                                <th hidden>Id</th>
                                                                <th></th>
                                                                <th>Pickup Information</th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden>ShipperId</th>
                                                                <th hidden>Longitude</th>
                                                                <th hidden>Latitude</th>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>
                                                            </tr>
                                                            @*</thead>*@
                                                            <tbody id="tblPickupBody">
                                                                @*@foreach (var PD in listPickDelivery)
                                                                    {

                                                                        <tr>
                                                                            <td class="counterCell"></td>
                                                                            <td></td>
                                                                            <td>@PD.Information</td>
                                                                            <td hidden>@PD.StatusFlague</td>
                                                                            <td hidden>@PD.ShipperId</td>
                                                                            <td hidden>@PD.ShipperName</td>
                                                                            <td hidden>@PD.CountryId</td>
                                                                            <td hidden>@PD.Phone</td>
                                                                            <td hidden>@PD.Address</td>
                                                                            <td hidden>@PD.CityId</td>
                                                                            <td hidden>@PD.StateId</td>
                                                                            <td hidden>@PD.ZipCode</td>
                                                                            <td hidden>@PD.DateTimeFrom</td>
                                                                            <td hidden>@PD.DateTimeTo</td>
                                                                            <td hidden>@PD.AppointmentNumber</td>
                                                                            <td hidden>@PD.Traitor</td>
                                                                            <td hidden>@PD.Comments</td>


                                                                        </tr>
                                                                    }*@
                                                            </tbody>


                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="card-box">
                                                <div class="card-block">

                                                    <div class="row">
                                                        <div class="col-md-12">

                                                            <label hidden id="lblDeliveryMoveId"></label>

                                                            <i id="btnDeliverytoPickup" onclick="MoveDeliverytoPickup()" style="cursor:pointer; float:left;font-size:26px;color:cornflowerblue" class="fa fa-toggle-left"></i>

                                                            <h5 class="text-bold card-title">&nbsp; Delivery <small id="DeliveryPickUpInfo"></small> </h5>

                                                        </div>

                                                        <!--<div class="col-md-6">
                                                        <div class="text-right">-->
                                                        @*<button type="submit" href="#" class="btn btn-primary">Add Delivery</button>*@



                                                        <!--</div>
                                                        </div>-->


                                                    </div>
                                                    @*<h5 class="text-bold card-title">Delivery</h5>*@
                                                    <h6 id="PickupInformation"></h6>
                                                    <div class="table-responsive">
                                                        <table style="font-size:13px" class="table table-condensed table-striped table-sm mb-0 table-layout-D" id="tblDelivery">
                                                            @*<thead>*@
                                                            <tr>
                                                                <th hidden>Id</th>
                                                                <th hidden>PickupId</th>

                                                                <th></th>
                                                                <th>Delivery Information</th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden>ShipperId</th>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>

                                                            </tr>
                                                            @*</thead>*@
                                                            <tbody id="tblDeliveryBody">
                                                                @*@foreach (var PD in listPickDelivery)
                                                                    {

                                                                        <tr>
                                                                            <td>
                                                                            <td>@PD.Information</td>

                                                                            <td hidden>@PD.Information</td>
                                                                            <td hidden>@PD.StatusFlague</td>
                                                                            <td hidden>@PD.ShipperId</td>
                                                                            <td hidden>@PD.ShipperName</td>
                                                                            <td hidden>@PD.CountryId</td>
                                                                            <td hidden>@PD.Phone</td>
                                                                            <td hidden>@PD.Address</td>
                                                                            <td hidden>@PD.CityId</td>
                                                                            <td hidden>@PD.StateId</td>
                                                                            <td hidden>@PD.ZipCode</td>
                                                                            <td hidden>@PD.DateTimeFrom</td>
                                                                            <td hidden>@PD.DateTimeTo</td>
                                                                            <td hidden>@PD.AppointmentNumber</td>
                                                                            <td hidden>@PD.Traitor</td>
                                                                            <td hidden>@PD.Comments</td>
                                                                        </tr>
                                                                    }*@
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    @*<div class="text-right">
                                            <button type="submit" class="btn btn-primary">Submit</button>
                                        </div>*@
                                </div>


                            </div>
                            @*<div class="row">
                                    <div class="col-md-12 text-right">
                                        <input type="button" id="btnSavePickup" class="btn btn-primary" style="background-color: #e80000;" value="Save Pickup Delivery">

                                    </div>

                                </div>*@



                            <!--<div class="row">-->
                            @*<input id="Button1" type="button" value="Add New File" class="btn btn-primary  float-right" onclick="AddFileUpload()" />*@

                            <!--<div class="activity-box col-md-6">

                                <ul class="activity-list" id="fileList">-->
                            @*@foreach (var item in list)
                                            {
                                                if (@item.Type == "Resource")
                                                {
                                <li>

                                    <a href="@item.Filepath" target="_blank">@item.FileName</a>
                                    <a class="activity-delete" onclick="remove(event)" title="Delete">&times;</a>
                                </li>}
                                            }*@
                            <!--</ul>
                                </div>

                            </div>-->
                            @*<div class="container">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <h4>Upload File</h4>


                                            <div class="form-group">
                                                <input id="file-upload" type="file" class="file" data-upload-url="Load/UploadFiles/?LoaderName=@LoaderNumber"
                                                       multiple="multiple" name="files">
                                            </div>


                                        </div>
                                    </div>
                                </div>*@


                            @*<div class="row">
                                    <div class="col-md-12">
                                        <div class="text-right">
                                            <button type="button" id="btnNextPickup" class="btn btn-primary">Next</button>

                                        </div>

                                    </div>
                                </div>*@





                        </form>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="Section3">

                        <div class="row">

                            <div class="col-md-12">
                                <div class="card-box">
                                    <h4 class="card-title">Text Messages</h4>
                                    <form action="#">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-3">
                                                    <label>Number to Text</label>
                                                    <input type="text" class="form-control">
                                                </div>
                                                <div class="col-md-3">
                                                    <label>Number to Text</label>
                                                    <input type="text" class="form-control">
                                                </div>
                                                <div class="col-md-3">

                                                </div>
                                                <div class="col-md-3">

                                                    <a id="remove" href="#"
                                                       class="btn btn-primary ThemeColor  float-right"><i class="fa fa-plus"></i> Create Text Message</a>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Message</label>
                                                    @*<input type="text" class="form-control">*@
                                                    <textarea class="form-control" rows="10" id="Message"></textarea>
                                                </div>
                                            </div>
                                        </div>

                                    </form>
                                </div>
                            </div>
                        </div>

                        @*<div class="row">
                                <div class="col-md-12">
                                    <div class="text-right">
                                        <button type="button" id="btnNextMessage" class="btn btn-primary">Next</button>

                                    </div>

                                </div>
                            </div>*@




                    </div>

                    <div class="tab-pane fade" id="Charges">
                        <form>
                            <div class="col-md-12">
                                @*@using (Html.BeginForm("SaveBroker", "Definition", FormMethod.Post))
                                    {

                                        @Html.AntiForgeryToken()*@

                                <div class="Add_Section">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <label>From Customer</label>
                                            <input type="number" value="0" id="txtBroker" class="form-control" required>
                                        </div>
                                        <div class="col-md-2">
                                            <label>Charge Name</label>
                                            <input type="text" id="txtChargeName" class="form-control" required>
                                        </div>

                                        <div class="col-md-2">
                                            <label>Agent</label>
                                            <input type="number" id="txtAgent" value="0.00" disabled class="form-control">
                                        </div>
                                        <div class="col-md-2">
                                            <label>Branch</label>
                                            <input type="text" value="0.00" id="txtBranch" disabled class="form-control">
                                        </div>
                                        <div class="col-md-2">
                                            <label>Company</label>
                                            <input type="text" value="0.00" id="txtCompany" disabled class="form-control">
                                        </div>
                                        <div class="col-md-2">
                                            <label>Carrier</label>
                                            <input type="number" value="0" id="txtCarrier" class="form-control" required>
                                        </div>
                                    </div>

                                    <br />
                                    <div class="row">
                                        <div class="col-md-2">


                                            <input type="checkbox" id="chkComissionCharge" name="IsCommissionCharge">
                                            <label>Commission Charge</label>

                                        </div>

                                        <div class="col-md-3">
                                            <input type="checkbox" id="chkIsQuickPay" name="IsQuickPay">
                                            <label>Quick  Pay</label>

                                        </div>

                                        <div class="col-md-2">

                                            <input id="chkIsAgent" type="checkbox" name="IsFlatToAgent">
                                            <label>Flat to Agent</label>

                                        </div>

                                        <div class="col-md-2">

                                            <input id="chkIsBranch" type="checkbox" name="IsFlatToBranch">
                                            <label>Flat to Branch</label>
                                        </div>

                                        <div class="col-md-2">

                                            <input id="chkIsCompany" type="checkbox" name="IsFlatToCompany">
                                            <label>Flat to Company</label>

                                        </div>

                                    </div>
                                    <div class="row">

                                        <div class="col-md-9">


                                            <textarea rows="3" id="txtChargesComments" name="ChargesComments" class="form-control" required placeholder="Comments"></textarea>
                                        </div>
                                        <div class="col-md-3 text-right">
                                            <label></label>
                                            @*<a id="btnAddCharges"
                                                class="btn btn-primary  float-right"
                                                style="background-color: #e80000;margin-top: 30px"><i class="fa fa-plus"></i> Add New Charge</a>*@


                                            <button class="btn btn-primary ThemeColor" type="button" id="btnAddCharges" style="color: white;background-color: #e80000;">
                                                <i class="fa fa-plus"></i> Add New Charge
                                            </button>

                                        </div>

                                    </div>

                                </div>

                                <br />

                                <div class="row">
                                    <div class="col-lg-12">

                                        <div class="row">
                                            <div class="col-md-5">
                                                <h4 style="Color:black;font-size:15px;font-weight:bold">Commission  Charges</h4>
                                            </div>
                                            <div class="col-md-7">
                                                @*<a onclick="changeLabel('AC')" id="btnAddCommission" href="#" data-toggle="modal" data-target="#AddCommissionDeduction"
                                                    class=" open-AddBookDialog btn btn-primary  float-right"
                                                    style="background-color: #e80000;"><i class="fa fa-plus"></i>Add Commission Charges</a>*@
                                            </div>
                                        </div>



                                        <div class="table-responsive">
                                            <table style="font-size:12px" class="table table-condensed table-sm table-striped mb-0" id="tblCharges">
                                                <thead>
                                                    <tr>


                                                        <th>Customer</th>
                                                        <th>Charge</th>
                                                        <th>Type</th>
                                                        <th>By</th>
                                                        <th>On</th>
                                                        <th>Agent</th>
                                                        <th>Branch</th>
                                                        <th>Company</th>
                                                        <th>Carrier</th>
                                                        <th>QP</th>

                                                        <th></th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var LoadCharges in ViewBag.LoadCharges)
                                                    {
                                                        if (@LoadCharges.IsCommissionCharge == true)
                                                        {

                                                            <tr>
                                                                <td>@LoadCharges.BrokerCharges</td>
                                                                <td>@LoadCharges.ChargesFor</td>
                                                                <td>Commission</td>
                                                                <td>Jack</td>
                                                                <td></td>


                                                                <td>@LoadCharges.AgentCharges</td>
                                                                <td>@LoadCharges.BranchCharges</td>
                                                                <td>@LoadCharges.CompanyCharges</td>
                                                                <td>@LoadCharges.CarrierCharges</td>
                                                                <td>QP</td>
                                                                <td hidden>@LoadCharges.IsFlatToAgent</td>
                                                                <td hidden>@LoadCharges.IsFlatToBranch</td>
                                                                <td hidden>@LoadCharges.IsFlatToCompany</td>
                                                                <td hidden>@LoadCharges.IsQuickPay</td>
                                                                <td hidden>@LoadCharges.IsCommissionCharge</td>
                                                                <td hidden>@LoadCharges.Comments</td>
                                                                @*<td>QP</td>*@

                                                                <td><a class="btn" onclick="RemoveCommission(this)" style="background-color: #7c0710; color: white; padding: 0px 7px;"> <i class="fa fa-close"></i></a></td>

                                                                @*var btnRemove = $("
                                                                    <input />");
                                                                    btnRemove.attr("type", "button");
                                                                    btnRemove.attr("onclick", "RemoveCommission(this);");
                                                                    btnRemove.val("x");
                                                                    btnRemove.attr("style", "background - color: #7c0710; color: white; padding: 0px 7px;");
                                                                    btnRemove.attr("class", "btn");*@
                                                            </tr>
                                                        }


                                                    }



                                                </tbody>


                                            </table>
                                        </div>


                                    </div>

                                </div>


                                <br />
                                <div class="row">
                                    <div class="col-lg-12">

                                        <div class="card-block">

                                            <div class="row">
                                                <div class="col-md-3">
                                                    <h4 style="Color:black;font-size:15px;font-weight:bold">Deduction  Charges</h4>
                                                </div>
                                                <div class="col-md-9">
                                                    @*<a onclick="changeLabel('AD')" id="AddDeduction" href="#" data-toggle="modal" data-target="#AddCommissionDeduction"
                                                        class=" open-AddBookDialog btn btn-primary  float-right"
                                                        style="background-color: #e80000;"><i class="fa fa-plus"></i>Add Deduction Charges</a>*@
                                                </div>
                                            </div>


                                            <div class="table-responsive">
                                                <table style="font-size:12px" class="table table-condensed table-sm table-striped mb-0" id="tblDeduction">
                                                    <thead>
                                                        <tr>



                                                            <th>Customer</th>
                                                            <th>Charge</th>
                                                            <th>Type</th>
                                                            <th>By</th>
                                                            <th>On</th>
                                                            <th>Agent</th>
                                                            <th>Branch</th>
                                                            <th>Company</th>
                                                            <th>Carrier</th>
                                                            <th>QP</th>

                                                            <th></th>

                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var LoadCharges in ViewBag.LoadCharges)
                                                        {
                                                            if (@LoadCharges.IsCommissionCharge == false)
                                                            {

                                                                <tr>
                                                                    <td>@LoadCharges.BrokerCharges</td>
                                                                    <td>@LoadCharges.ChargesFor</td>
                                                                    <td>Deduction</td>
                                                                    <td>Jack</td>
                                                                    <td></td>


                                                                    <td>@LoadCharges.AgentCharges</td>
                                                                    <td>@LoadCharges.BranchCharges</td>
                                                                    <td>@LoadCharges.CompanyCharges</td>
                                                                    <td>@LoadCharges.CarrierCharges</td>
                                                                    <td>QP</td>
                                                                    <td hidden>@LoadCharges.IsFlatToAgent</td>
                                                                    <td hidden>@LoadCharges.IsFlatToBranch</td>
                                                                    <td hidden>@LoadCharges.IsFlatToCompany</td>
                                                                    <td hidden>@LoadCharges.IsQuickPay</td>
                                                                    <td hidden>@LoadCharges.IsCommissionCharge</td>
                                                                    <td hidden>@LoadCharges.Comments</td>
                                                                    <td><a class="btn" onclick="RemoveDeduction(this)" style="background-color: #7c0710; color: white; padding: 0px 7px;"> <i class="fa fa-close"></i></a></td>

                                                                </tr>
                                                            }


                                                        }

                                                    </tbody>


                                                </table>
                                            </div>
                                        </div>

                                    </div>



                                </div>
                                @*<div class="text-right"><
                                        <button type="submit" class="btn btn-primary">Submit</button>
                                    </div>*@

                                @*}*@


                            </div>

                            <br />
                            @*<div class="row">
                                    <div class="col-md-12 text-right">

                                        <input class="btn btn-primary text-right" style="background-color: #e80000;" type="button" id="btnSaveCharges" value="Save Charges" />

                                    </div>

                                </div>*@
                        </form>
                        <div class="row">
                            <div class="col-md-12">


                                @*<a id="btnSaveCharges" href="#"
                                    class="btn btn-primary type=" sub" float-right"
                                    style="background-color: #e80000;"><i class="fa fa-plus"></i> Save Load</a>*@


                                @*<a id="btnSaveCharges" href="#"
                                    class="btn btn-primary  float-right"
                                    style="background-color: #e80000;"><i class="fa fa-plus"></i> Save Load</a>*@







                                @*<button id="btnSaveCharges" href="#" type="button"
                                            class="btn btn-primary type=" sub" float-right"
                                            style="background-color: #e80000;">
                                        <i class="fa fa-plus"></i>
                                        Save Load
                                    </button>*@


                            </div>

                        </div>
                    </div>
                    <footer style="background-color: #fafafa">
                        <div class="row text-center">
                            <div class="col-md-2 offset-1">
                                Customer Amount:
                                <input class="form-control" value="0" readonly type="text" id="txtBrokerAmount" required name="BrokerAmount">
                            </div>
                            <div class="col-md-2">

                                Agent Gross:
                                <input class="form-control" value="0" readonly type="text" id="txtAgentGross" required name="AgentGross">
                            </div>
                            <div class="col-md-2">
                                Agent Flat:
                                <input class="form-control" readonly type="text" id="txtAgentFlat" required name="ShipperSearch">
                            </div>
                            <div class="col-md-2">
                                Branch Flat:
                                <input class="form-control" readonly type="text" id="txtBranchFlat" required name="ShipperSearch">
                            </div>
                            <div class="col-md-2 right">
                                Carrier Amount:
                                <input class="form-control" value="0" readonly type="text" id="txtCarrierAmount" required name="CarrierAmount">
                            </div>


                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                <div class="form-group">
                                    <h4 class="card-title">Document Upload <strong id="documentgif" style="display:none"> <img id='LoginLoader' style='Width: 34px!important; height: 30px!important' src='~/assets/img/loaders.gif' />... Please wait</strong></h4>

                                </div>
                            </div>

                            <div class="col-md-4 text-right">
                                <div class="form-group">
                                    Future load manager  <input name="ManagerFutureLoadText" id="chkIsFutureManageLoad" style="font-size:10px" type="checkbox" />


                                </div>
                            </div>
                            <div class="col-md-4 text-right">
                                <div class="form-group">
                                    Future Load  <input id="chkIsFutureLoad" style="font-size:10px" type="checkbox" />
                                    &nbsp;
                                    <input style="width:60%" disabled type="text" name="FutureLoadText" id="txtFutureLoadText" />

                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-10">
                                <div class="form-group">
                                    @*<input id="file-upload" type="file" class="file" data-upload-url="Load/UploadFiles/?LoaderName=@LoaderNumber"
                                        multiple="multiple" name="files">*@

                                    @*<input style="width:70% !important" id="file-upload" type="file"
                                               multiple="multiple" name="files">
                                        <input type="button" id="btnUpload" value="Upload Files" />*@

                                    <div class="input-group">
                                        @*<div class="input-group-prepend">
                                                <input type="button" id="btnUpload" value="Upload File" />
                                            </div>*@
                                        <div class="custom-file">
                                            <input class="custom-file-input" id="file-upload" type="file"
                                                   multiple="multiple" name="files"
                                                   aria-describedby="inputGroupFileAddon01">
                                            <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                                        </div>
                                    </div>


                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="text-right">
                                    <button type="button" onclick="SaveLoadInformation()" id="btnSaveLoad" class="btn btn-primary ThemeColor">Update Load</button>
                                    @*<button type="button" onClick="ClearLoadData()" style="background-color:red !important" class="btn btn-danger">Cancel</button>*@

                                    @*<button type="button" onClick="window.location.reload()" style="background-color:red !important" class="btn btn-danger">Cancel</button>*@

                                </div>
                            </div>


                        </div>
                        <br />
                        <div class="notifications  alert-box failure" style="display: none;float:right">
                            Fill Required Fields <span style="color:red;font-size:14px"> *</span>
                            <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                        </div>

                        <br />

                        <div class="row" id="UploadedDocuments">

                        </div>
                    </footer>

                </div>

                <br />

            </div>

        </div>

    </div>

</div>

<div id="add_Recipent" class="modal fade delete-modal" role="dialog">
    <div class="modal-dialog ">
        @using (Html.BeginForm("SaveBroker", "Definition", FormMethod.Post))
        {@Html.AntiForgeryToken()
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <p id="LoadType" class="heading lead"></p>

                <button type="button" style="color:white" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">

                    <div class="col-lg-12  ">
                        <form>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Shipper Search</label>
                                        <input class="form-control" type="text" id="txtShipperSearch" required name="ShipperSearch">

                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Helper </label>
                                        <select id="StateId" required name="StateId" onchange="getTaskList('Save')" class="form-control js-example-basic-single">
                                            <option>Select Type</option>
                                            <option value="1">Full</option>
                                            <option value="2">Partial</option>
                                        </select>


                                    </div>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Shipper</label>
                                        <input class="form-control" type="text" id="Name" required name="Name">

                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Country</label>
                                        <input class="form-control" value="United States" readonly type="text" id="MC" required name="MC">
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Phone</label>
                                        <input class="form-control" type="text" id="MC" required name="MC">
                                    </div>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Address</label>
                                        <input class="form-control" type="text" id="Name" required name="Name">

                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>City:</label>
                                        <input type="text" class="form-control">

                                    </div>

                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>State:</label>
                                        <select class=" form-control">
                                            <option>Select State</option>
                                            <option value="1">California</option>
                                            <option value="2">Texas</option>
                                            <option value="3">Florida</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Zip Code:</label>
                                        <input type="text" class="form-control">
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Date (From):</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Time (From):</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Date (To):</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Time (To):</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Appointment number:</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>


                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Trailer #:</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>

                            </div>


                            <div class="row">

                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Comment :</label>
                                        <input type="text" class="form-control">
                                    </div>

                                </div>

                            </div>

                            <div class="row">

                                <div class="col-sm-12">
                                    <div class="m-t-5 text-right">
                                        <a href="#" class="btn btn-white" data-dismiss="modal">Close</a>
                                        <button type="submit" id="submit" value="Submit" onclick=" return sendform('S')" class="btn btn-primary" style="color: white;background-color: #e80000;">Add</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    }
    </div>

</div>


<div id="AddCommissionDeduction" class="modal fade delete-modal" role="dialog">
    <div class="modal-dialog modal-lg">
        @using (Html.BeginForm("SaveBroker", "Definition", FormMethod.Post))
        {@Html.AntiForgeryToken()
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <p id="LoadTypeCharges" class="heading lead"></p>

                <button type="button" style="color:white" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>
            <div class="modal-body ">
                <div class="row">
                    <div class="col-md-2">
                        <label>Charge Name</label>
                        <select class=" form-control">
                            <option>Select Type</option>
                            <option value="1">Full</option>
                            <option value="2">Partial</option>
                        </select>

                    </div>
                    <div class="col-md-2">
                        <label>From Customer</label>
                        <input type="text" class="form-control">
                    </div>
                    <div class="col-md-2">
                        <label>Agent</label>
                        <input type="text" readonly class="form-control">
                    </div>
                    <div class="col-md-2">
                        <label>Branch</label>
                        <input type="text" readonly class="form-control">
                    </div>
                    <div class="col-md-2">
                        <label>Company</label>
                        <input type="text" readonly class="form-control">
                    </div>
                    <div class="col-md-2">
                        <label>Carrier</label>
                        <input type="text" class="form-control">
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-md-2">

                        <label>
                            <input type="checkbox" name="checkbox">Commission Charge
                        </label>

                    </div>

                    <div class="col-md-2">

                        <label>

                            <input type="checkbox" name="checkbox"> &nbsp;&nbsp; Quick  Pay
                        </label>

                    </div>

                    <div class="col-md-2">

                        <label>
                            <input type="checkbox" name="checkbox">Flat to Agent
                        </label>

                    </div>

                    <div class="col-md-2">

                        <label>
                            <input type="checkbox" name="checkbox">Flat to Branch
                        </label>

                    </div>

                    <div class="col-md-2">

                        <label>
                            <input type="checkbox" name="checkbox">Flat to Company
                        </label>

                    </div>

                </div>
                <div class="row">
                    <div class="col-md-12">


                        <textarea rows="5" cols="5" name="comments" class="form-control" required placeholder="Comments"></textarea>
                    </div>


                </div>
                <div class="row">
                    <div class="col-md-12">

                        <a onclick="changeLabel('P')" id="AddPickup" href="#" data-toggle="modal" data-target="#add_Recipent"
                           class=" open-AddBookDialog btn btn-primary  float-right"
                           style="background-color: #e80000;"><i class="fa fa-plus"></i> Add</a>
                    </div>

                </div>


            </div>
        </div>
    }
    </div>

</div>



<div id="CreditCheckModel" class="modal fade delete-modal" role="dialog">
    <div class="modal-dialog ">

        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <p class="heading lead">Credit Check</p>

                @*<button type="button" style="color:white" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true" class="white-text">&times;</span>
                    </button>*@
            </div>
            <div class="modal-body ">
                <div class="row">
                    <div class="col-lg-12">
                        <form>


                            <div class="form-group">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <label>Broker </label>
                                    </div>
                                    <div class="col-lg-6">
                                        <label>Company Profile </label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <select id="BrokerModelid" name="BrokerModelid" onchange="SelectedIndexChanged(this,'B')" class="js-example-basic-multiple" required>
                                            <option value="0">Select Broker Name</option>
                                            @foreach (var item in ViewBag.broker)
                                            {
                                                <text>
                                                    <option value="@item.Value">@item.Text</option>

                                                </text>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-lg-6">
                                        <select id="CompanyModelid" name="CompanyModelid" onchange="SelectedIndexChanged(this,'B')" class="js-example-basic-multiple" required>
                                            <option value="0">Select Company</option>
                                            @foreach (var item in ViewBag.Company)
                                            {
                                                <text>
                                                    <option value="@item.Value">@item.Text</option>

                                                </text>
                                            }
                                        </select>
                                    </div>
                                </div>


                                <br />

                                <div class="row">
                                    <div class="col-lg-6">
                                        <label>Credit Amount </label>
                                    </div>
                                    <div class="col-lg-6">
                                        <label></label>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-6">
                                        <input type="text" id="txtCreditAmount" required name="CreditAmount" />
                                    </div>
                                    <div class="col-lg-6">
                                        @*<div class="text-right">
                                                <button type="button" id="submit"  onclick=" return sendform('S')" class="btn btn-primary" style="color: white;background-color: #e80000;">Check Credit</button>
                                            </div>*@
                                        <div class="text-right">
                                            <button type="button" id="btnCreditCheck" class="btn btn-primary">Credit Check</button>
                                            @*<button type="button" onClick="window.location.reload()" style="background-color:red !important" class="btn btn-danger">Cancel</button>*@
                                            @*<button type="submit" class="btn btn-primary">Save General</button>*@
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>

            </div>
        </div>

    </div>

</div>


<div id="Add_Shipper" class="modal fade delete-modal " role="dialog">
    <div class="modal-dialog" style="width:600px !important;">
        @*@using (Html.BeginForm("SaveShipper", "Load", FormMethod.Post, new
            {
                enctype = "multipart/form-data"
            }))
            {@Html.AntiForgeryToken()*@
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <p class="heading lead">Add Shipper</p>

                <button type="button" style="color:white" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>
            <div class="modal-body " id="ModalBody">
                <div class="row">
                    <div class="col-lg-12  ">
                        <form>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Shipper ID</label>
                                        <input readonly class="form-control" type="number" id="txtAssignID" required name="ShipperAssignId">

                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label>Shipper Name <span class="required">*</span> <small id="lblShipperNameError" style="color: red;display: none"> Enter Shipper Name </small></label>
                                        <input class="form-control" type="text" id="txtShipperNewName" required name="ShipperName">

                                    </div>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Phone<span class="required">*</span> <small id="lblShipperPhoneError" style="color: red;display: none"> Enter  Phone</small></label>
                                        <input class="form-control" type="text" id="txtShipperPhone" required name="ShipperPhone">
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label>Address<span class="required">*</span> <small id="lblShipperAddressError" style="color: red;display: none"> Enter  Address</small></label>
                                        <input class="form-control" type="text" id="txtShipperAddress" required name="ShipperAddress">
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Zip Code <span class="required">*</span> <small id="lblShipperZipCodeError" style="color: red;display: none"> Enter  Zip Code</small></label>
                                        <input class="form-control" type="number" maxlength="8" id="txtShipperZipCode" onfocusout="GetShipperStateCity()" required name="ShipperZipCode">

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>State Code <small id="lblStateCityCodeError" style="color: red;display: none">Invalid State Code</small> </label>
                                        <input class="form-control" type="text" id="txtShipperStateCode" required name="ShipperStateCode">

                                        @*<input onfocusout="GetLocation('MS')" class="form-control" type="text" id="txtShipperStateCode" required name="ShipperStateCode">*@


                                    </div>

                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>City Name <small id="lblShipperCityCodeError" style="color: red;display: none">Invalid City Name</small></label>
                                        <input readonly class="form-control" type="text" id="txtShipperCityName" required name="ShipperCity">

                                        @*<input onfocusout="GetLocation('MC')" class="form-control" type="text" id="txtShipperCityName" required name="ShipperCity">*@


                                    </div>

                                </div>
                            </div>







                            <div class="row">
                                <div class="col-md-12">
                                    <div class="m-t-5 text-right">
                                        <br />
                                        <a href="#" class="btn btn-white" data-dismiss="modal">Close</a>
                                        <button id="btnAddShipper" type="button" class="btn btn-primary ThemeColor">add</button>
                                        @*<button type="submit" class="btn btn-primary" style="color: white;background-color: #e80000;">Add</button>*@

                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        </div>
        @*}*@
    </div>

</div>




<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

<!-- Google Maps JavaScript library -->
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places&callback=initMap&key=AIzaSyD-S-cuUziy083ZS2a2X_Btnr-msbXJFnw"></script>

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.24/themes/smoothness/jquery-ui.css" />
<script type="text/javascript">

    var a = ['', '1st ', '2nd ', '3rd ', '4th ', '5th ', '6th ', '7th ', '8th ', '9th ', '10th ', '11th ', '12th ', '13th ', '14th ', '15th ', '16th ', '17th ', '18th ', '19th '];
    var b = ['', '', '20th', '21st', '22nd', '23rd', '24th', '25th', '26th', '27th'];


    function inWords(num) {
        if ((num = num.toString()).length > 9) return 'overflow';
        n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
        if (!n) return; var str = '';
        str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';
        str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';
        str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';
        str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';
        str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + ' ' : '';
        return str;
    }



     $(function () {
$("#tblPickup").sortable({
            items: 'tr:not(tr:first-child)',
            cursor: 'pointer',
            axis: 'y',
            dropOnEmpty: false,
            start: function (e, ui) {
                ui.item.addClass("selected");

            },
            stop: function (e, ui) {
                ui.item.removeClass("selected");

                var textArray = [];
                $('#tblPickup tr').each(function () {
                    textArray.push($(this).find('td:nth-child(2)').text())

                });

                $.ajax({

                    type: "POST",
                    url: "/Load/ReorderPickup",
                    data: { PickupId: textArray, LoaderNumber: $("#GetLoadNumber").val()},
                    //contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function (data) {
                        $('#txtPickupId').val(data[0].MaxPickupId);
                        //Set Deliver Pickup Label
                        $("#tblPickup #tblPickupBody").remove();
                        /*$("#tblPickup tbody tr").remove();*/



                        var img = document.createElement('img');
                        img.src = "/assets/img/Logistic-Truck_Pickup.png";
                        for (var i = 0; i < data.length; i++) {

                            if (data[i].MaxPickupId == data[i].PickUpId) {

                                document.getElementById('DeliveryPickUpInfo').innerHTML = "( Current Pickup :" + data[i].ShipperName + " , " + data[i].Address + " , " + data[i].StateCode + " )";
                            }


                            var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                            var todayDate = new Date(datevalue);
                            var format = "AM";
                            var hour = todayDate.getHours();
                            var min = todayDate.getMinutes();
                            if (hour > 11) { format = "PM"; }
                            if (hour > 12) { hour = hour - 12; }
                            if (hour == 0) { hour = 12; }
                            if (min < 10) { min = "0" + min; }
                            var Month = todayDate.getMonth() + 1;

                            //console.log("Converted date " + todayDate);

                            var PickupOrder = inWords(data[i].Pickuporder);

                            var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                            /*var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;*/

                            var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                            var todayDate = new Date(datevalue);
                            var format = "AM";
                            var hour = todayDate.getHours();
                            var min = todayDate.getMinutes();
                            if (hour > 11) { format = "PM"; }
                            if (hour > 12) { hour = hour - 12; }
                            if (hour == 0) { hour = 12; }
                            if (min < 10) { min = "0" + min; }
                            var Month = todayDate.getMonth() + 1;
                            var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                            tr = $('<tr id="tblPickupBody"/>');


                            tr.append("<td hidden class='txtpickuporder'>" + data[i].Pickuporder + "</td>");
                            tr.append("<td hidden class='PickUpId'>" + data[i].PickUpId + "</td>");
                            tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
                            tr.append("<td>" + PickupOrder + " pick up, " + data[i].Information + ", " + DateFrom + "</td>");
                            tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                            tr.append("<td hidden>" + data[i].CountryName + "</td>");
                            tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                            tr.append("<td  class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                            tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                            tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                            tr.append("<td  class='CityName' hidden>" + data[i].CityName + "</td>");
                            tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom + "</td>");
                            tr.append("<td  class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                            tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                            tr.append("<td  class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                            tr.append("<td  class='Comments' hidden>" + data[i].Comments + "</td>");
                            tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                            tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                            tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");


                            tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
                            tr.append("<td><input type='button' onclick='RemovePickup(" + data[i].PickUpId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");

                            tr.append("<td><i id='btnCopyPickup' style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyPickup'></i></td>");

                            $('#tblPickup').append(tr);

                            $('#txtpickuporder').val(data[i].Pickuporder + 1);
                        }

                        //IsSave 2 means Update
                        if (data[0].IsSave == 2) {
                            document.getElementById("btnAddPickup").disabled = false;
                            document.getElementById("btnAddPickup").innerText = '+ Add Pickup';
                            document.getElementById("btnAddDelivery").disabled = false;
                        }
                        //IsSave 1 means Insert
                        else if (data[0].IsSave == 1) {
                            document.getElementById("btnAddPickup").disabled = false;
                            document.getElementById("btnAddDelivery").disabled = false;
                        }
                        ClearFields();

                    }
                });

            },
            receive: function (e, ui) {
                $(this).find("tbody").append(ui.item);

            }


        });



        $("#tblDelivery").sortable({
            items: 'tr:not(tr:first-child)',
            cursor: 'pointer',
            axis: 'y',
            dropOnEmpty: false,
            start: function (e, ui) {
                ui.item.addClass("selected");

            },
            stop: function (e, ui) {
                ui.item.removeClass("selected");

                var textArray = [];
                $('#tblDelivery tr').each(function () {
                    textArray.push($(this).find('td:nth-child(2)').text())

                });


                //Send the JSON array to Controller using AJAX.
                $.ajax({


                    type: "POST",
                    url: "/Load/ReorderDelivery",
                    data: { DeliverysId: textArray, LoaderNumber: $("#GetLoadNumber").val() },
                    //data: JSON.stringify(formData),
                    //contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function (data) {

                        $('#txtDeliveryId').val(data[0].MaxDeliveryID);
                        @*var someNumericValue = @(ViewBag.LastPickupId);*@
                        //alert(someNumericValue);

                        //$("#tblDelivery tbody tr").remove();


                        $("#tblDelivery #tblDeliveryBody").remove();

                        var img = document.createElement('img');
                        img.src = "/assets/img/Logistic-Truck_Delivery.png";









                        //$('#txtPickupId').val("111");

                        for (var i = 0; i < data.length; i++) {

                            var DeliveryOrder = inWords(data[i].Deliveryorder);
                            var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                            var todayDate = new Date(datevalue);
                            var format = "AM";
                            var hour = todayDate.getHours();
                            var min = todayDate.getMinutes();
                            if (hour > 11) { format = "PM"; }
                            if (hour > 12) { hour = hour - 12; }
                            if (hour == 0) { hour = 12; }
                            if (min < 10) { min = "0" + min; }
                            var Month = todayDate.getMonth() + 1;


                            //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                            var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                            var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                            var todayDate = new Date(datevalue);
                            var format = "AM";
                            var hour = todayDate.getHours();
                            var min = todayDate.getMinutes();
                            if (hour > 11) { format = "PM"; }
                            if (hour > 12) { hour = hour - 12; }
                            if (hour == 0) { hour = 12; }
                            if (min < 10) { min = "0" + min; }
                            var Month = todayDate.getMonth() + 1;
                            var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                            tr = $('<tr id="tblDeliveryBody"/>');
                            tr.append("<td hidden class='txtDeliveryorder'>" + data[i].Deliveryorder + "</td>");
                            tr.append("<td class='DeliveryId' hidden>" + data[i].DeliveryId + "</td>");
                            tr.append("<td class='DeliveryPickupId' hidden>" + data[i].PickUpId + "</td>");

                            tr.append("<td><img class='selectDelivery' src='" + img.src + "' /></td>");
                            tr.append("<td>" + DeliveryOrder + " stop , " + data[i].Information + ", " + DateFrom + "</td>");
                            tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                            tr.append("<td hidden>" + data[i].CountryName + "</td>");
                            tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                            tr.append("<td class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                            tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                            tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                            tr.append("<td class='CityName' hidden>" + data[i].CityName + "</td>");
                            tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom + "</td>");
                            tr.append("<td class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                            tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                            tr.append("<td class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                            tr.append("<td class='Comments' hidden>" + data[i].Comments + "</td>");
                            tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                            tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                            tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");
                            tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
                            tr.append("<td><input type='button' onclick='RemoveDelivery(" + data[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");


                            tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");
                            $('#txtDeliveryporder').val(data[i].Deliveryorder + 1);
                            $('#tblDelivery').append(tr);
                        }

                        // If Save 2 means Update
                        if (data[0].IsSave == 2) {
                            document.getElementById("btnAddPickup").disabled = false;
                            document.getElementById("btnAddDelivery").innerText = '+ Add Delivery';
                            document.getElementById("btnAddDelivery").disabled = false;
                        }
                        // If Save 1 means Insert
                        else if (data[0].IsSave == 1) {
                            document.getElementById("btnAddPickup").disabled = false;
                            document.getElementById("btnAddDelivery").disabled = false;
                        }


                        ClearFields();

                    }
                });

            },
            receive: function (e, ui) {
                $(this).find("tbody").append(ui.item);

            }


        });

    });


    function Verifyduplication(Loadernumber, Type) {

        var LoaderNumber = $("#GetLoadNumber").val();

        $.ajax({
            type: "GET",
            url: "/Load/Verifyduplication/?Loadernumber=" + LoaderNumber + "&Reference=" + $("#txtBrokerReference").val() + "&Type=" + Type + " ",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                if (response == -1) {
                    swal({ title: "Duplicate Reference : ", text: "Duplicate Reference  '" + $("#txtBrokerReference").val() + "' Not Allowed!", type: "error" },

                    );
                    $("#txtBrokerReference").val("");
                    /*return;*/
                } else {
                    /*return;*/

                }
            }
        });
    }


    let map;
    var latitude = "";
    var longitude = "";
    google.maps.event.addDomListener(window, 'load', initilize);
    function initilize() {

        var input = document.getElementById("txtAddress");
        var places = new google.maps.places.Autocomplete(input);


        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            var address = place.formatted_address;
            var latitude = place.geometry.location.lat();
            var longitude = place.geometry.location.lng();

            $("#txtAddressLongitude").val(longitude);
            $("#txtAddressLatitude").val(latitude);
            var latlng = new google.maps.LatLng(latitude, longitude);
            var geocoder = geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                //console.log(results);

                var address = place.address_components;
                var city, state, zip;
                address.forEach(function (component) {
                    var types = component.types;
                    if (types.indexOf('locality') > -1) {
                        city = component.long_name;
                    }

                    if (types.indexOf('administrative_area_level_1') > -1) {
                        state = component.short_name;
                    }

                    if (types.indexOf('postal_code') > -1) {
                        zip = component.long_name;
                    }
                });

                //var lat = place.geometry.location.lat;
                //var lng = place.geometry.location.lng;

                //alert(city + ', ' + state + ' ' + zip);


                $("#txtZipCode").val(zip);
                $("#txtStates").val(state);
                $("#txtCity").val(city);







                //if (status == google.maps.GeocoderStatus.OK) {
                //    if (results[0]) {


                //        var address = results[0].formatted_address;
                //        var pin = results[0].address_components[results[0].address_components.length - 1].long_name;
                //        var country = results[0].address_components[results[0].address_components.length - 2].long_name;
                //        var state = results[0].address_components[results[0].address_components.length - 3].short_name;
                //        var city = results[0].address_components[results[0].address_components.length - 4].long_name;
                //        alert("Country: " + country + ", State: " + state + ", City: " + city + ", Zipcode: " + " " + pin);
                //        //return;
                //        //document.getElementById('txtCountry').value = country;
                //        //document.getElementById('txtStates').value = state;
                //        //document.getElementById('txtCity').value = city;
                //        //document.getElementById('txtZipCode').value = pin;
                //        $("#txtZipCode").val(pin);
                //        $("#txtStates").val(state);
                //        $("#txtCity").val(city);
                //    }
                //}
            });
        });

    }


    //$('#Add_Shipper').on('shown', function () {
    //    alert('test');
    //    google.maps.event.trigger(map, 'resize');
    //    //map.setCenter(new google.maps.LatLng(41, -87));
    //    google.maps.event.addDomListener(window, 'load', initilize);
    //});

    google.maps.event.addListener(map, 'click', function (event) {
        alert("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng());
    });



</script>





@*Ajax Auto Complete Search*@
<script>

    //Function to sync Date from and date to
    function Syncdate() {


        $("#txtDateTimeTo").val($("#txtdateFrom").val());
    }
    $(document).ready(function () {
        jQuery('#ddlAgent').select2();
        //on adding  pickup

        $("#txtStates").autocomplete({
            showHeader: true,

            source: function (request, response) {

                $.ajax({

                    url: "/Load/GetStateCityName",

                    type: "POST",

                    dataType: "json",

                    data: { prefix: request.term },

                    success: function (data) {

                        response($.map(data, function (item) {

                            return {

                                label: item.CityName + ', ' + item.StateCode + ', ' + item.ZipCode
                                , ZipCode: item.ZipCode

                                //label: 'Name: ' + item.CarrierName + ', ID: ' + item.AssignID + ', MC_: ' + item.MC_

                                //, AssignID: item.AssignID


                            };

                        }))

                    }

                })

            },

            select: function (event, ui) {

                //Call EmpDetails jsonResult Method
                $.getJSON("/Load/GetState/?ZipCode=" + ui.item.ZipCode + " ",
                    function (json) {
                        var tr;

                        $('#txtStates').val(json[0].StateCode);
                        $('#txtCity').val(json[0].CityName);
                        $('#txtZipCode').val(json[0].ZipCode);

                    });

            }
        });


        // on shipper modal
        $("#txtShipperStateCode").autocomplete({
            showHeader: true,
            appendTo: "#ModalBody",
            source: function (request, response) {

                $.ajax({

                    url: "/Load/GetStateCityName",

                    type: "POST",

                    dataType: "json",

                    data: { prefix: request.term },

                    success: function (data) {

                        response($.map(data, function (item) {

                            return {

                                label: item.CityName + ', ' + item.StateCode + ', ' + item.ZipCode
                                , ZipCode: item.ZipCode

                                //label: 'Name: ' + item.CarrierName + ', ID: ' + item.AssignID + ', MC_: ' + item.MC_

                                //, AssignID: item.AssignID


                            };

                        }))

                    }

                })

            },

            select: function (event, ui) {

                //Call EmpDetails jsonResult Method
                $.getJSON("/Load/GetState/?ZipCode=" + ui.item.ZipCode + " ",
                    function (json) {
                        var tr;

                        $('#txtShipperStateCode').val(json[0].StateCode);
                        $('#txtShipperCityName').val(json[0].CityName);
                        $('#txtShipperZipCode').val(json[0].ZipCode);

                    });

            }
        });

    });

</script>
<script>

    function MovePickuptoDelivery() {

        var PickupId = document.getElementById('lblPickupMoveId').textContent;
        var textArray = [];
        $('#tblPickup tr').each(function () {
            textArray.push($(this).find('td:nth-child(2)').text())

        });

        var textDeliveryArray = [];
        $('#tblDelivery tr').each(function () {
            textDeliveryArray.push($(this).find('td:nth-child(2)').text())

        });

        var LoadNumber = $("#GetLoadNumber").val()
        var model = {
            txtPickupId: PickupId,
            LoadNumber: LoadNumber,
            PickupsId: textArray,
            DeliveriesId: textDeliveryArray
        };



        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/MoveLoadPickupToDelivery",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);

                if (data.length == 0) {
                    $("#tblPickup #tblPickupBody").remove();
                    $("#tblDelivery #tblDeliveryBody").remove();
                    document.getElementById('DeliveryPickUpInfo').innerHTML = "";
                    $('#txtpickuporder').val(1);
                    $('#txtDeliveryporder').val(1);
                    return;
                }



                $('#txtPickupId').val(data[0].MaxPickupId);
                //Set Deliver Pickup Label
                $("#tblPickup #tblPickupBody").remove();
                $("#tblDelivery #tblDeliveryBody").remove();

                var img = document.createElement('img');
                img.src = "/assets/img/Logistic-Truck_Pickup.png";


                var Pickupcount = 0;
                var Deliverycount = 0;


                for (var i = 0; i < data.length; i++) {


                    if (data[i].MaxPickupId == data[i].PickUpId) {

                        document.getElementById('DeliveryPickUpInfo').innerHTML = "( Current Pickup : " + data[i].ShipperName + " , " + data[i].Address + " , " + data[i].StateCode + " )";
                    }

                    if (data[i].LoadType == 'P') {
                        Pickupcount = 1;
                        var PickupOrder = inWords(data[i].Pickuporder);
                        var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;

                        //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;
                        var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        tr = $('<tr id="tblPickupBody" />');
                        tr.append("<td hidden class='txtpickuporder'>" + data[i].Pickuporder + "</td>");
                        tr.append("<td hidden class='PickUpId'>" + data[i].PickUpId + "</td>");
                        tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
                        tr.append("<td>" + PickupOrder + " pick up , " + data[i].Information + ", " + DateFrom + "</td>");
                        tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                        tr.append("<td hidden>" + data[i].CountryName + "</td>");
                        tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                        tr.append("<td  class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                        tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                        tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                        tr.append("<td  class='CityName' hidden>" + data[i].CityName + "</td>");
                        tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                        tr.append("<td  class='DateTimeTo' hidden>" + data[i].NewDateTo+ "</td>");
                        tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                        tr.append("<td  class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                        tr.append("<td  class='Comments' hidden>" + data[i].Comments + "</td>");
                        tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                        tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                        tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");



                        tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
                        tr.append("<td><input type='button' onclick='RemovePickup(" + data[i].PickUpId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                        tr.append("<td><i id='btnCopyPickup' style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyPickup'></i></td>");
                        $('#txtpickuporder').val(data[i].Pickuporder + 1);
                        $('#tblPickup').append(tr);
                    }
                    else if (data[i].LoadType == 'D') {
                        Deliverycount = 1;
                        var DeliveryOrder = inWords(data[i].Deliveryporder);
                        var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;

                        //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;
                        var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        $('#txtDeliveryId').val(data[i].MaxDeliveryID);
                        @*var someNumericValue = @(ViewBag.LastPickupId);*@
                        //alert(someNumericValue);


                        var img = document.createElement('img');
                        img.src = "/assets/img/Logistic-Truck_Delivery.png";


                        tr = $('<tr id="tblDeliveryBody"/>');
                        tr.append("<td hidden class='txtDeliveryorder'>" + data[i].Deliveryporder + "</td>");


                        tr.append("<td class='DeliveryId' hidden>" + data[i].DeliveryId + "</td>");
                        tr.append("<td class='DeliveryPickupId' hidden>" + data[i].PickUpId + "</td>");

                        tr.append("<td><img class='selectDelivery' src='" + img.src + "' /></td>");
                        tr.append("<td>" + DeliveryOrder + " stop,  " + data[i].Information + ", " + DateFrom + "</td>");
                        tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                        tr.append("<td hidden>" + data[i].CountryName + "</td>");
                        tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                        tr.append("<td class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                        tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                        tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                        tr.append("<td class='CityName' hidden>" + data[i].CityName + "</td>");
                        tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                        tr.append("<td class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                        tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                        tr.append("<td class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                        tr.append("<td class='Comments' hidden>" + data[i].Comments + "</td>");
                        tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                        tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                        tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");
                        tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
                        tr.append("<td><input type='button' onclick='RemoveDelivery(" + data[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                        tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");

                        $('#txtDeliveryporder').val(data[i].Deliveryporder + 1);
                        $('#tblDelivery').append(tr);


                    }


                }

                if (parseInt(Pickupcount) == 0) {
                    $('#txtpickuporder').val(1);
                }
                if (parseInt(Deliverycount) == 0) {
                    $('#txtDeliveryporder').val(1);
                }






            }
        });
    }

    function MoveDeliverytoPickup() {

        var DeliveryId = document.getElementById('lblDeliveryMoveId').textContent;

        var LoadNumber = $("#GetLoadNumber").val();
        var textArray = [];
        $('#tblPickup tr').each(function () {
            textArray.push($(this).find('td:nth-child(2)').text())

        });

        var textDeliveryArray = [];
        $('#tblDelivery tr').each(function () {
            textDeliveryArray.push($(this).find('td:nth-child(2)').text())

        });
        var model = {
            txtDeliveryId: DeliveryId,
            LoadNumber: LoadNumber,
            PickupsId: textArray,
            DeliveriesId: textDeliveryArray
        };



        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/MovePickuptoDelivery",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                document.getElementById('lblPickupMoveId').innerHTML = "0";

                if (data.length == 0) {
                    $("#tblPickup #tblPickupBody").remove();
                    $("#tblDelivery #tblDeliveryBody").remove();
                    document.getElementById('DeliveryPickUpInfo').innerHTML = "";
                    $('#txtpickuporder').val(1);
                    $('#txtDeliveryporder').val(1);
                    return;
                }



                $('#txtPickupId').val(data[0].MaxPickupId);
                //Set Deliver Pickup Label
                $("#tblPickup #tblPickupBody").remove();
                $("#tblDelivery #tblDeliveryBody").remove();

                var img = document.createElement('img');
                img.src = "/assets/img/Logistic-Truck_Pickup.png";



                var Pickupcount = 0;
                var Deliverycount = 0;



                for (var i = 0; i < data.length; i++) {


                    if (data[i].MaxPickupId == data[i].PickUpId) {

                        document.getElementById('DeliveryPickUpInfo').innerHTML = "( Current Pickup : " + data[i].ShipperName + " , " + data[i].Address + " , " + data[i].StateCode + " )";
                    }

                    if (data[i].LoadType == 'P') {
                        Pickupcount = 1;
                        var PickupOrder = inWords(data[i].Pickuporder);
                        var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;


                        //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;
                        var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        tr = $('<tr id="tblPickupBody" />');
                        tr.append("<td hidden class='txtpickuporder'>" + data[i].Pickuporder + "</td>");
                        tr.append("<td hidden class='PickUpId'>" + data[i].PickUpId + "</td>");
                        tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
                        tr.append("<td>" + PickupOrder + " pick up , " + data[i].Information + ", " + DateFrom + "</td>");
                        tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                        tr.append("<td hidden>" + data[i].CountryName + "</td>");
                        tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                        tr.append("<td  class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                        tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                        tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                        tr.append("<td  class='CityName' hidden>" + data[i].CityName + "</td>");
                        tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                        tr.append("<td  class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                        tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                        tr.append("<td  class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                        tr.append("<td  class='Comments' hidden>" + data[i].Comments + "</td>");
                        tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                        tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                        tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");



                        tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
                        tr.append("<td><input type='button' onclick='RemovePickup(" + data[i].PickUpId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                        tr.append("<td><i id='btnCopyPickup' style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyPickup'></i></td>");

                        $('#txtpickuporder').val(data[i].Pickuporder + 1);
                        $('#tblPickup').append(tr);
                    }
                    else if (data[i].LoadType == 'D') {
                        Deliverycount = 1;
                        var DeliveryOrder = inWords(data[i].Deliveryporder);
                        var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;

                        //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;
                        var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        $('#txtDeliveryId').val(data[i].MaxDeliveryID);
                        @*var someNumericValue = @(ViewBag.LastPickupId);*@
                        //alert(someNumericValue);


                        var img = document.createElement('img');
                        img.src = "/assets/img/Logistic-Truck_Delivery.png";



                        tr = $('<tr id="tblDeliveryBody"/>');
                        tr.append("<td hidden class='txtDeliveryorder'>" + data[i].Deliveryporder + "</td>");
                        tr.append("<td class='DeliveryId' hidden>" + data[i].DeliveryId + "</td>");
                        tr.append("<td class='DeliveryPickupId' hidden>" + data[i].PickUpId + "</td>");

                        tr.append("<td><img class='selectDelivery' src='" + img.src + "' /></td>");
                        tr.append("<td>" + DeliveryOrder + " stop,  " + data[i].Information + ", " + DateFrom + "</td>");
                        tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                        tr.append("<td hidden>" + data[i].CountryName + "</td>");
                        tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                        tr.append("<td class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                        tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                        tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                        tr.append("<td class='CityName' hidden>" + data[i].CityName + "</td>");
                        tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                        tr.append("<td class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                        tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                        tr.append("<td class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                        tr.append("<td class='Comments' hidden>" + data[i].Comments + "</td>");
                        tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                        tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                        tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");
                        tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
                        tr.append("<td><input type='button' onclick='RemoveDelivery(" + data[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                        tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");

                        $('#txtDeliveryporder').val(data[i].Deliveryporder + 1);

                        $('#tblDelivery').append(tr);



                    }


                }


                if (parseInt(Pickupcount) == 0) {
                    $('#txtpickuporder').val(1);
                }
                if (parseInt(Deliverycount) == 0) {
                    $('#txtDeliveryporder').val(1);
                }




            }
        });
    }
    //Function to get State and city against Zip Code
    function GetLocation(type) {
        var StateCityCode;
        if (type == 'S') {
            StateCityCode = $("#txtStates").val();
        }
        else if (type == 'C') {
            StateCityCode = $("#txtCity").val();
        }
        else if (type == 'MC') {
            StateCityCode = $("#txtShipperCityName").val();
        }
        else if (type == 'MS') {
            StateCityCode = $("#txtShipperStateCode").val();
        }

        //alert(StateCityCode);
        //return;

        $.ajax({
            type: "GET",
            url: "/Definition/GetStateCityInformation/?type='" + type + "'&Filter='" + StateCityCode + "' ",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    if (response.StateName == "0") {
                        //alert("Invalid Zip Code");

                        document.getElementById('lblZipCodeError').innerHTML = 'Invalid Zip Code';

                        if (type == 'S') {
                            //$('#txtStates').focus();
                            $("#lblStateCodeError").fadeIn();
                            $("#lblStateCodeError").fadeOut(3000);
                        }
                        else if (type == 'C') {
                            //$('#txtCity').focus();
                            $("#lblCityCodeError").fadeIn();
                            $("#lblCityCodeError").fadeOut(3000);
                        }
                        else if (type == 'MC') {
                            //$('#txtCity').focus();
                            $("#lblShipperCityCodeError").fadeIn();
                            $("#lblShipperCityCodeError").fadeOut(3000);
                            //$('#txtStates').val(response.StateCode);
                            $('#txtShipperCityName').val("");
                            $('#txtShipperStateCode').val("");
                            $('#txtShipperZipCode').val("");
                        }
                        else if (type == 'MS') {
                            //$('#txtCity').focus();
                            $("#lblStateCityCodeError").fadeIn();
                            $("#lblStateCityCodeError").fadeOut(3000);
                            //$('#txtStates').val(response.StateCode);
                            $('#txtShipperCityName').val("");
                            $('#txtShipperStateCode').val("");
                            $('#txtShipperZipCode').val("");
                        }
                        $('#txtStates').val("");
                        $('#txtCity').val("");
                        $('#txtZipCode').val("");
                        $('#txtStateCode').val("");
                        //$('#txtCity').focus();
                        return;
                    }

                    if (type == 'C') {
                        $('#txtStates').val(response.StateCode);
                        $('#txtCity').val(response.CityName);
                        $('#txtStateCode').val(response.StateCode);
                        $('#txtZipCode').val(response.ZipCode);
                    }
                    else if (type == 'S') {
                        $('#txtStates').val(response.StateCode);
                        $('#txtCity').val(response.CityName);
                        $('#txtStateCode').val(response.StateCode);
                        $('#txtZipCode').val(response.ZipCode);
                    }
                    else if (type == 'MC') {
                        //$('#txtStates').val(response.StateCode);
                        $('#txtShipperCityName').val(response.CityName);
                        $('#txtShipperStateCode').val(response.StateCode);
                        $('#txtShipperZipCode').val(response.ZipCode);
                    }
                    else if (type == 'MS') {
                        //$('#txtStates').val(response.StateCode);
                        $('#txtShipperCityName').val(response.CityName);
                        $('#txtShipperStateCode').val(response.StateCode);
                        $('#txtShipperZipCode').val(response.ZipCode);
                    }



                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert("No Data");
            },
            error: function (response) {
                //alert(response.responseText);
            }
        });
    }
    //$('.Bottom Right').notify({
    //    message: { text: 'Aw yeah, It works!' }
    //}).show();

    function AlertDisableButton() {
        if (document.getElementById("btnAddDelivery").disabled) {

            $("#lblDisableDelivery").fadeIn();
            $("#lblDisableDelivery").fadeOut(3000);
        }
    }
    $('#btnAddShipper').click(function () {
        var ShipperHead = new Array();
        var ShipperList = {};
        var txtShipperName = $("#txtShipperNewName");
        var txtShipperPhone = $("#txtShipperPhone");
        var txtShipperAddress = $("#txtShipperAddress");
        var txtShipperZipCode = $("#txtShipperZipCode");
        var txtShipperStateCode = $("#txtShipperStateCode");
        var txtShipperCityName = $("#txtShipperCityName");



        if (txtShipperName.val() == "") {
            //alert('Enter Shipper Name ');
            $("#lblShipperNameError").fadeIn();
            $("#lblShipperNameError").fadeOut(3000);
            $("#txtShipperNewName").focus();
            return;
        }

        if (txtShipperPhone.val() == "") {
            //alert('Enter Shipper Name ');
            $("#lblShipperPhoneError").fadeIn();
            $("#lblShipperPhoneError").fadeOut(3000);
            $("#txtShipperPhone").focus();
            return;
        }

        if (txtShipperAddress.val() == "") {
            //alert('Enter Shipper Name ');
            $("#lblShipperAddressError").fadeIn();
            $("#lblShipperAddressError").fadeOut(3000);
            $("#txtShipperAddress").focus();
            return;
        }

        if (txtShipperZipCode.val() == "") {
            //alert('Enter Shipper Name ');
            document.getElementById('lblShipperZipCodeError').innerHTML = 'Enter Zip Code';
            $("#lblShipperZipCodeError").fadeIn();
            $("#lblShipperZipCodeError").fadeOut(3000);
            $("#txtShipperZipCode").focus();
            return;
        }


        ShipperList.ShipperName = txtShipperName.val();
        ShipperList.ShipperPhone = txtShipperPhone.val();
        ShipperList.ShipperAddress = txtShipperAddress.val();
        ShipperList.ShipperCity = txtShipperCityName.val();
        ShipperList.ShipperStateCode = txtShipperStateCode.val();
        ShipperList.ShipperStateName = txtShipperStateCode.val();
        ShipperList.ShipperZipCode = txtShipperZipCode.val();
        ShipperHead.push(ShipperList);

        var model = {
            ShipperList: ShipperHead,
        };

        $.ajax({

            type: "POST",
            url: "/Load/SaveShipper",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('#Add_Shipper').modal('hide');

              $("#txtShipperName").val("");
                $("#txtShipperPhone").val("");
                $("#txtShipperAddress").val("");
                $("#txtShipperZipCode").val("");
                $("#txtShipperStateCode").val("");
                $("#txtShipperCityName").val(""); 2


                $('#txtShipperId').val(data[0].ShipperId);
                $('#txtShipperName').val(data[0].ShipperName);
                $('#txtPhone').val(data[0].ShipperPhone);
                $('#txtZipCode').val(data[0].ShipperZipCode);
                $('#txtStates').val(data[0].ShipperStateCode);
                $('#txtCity').val(data[0].ShipperCity);
                $('#txtAddress').val(data[0].ShipperAddress);

                //$("div.success").fadeIn(300).delay(1500).fadeOut(400);
                $("div.success").fadeIn(300).delay(2000).fadeOut(400);
            }
        });

    });
    function GetShipperStateCity() {
        var ZipCode = document.getElementById("txtShipperZipCode");
        $.ajax({
            type: "GET",
            url: "/Definition/GetStateCity/?ZipCode=" + ZipCode.value + " ",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    if (response.StateName == "0") {

                        document.getElementById('lblShipperZipCodeError').innerHTML = 'Invalid Zip Code';
                        $("#lblShipperZipCodeError").fadeIn();
                        $("#lblShipperZipCodeError").fadeOut(3000);
                        $('#txtShipperStateCode').val("");
                        $('#txtShipperCityName').val("");
                        $('#txtShipperZipCode').val("");
                        //$('#txtShipperZipCode').focus();

                        return;
                    }
                    $('#txtShipperStateCode').val(response.StateCode);
                    $('#txtShipperCityName').val(response.CityName);

                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert("No Data");
            },
            error: function (response) {
                //alert(response.responseText);
            }
        });
    }


    $(function () {
        $("#chkIsFutureLoad").click(function () {
            if ($(this).is(":checked")) {
                $("#txtFutureLoadText").removeAttr("disabled");
                $("#txtFutureLoadText").focus();
            } else {
                $("#txtFutureLoadText").attr("disabled", "disabled");
                $("#txtFutureLoadText").val("");
            }
        });
    });


    $(document).ready(function () {
        //document.getElementById("btnAddDelivery").disabled = true;
        $("#txtdateFrom").val(new Date().toJSON().slice(0, 16));
        $("#txtDateTimeTo").val(new Date().toJSON().slice(0, 16));





        //Load Head Section
        var LoadHeadObject = @Html.Raw(Json.Encode(ViewBag.LoadHead));
        for (i = 0; i < LoadHeadObject.length; i++) {

            $('#txtBrokerName').val(LoadHeadObject[i].BrokerName);
            $('#txtBrokerAssignId').val(LoadHeadObject[i].BrokerId);
            $('#CompanyId').val(LoadHeadObject[i].CompanyId);
            $('#txtBrokerRate').val(LoadHeadObject[i].BrokerRate);

            $('#txtCarrierRate').val(LoadHeadObject[i].CarrierRate);

            $('#txtContactName').val(LoadHeadObject[i].BrokerContactName);
            $('#txtContactEmail').val(LoadHeadObject[i].Email);
            $('#txtContactPhone').val(LoadHeadObject[i].Phone);
            $('#txtExtension').val(LoadHeadObject[i].Extension);
            $('#txtBrokerReference').val(LoadHeadObject[i].BrokerReference);
            $('#txtDateTime').val(LoadHeadObject[i].RegistrationDate);

            $("#txtBrokerAmount").val(LoadHeadObject[i].BrokerAmout);
            $("#txtCarrierAmount").val(LoadHeadObject[i].CarrierAmount);


            $("#txtAgentGross").val((LoadHeadObject[i].BrokerRate - LoadHeadObject[i].CarrierRate).toFixed(2));


            $('#txtCarrierSearch').val(LoadHeadObject[i].CarrierName);
            $('#txtCarrierAssignId').val(LoadHeadObject[i].CarrierId);
            $('#txtDispatchName').val(LoadHeadObject[i].DispatcherName);

            //$('#txtDispatchName').val(LoadHeadObject[i].DispatcherName);
            $('#txtContactNumber').val('469-651-9059');

            //$('#txtContactNumber').val(LoadHeadObject[i].DispatcherPhone);


            $('#TruckId').val(LoadHeadObject[i].TruckId);
            $('#txtDriverName').val(LoadHeadObject[i].DriverName);
            $('#txtDriverPhone').val(LoadHeadObject[i].DriverPhone);
            $('#txtCarrierRate').val(LoadHeadObject[i].CarrierRate);
            $('#txtNumberToText').val(LoadHeadObject[i].NumberToText);
            $('#chkIsSendText').val(LoadHeadObject[i].IsSendText);
            $('#LoadTypeId').val(LoadHeadObject[i].LoadTypeId);
            $('#txtCommodity').val(LoadHeadObject[i].Commodity);
            $('#LoadSubTypeId').val(LoadHeadObject[i].LoadSubTypeId);
            $('#txtAvailable').val(LoadHeadObject[i].Available);
            $('#txtWeight').val(LoadHeadObject[i].Weight);
            $('#QuantityTypeId').val(LoadHeadObject[i].QuantityTypeId);
            $('#txtQuantity').val(LoadHeadObject[i].Quantity);
            $('#DriverTypeId').val(LoadHeadObject[i].DriverTypeId);
            $('#txtCarrierInstructions').val(LoadHeadObject[i].CarrierInstructions);

            //$('#txtBrokerAmount').val(LoadHeadObject[i].BrokerAmout);
            //$('#txtCarrierAmount').val(LoadHeadObject[i].CarrierAmount);

           /* $('#txtAgentGross').val(LoadHeadObject[i].AgentGross);*/
            //alert(LoadHeadObject[i].RegistrationDate.ToString("yyyy-MM-dd"));


            $('#txtDateTime').val(LoadHeadObject[i].RegistrationDate);
            //$('#txtQuantity').val(LoadHeadObject[i].RegistrationDate);

            //alert();

            if (LoadHeadObject[i].IsFutureLoad == true) {
                // Check
                $("#chkIsFutureLoad").prop("checked", true);
                $("#txtFutureLoadText").removeAttr("disabled");
            }

            if (LoadHeadObject[i].IsManagerFutureLoad == true) {
                // Check
                $("#chkIsFutureManageLoad").prop("checked", true);
            }

            //$('#chkIsFutureLoad').val(LoadHeadObject[i].IsFutureLoad);
            $('#txtFutureLoadText').val(LoadHeadObject[i].FutureLoadText);


        }


        //Show Uploaded Documents of load
        $("#UploadedDocuments div ").remove();
        var LoadHeadDocument = @Html.Raw(Json.Encode(ViewBag.LoadDocuments));
        for (i = 0; i < LoadHeadDocument.length; i++) {
            var path = LoadHeadDocument[i].ImagePath;
            //var filepath = result[i].ImagePath.val();
            Documents = "<div id ='DocumentsColumn' class='col-md-4'><a target = '_blank' class='social-icon text-xs-center' href ='" + path + "' ><img src='/assets/img/documentation.png'>" + LoadHeadDocument[i].FileName + "</a> <button type='button' onclick='DeleteDocument(" + LoadHeadDocument[i].FilePathId + ")' id='btnRemoveDocument' class='close' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>";

            $('#UploadedDocuments').append(Documents);
        }


        //Load Pickup Section
        var img = document.createElement('img');
        img.src = "/assets/img/Logistic-Truck_Pickup.png";

        //Get Load Pickup Data
        var LoadPickup = @Html.Raw(Json.Encode(ViewBag.LoadPickup));

        for (var i = 0; i < LoadPickup.length; i++) {

            if (LoadPickup[i].MaxPickupId == LoadPickup[i].PickUpId) {

                document.getElementById('DeliveryPickUpInfo').innerHTML = "( Current Pickup :" + LoadPickup[i].ShipperName + LoadPickup[i].Address + LoadPickup[i].StateCode + " )";
            }

            var datevalue = new Date(parseInt(LoadPickup[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
            var todayDate = new Date(datevalue);
            var format = "AM";
            var hour = todayDate.getHours();
            var min = todayDate.getMinutes();
            if (hour > 11) { format = "PM"; }
            if (hour > 12) { hour = hour - 12; }
            if (hour == 0) { hour = 12; }
            if (min < 10) { min = "0" + min; }
            var Month = todayDate.getMonth() + 1;
            //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;
            var PickupOrder = inWords(LoadPickup[i].Pickuporder);

            var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

            var datevalue = new Date(parseInt(LoadPickup[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
            var todayDate = new Date(datevalue);
            var format = "AM";
            var hour = todayDate.getHours();
            var min = todayDate.getMinutes();
            if (hour > 11) { format = "PM"; }
            if (hour > 12) { hour = hour - 12; }
            if (hour == 0) { hour = 12; }
            if (min < 10) { min = "0" + min; }
            var Month = todayDate.getMonth() + 1;
            var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

            tr = $('<tr id="tblPickupBody"/>');

            tr.append("<td hidden class='txtpickuporder'>" + LoadPickup[i].Pickuporder + "</td>");
            tr.append("<td hidden class='PickUpId'>" + LoadPickup[i].PickUpId + "</td>");
            tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
            tr.append("<td>" + PickupOrder + " pick up , " + LoadPickup[i].Information + ", " + DateFrom + "</td>");
            tr.append("<td class='ShipperName' hidden>" + LoadPickup[i].ShipperName + "</td>");
            tr.append("<td hidden>" + LoadPickup[i].CountryName + "</td>");
            tr.append("<td class='Address' hidden>" + LoadPickup[i].Address + "</td>");
            tr.append("<td  class='Phone' hidden>" + LoadPickup[i].PhoneNumber + "</td>");
            tr.append("<td class='ZipCode' hidden>" + LoadPickup[i].ZipCode + "</td>");
            tr.append("<td class='StateCode' hidden>" + LoadPickup[i].StateCode + "</td>");
            tr.append("<td  class='CityName' hidden>" + LoadPickup[i].CityName + "</td>");
            tr.append("<td class='DateTimeFrom' hidden>" + LoadPickup[i].NewDateFrom + "</td>");
            tr.append("<td  class='DateTimeTo' hidden>" + LoadPickup[i].NewDateTo + "</td>");
            tr.append("<td  class='Traitor' hidden>" + LoadPickup[i].Traitor + "</td>");
            tr.append("<td  class='PickupNumber' hidden>" + LoadPickup[i].PickupNumber + "</td>");
            tr.append("<td  class='Comments' hidden>" + LoadPickup[i].Comments + "</td>");
            tr.append("<td class='ShipperId' hidden>" + LoadPickup[i].ShipperId + "</td>");
            tr.append("<td class='Longitude' hidden>" + LoadPickup[i].Longitude + "</td>");
            tr.append("<td class='Latitude' hidden>" + LoadPickup[i].Latitude + "</td>");
            tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
            tr.append("<td><input type='button' onclick='RemovePickup(" + LoadPickup[i].PickUpId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
            tr.append("<td><i id='btnCopyPickup' style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyPickup'></i></td>");

            $('#tblPickup').append(tr);
            $('#txtpickuporder').val(LoadPickup[i].Pickuporder + 1);

        }



        //Get Load Delivery Data

        var img = document.createElement('img');
        img.src = "/assets/img/Logistic-Truck_Delivery.png";
 //$('#txtPickupId').val("111");

         var LoadDelivery = @Html.Raw(Json.Encode(ViewBag.LoadDelivery));

        for (var i = 0; i < LoadDelivery.length; i++) {


            var datevalue = new Date(parseInt(LoadDelivery[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
            var todayDate = new Date(datevalue);
            var format = "AM";
            var hour = todayDate.getHours();
            var min = todayDate.getMinutes();
            if (hour > 11) { format = "PM"; }
            if (hour > 12) { hour = hour - 12; }
            if (hour == 0) { hour = 12; }
            if (min < 10) { min = "0" + min; }
            var Month = todayDate.getMonth() + 1;

            //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


            var DeliveryOrder = inWords(LoadDelivery[i].Deliveryorder);
            var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

            var datevalue = new Date(parseInt(LoadDelivery[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
            var todayDate = new Date(datevalue);
            var format = "AM";
            var hour = todayDate.getHours();
            var min = todayDate.getMinutes();
            if (hour > 11) { format = "PM"; }
            if (hour > 12) { hour = hour - 12; }
            if (hour == 0) { hour = 12; }
            if (min < 10) { min = "0" + min; }
            var Month = todayDate.getMonth() + 1;
            var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

            tr = $('<tr id="tblDeliveryBody"/>');
            tr.append("<td hidden class='txtDeliveryorder'>" + LoadDelivery[i].Deliveryorder + "</td>");
            tr.append("<td class='DeliveryId' hidden>" + LoadDelivery[i].DeliveryId + "</td>");
            tr.append("<td class='DeliveryPickupId' hidden>" + LoadDelivery[i].PickUpId + "</td>");

            tr.append("<td><img class='selectDelivery' src='" + img.src + "' /></td>");
            tr.append("<td>" + DeliveryOrder + " stop , " + LoadDelivery[i].Information + ", " + DateFrom + "</td>");
            tr.append("<td class='ShipperName' hidden>" + LoadDelivery[i].ShipperName + "</td>");
            tr.append("<td hidden>" + LoadDelivery[i].CountryName + "</td>");
            tr.append("<td class='Address' hidden>" + LoadDelivery[i].Address + "</td>");
            tr.append("<td class='Phone' hidden>" + LoadDelivery[i].PhoneNumber + "</td>");
            tr.append("<td class='ZipCode' hidden>" + LoadDelivery[i].ZipCode + "</td>");
            tr.append("<td class='StateCode' hidden>" + LoadDelivery[i].StateCode + "</td>");
            tr.append("<td class='CityName' hidden>" + LoadDelivery[i].CityName + "</td>");
            tr.append("<td class='DateTimeFrom' hidden>" + LoadDelivery[i].NewDateFrom + "</td>");
            tr.append("<td class='DateTimeTo' hidden>" + LoadDelivery[i].NewDateTo + "</td>");
            tr.append("<td  class='Traitor' hidden>" + LoadDelivery[i].Traitor + "</td>");
            tr.append("<td class='PickupNumber' hidden>" + LoadDelivery[i].PickupNumber + "</td>");
            tr.append("<td class='Comments' hidden>" + LoadDelivery[i].Comments + "</td>");
            tr.append("<td class='ShipperId' hidden>" + LoadDelivery[i].ShipperId + "</td>");
            tr.append("<td class='Longitude' hidden>" + LoadDelivery[i].Longitude + "</td>");
            tr.append("<td class='Latitude' hidden>" + LoadDelivery[i].Latitude + "</td>");
            tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
            tr.append("<td><input type='button' onclick='RemoveDelivery(" + LoadDelivery[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
            tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");
            $('#txtDeliveryporder').val(LoadDelivery[i].Deliveryorder + 1);
            $('#tblDelivery').append(tr);
        }



    });

    function ClearLoadData() {
        $.ajax({
            url: '/Load/DeleteLoadData',
            type: "POST",
            success: function (result) {
                location.reload();
            },
            error: function (err) {
                alert(err.statusText);
            }
        });
    }

    //$('#btnUpload').click(function () {

        $('#file-upload').change(function () {

            document.getElementById("documentgif").style.display = "block";
        // Checking whether FormData is available in browser
        if (window.FormData !== undefined) {

            var fileUpload = $("#file-upload").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }
            var LoaderName = $("#GetLoadNumber").val();

            // Adding one more key to FormData object
            fileData.append('LoaderName', LoaderName);

            $.ajax({
                url: '/EditLoad/UploadFiles',
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result) {
                    document.getElementById("documentgif").style.display = "none";
                    var Documents;

                    if (result != '1') {
                        $("#UploadedDocuments div ").remove();
                        for (var i = 0; i < result.length; i++) {
                            var path = result[i].ImagePath;
                            //var filepath = result[i].ImagePath.val();
                            Documents = "<div id ='DocumentsColumn' class='col-md-4'><a target = '_blank' class='social-icon text-xs-center' href ='" + path + "' ><img src='/assets/img/documentation.png'>" + result[i].FileName + "</a> <button type='button' onclick='DeleteDocument(" + result[i].FilePathId + ")' id='btnRemoveDocument' class='close' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>";

                            $('#UploadedDocuments').append(Documents);
                        }
                    }

                },
                error: function (err) {
                    document.getElementById("documentgif").style.display = "none";
                    alert(err.statusText);
                }
            });
        } else {
            document.getElementById("documentgif").style.display = "none";
            alert("FormData is not supported.");
        }
    });
    function DeleteDocument(value) {

        $("#file-upload").val("");
        var LoaderName = $("#GetLoadNumber").val();
        $.ajax({
            url: '/EditLoad/DeleteDocument?FilePathId=' + value + '&LoadNumber='+ LoaderName+'',
            type: "POST",
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            success: function (result) {


                var Documents;

                $("#UploadedDocuments div ").remove();
                for (var i = 0; i < result.length; i++) {

                    var path = result[i].ImagePath;
                    //var filepath = result[i].ImagePath.val();
                    Documents = "<div id ='DocumentsColumn' class='col-md-4'><a target = '_blank' class='social-icon text-xs-center' href ='" + path + "' ><img src='/assets/img/documentation.png'>" + result[i].FileName + "</a> <button type='button' onclick='DeleteDocument(" + result[i].FilePathId + ")' id='btnRemoveDocument' class='close' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>";

                    $('#UploadedDocuments').append(Documents);
                }
            },
            error: function (err) {
                alert(err.statusText);
            }
        });
    }

</script>
@*Save Load on Save button Click*@
<script type="text/javascript">
    function SaveLoadInformation() {
        var RegistrationDate;


        //Get Load Head Data
        var LoadHead = new Array();
        var LoadHeadList = {};

        //Get Truck Form Data
        var txtBrokerName = $("#txtBrokerName");
        var txtBrokerAssignId = $("#txtBrokerAssignId");
        var CompanyId = $("#CompanyId").find("option:selected").val();
        var txtBrokerRate = $("#txtBrokerRate");
        var txtContactName = $("#txtContactName");
        var txtContactEmail = $("#txtContactEmail");
        var txtContactPhone = $("#txtContactPhone");
        var txtExtension = $("#txtExtension");
        var Reference = $("#txtBrokerReference");
        var txtDateTime = $("#txtDateTime");

        var txtCarrierSearch = $("#txtCarrierSearch");
        var txtCarrierAssignId = $("#txtCarrierAssignId");
        var txtDispatchName = $("#txtDispatchName");
        var txtContactNumber = $("#txtContactNumber");
        var TruckId = $("#TruckId").find("option:selected").val();
        var txtDriverName = $("#txtDriverName");
        var txtDriverPhone = $("#txtDriverPhone");
        var txtCarrierRate = $("#txtCarrierRate");
        var txtNumberToText = $("#txtNumberToText");
        var chkIsSendText = $("#chkIsSendText").is(':checked');
        var LoadTypeId = $("#LoadTypeId").find("option:selected").val();
        var txtCommodity = $("#txtCommodity");
        var LoadSubTypeId = $("#LoadSubTypeId").find("option:selected").val();
        var txtAvailable = $("#txtAvailable");
        var txtWeight = $("#txtWeight");

        var QuantityTypeId = $("#QuantityTypeId").find("option:selected").val();
        var txtQuantity = $("#txtQuantity");
        var DriverTypeId = $("#DriverTypeId").find("option:selected").val();
        var txtCarrierInstructions = $("#txtCarrierInstructions");

        var txtAgentGross = $("#txtAgentGross");

        var BrokerAmount = $("#txtBrokerAmount");
        var CarrierAmount = $("#txtCarrierAmount");

        var FutureLoadText = $("#txtFutureLoadText");

        var IsFutureLoad = $("#chkIsFutureLoad").is(':checked');
        var IsManagerFutureLoad = $("#chkIsFutureManageLoad").is(':checked');
        //var txtComments  = $("#txtComments");
        var txtpickuporder = $('#txtpickuporder').val();
        if (txtBrokerName.val() == "") {
            //alert("Enter Broker Name")
            document.getElementById("ErrorFieldName").innerHTML = "Select Customer";

            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtBrokerName").focus();

            return;
        }

        if (CompanyId == "0") {
            document.getElementById("ErrorFieldName").innerHTML = "Select Company";
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            //alert("Select Company");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#CompanyId").focus();
            return;
        }

        if (txtBrokerRate.val() == "" || txtBrokerRate.val() == "0") {
            //alert("Enter Broker Rate");

            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Enter Customer Rate";
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtBrokerRate").focus();
            return;
        }
        if (Reference.val() == "") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Enter Customer Reference No";
            //alert("Enter Broker Rate");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtBrokerReference").focus();
            return;
        }
        if (txtCarrierSearch.val() == "") {
            //alert("Enter Carrier");
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Select Carrier";
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtCarrierSearch").focus();
            return;
        }
        //if (TruckId == "0") {
        //    //alert("Select Truck");

        //    $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
        //    $("#TruckId").focus();
        //    return;
        //}
        if (txtCarrierRate.val() == "" || txtCarrierRate.val() == "0") {
            //alert("Enter Carrier Rate");
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Enter Carrier Rate";

            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtCarrierRate").focus();
            return;
        }
        if (LoadTypeId == "0") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Select Load Type";
            //alert("Select Load Type");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#LoadTypeId").focus();
            return;
        }

        if (LoadSubTypeId == "0") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Select Load Type";
            //alert("Select Full/Partial Load");

            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);

            $("#LoadSubTypeId").focus();
            return;
        }

        //var txtWeight = $("#txtWeight");


        if (txtWeight.val() == "") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Enter Weight";
            //alert("Select Driver Type");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtWeight").focus();
            return;
        }

        //var QuantityTypeId = $("#QuantityTypeId").find("option:selected").val();

        if (QuantityTypeId == "0") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Select Quantity Type";
            //alert("Select Driver Type");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#QuantityTypeId").focus();
            return;
        }


        if (txtQuantity.val() == "") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Enter Quantity";
            //alert("Select Driver Type");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtQuantity").focus();
            return;
        }



        //var QuantityTypeId = $("#QuantityTypeId").find("option:selected").val();

        if (DriverTypeId == "0") {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
            document.getElementById("ErrorFieldName").innerHTML = "Select Driver Type";
            //alert("Select Driver Type");
            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#DriverTypeId").focus();
            return;
        }

        //if (DriverTypeId == "0") {
        //    //alert("Select Driver Type");


        //    $("div.failure").fadeIn(300).delay(2000).fadeOut(400);

        //    $("#DriverTypeId").focus();
        //    return;
        //}



        //alert(txtBrokerAssignId.val());
        var ddlAgent = $("#ddlAgent").val();
        var RegistrationDate = $("#txtDateTimeShow").val();
        var LoadInfo = {};

        LoadInfo.BrokerId = txtBrokerAssignId.val();
        LoadInfo.BrokerName = txtBrokerName.val();
        LoadInfo.CompanyId = CompanyId;
        LoadInfo.BrokerRate = txtBrokerRate.val();
        LoadInfo.Extension = txtExtension.val();
        LoadInfo.BrokerReference = Reference.val();
        /*LoadInfo.RegistrationDate = RegistrationDate;*/

        LoadInfo.RegistrationDate = RegistrationDate;

        LoadInfo.User_ID = ddlAgent;
        /*RegistrationDate = txtDateTime.val();*/
        LoadInfo.CarrierId = txtCarrierAssignId.val();
        LoadInfo.DispatcherName = txtDispatchName.val();
        LoadInfo.DispatcherPhone = txtContactNumber.val();
        LoadInfo.TruckId = TruckId;
        LoadInfo.DriverName = txtDriverName.val();
        LoadInfo.DriverPhone = txtDriverPhone.val();
        LoadInfo.CarrierRate = txtCarrierRate.val();
        LoadInfo.NumberToText = txtNumberToText.val();
        LoadInfo.IsSendText = chkIsSendText;
        LoadInfo.LoadTypeId = LoadTypeId;
        LoadInfo.Commodity = txtCommodity.val();
        LoadInfo.LoadSubTypeId = LoadSubTypeId;

        LoadInfo.Available = txtAvailable.val();
        LoadInfo.Weight = txtWeight.val();
        LoadInfo.QuantityTypeId = QuantityTypeId;
        LoadInfo.Quantity = txtQuantity.val();
        LoadInfo.DriverTypeId = DriverTypeId;
        LoadInfo.CarrierInstructions = txtCarrierInstructions.val();

        LoadInfo.AgentGross = txtAgentGross.val();
        LoadInfo.Comment = txtCarrierInstructions.val();

        LoadInfo.BrokerAmout = BrokerAmount.val();
        LoadInfo.CarrierAmount = CarrierAmount.val();
        LoadInfo.FutureLoadText = FutureLoadText.val();


        LoadInfo.IsFutureLoad = IsFutureLoad;
        LoadInfo.IsManagerFutureLoad = IsManagerFutureLoad;
        /*        LoadHead.push(LoadHeadList);*/


        //Get Load Charges Data
        //Loop through the Table rows and build a JSON array.
        var Charges = new Array();
        var Charge = {};
        $("#tblCharges TBODY TR ").each(function () {
            var row = $(this);
            var customer = {};


            Charge.BrokerCharges = row.find("TD").eq(0).html();
            Charge.ChargesFor = row.find("TD").eq(1).html();
            Charge.IsFlatToAgent = row.find("TD").eq(10).html();
            if (Charge.IsFlatToAgent == "") {
                Charge.IsFlatToAgent = false;
            }

            Charge.AgentCharges = row.find("TD").eq(5).html();

            Charge.IsFlatToBranch = row.find("TD").eq(11).html();

            if (Charge.IsFlatToBranch == "") {
                Charge.IsFlatToBranch = false;
            }
            Charge.BranchCharges = row.find("TD").eq(6).html();

            Charge.IsFlatToCompany = row.find("TD").eq(12).html();

            if (Charge.IsFlatToCompany == "") {
                Charge.IsFlatToCompany = false;
            }
            Charge.CompanyCharges = row.find("TD").eq(7).html();

            Charge.CarrierCharges = row.find("TD").eq(8).html();
            Charge.IsQuickPay = row.find("TD").eq(13).html();

            if (Charge.IsQuickPay == "") {
                Charge.IsQuickPay = false;
            }

            Charge.IsCommissionCharge = 1;
            Charge.IsDeductionCharge = 0;
            Charge.Comments = row.find("TD").eq(14).html();

            Charges.push(Charge);

        });


        $("#tblDeduction TBODY TR ").each(function () {
            var row = $(this);
            var customer = {};


            Charge.BrokerCharges = row.find("TD").eq(0).html();
            Charge.ChargesFor = row.find("TD").eq(1).html();
            Charge.IsFlatToAgent = row.find("TD").eq(10).html();
            if (Charge.IsFlatToAgent == "") {
                Charge.IsFlatToAgent = false;
            }

            Charge.AgentCharges = row.find("TD").eq(5).html();

            Charge.IsFlatToBranch = row.find("TD").eq(11).html();

            if (Charge.IsFlatToBranch == "") {
                Charge.IsFlatToBranch = false;
            }
            Charge.BranchCharges = row.find("TD").eq(6).html();

            Charge.IsFlatToCompany = row.find("TD").eq(12).html();

            if (Charge.IsFlatToCompany == "") {
                Charge.IsFlatToCompany = false;
            }
            Charge.CompanyCharges = row.find("TD").eq(7).html();

            Charge.CarrierCharges = row.find("TD").eq(8).html();
            Charge.IsQuickPay = row.find("TD").eq(13).html();

            if (Charge.IsQuickPay == "") {
                Charge.IsQuickPay = false;
            }

            Charge.IsCommissionCharge = 0;
            Charge.IsDeductionCharge = 1;
            Charge.Comments = row.find("TD").eq(14).html();

            Charges.push(Charge);

        });
        //var model = {
        //    LoaderNumber: LoaderNumber,
        //    Charge: Charges,
        //};

        var LoaderNumber = $("#GetLoadNumber").val();
        var model = {
            Charge: Charges,
            LoaderNumber: LoaderNumber,
            LoadHeadList: LoadInfo,
        };

        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/SaveLoadInformation",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                if (data.result == 'Redirect')
                    window.location = data.url;

                //alert(data);
                var LoaderNumber = $("#GetLoadNumber").val();

                //swal({ title: "Load Number : " + data, text: "Load Save Successfully!", type: "success" },
                //    function () {
                //        //location.reload();

                //    }
                //);
                //sweetAlert(
                //    'Load Number :'+ data,
                //    'Load Save Successfully!',
                //    'success',
                //    3000,
                //    false,
                //    function () {
                //        location.reload();
                //    }
                //)
                //location.reload(true);

            }
        });
    }
</script>





<script type="text/javascript">
    //function IsCommissionCharges(checkbox, ChargeType) {
    //    if(checkbox.checked)
    //    {
    //        alert("a");
    //    }

    //}

    //function Enable(checkbox, Enabletype)
    //{
    //    if (Enabletype == 'A') {
    //        if (checkbox.checked) {
    //            alert("a");
    //            document.getElementById('txtAgent').Enable = 'true';
    //            document.getElementById("txtAgent").setAttribute("disabled", true);
    //        }
    //    }

    //}

    $(function () {
        $("#chkIsAgent").click(function () {
            if ($(this).is(":checked")) {
                $("#txtAgent").removeAttr("disabled");
                $("#txtAgent").focus();
            } else {
                $("#txtAgent").attr("disabled", "disabled");
            }
        });
    });

    $(function () {
        $("#chkIsBranch").click(function () {
            if ($(this).is(":checked")) {
                $("#txtBranch").removeAttr("disabled");
                $("#txtBranch").focus();
            } else {
                $("#txtBranch").attr("disabled", "disabled");
            }
        });
    });

    $(function () {
        $("#chkIsCompany").click(function () {
            if ($(this).is(":checked")) {
                $("#txtCompany").removeAttr("disabled");
                $("#txtCompany").focus();
            } else {
                $("#txtCompany").attr("disabled", "disabled");
            }
        });
    });




</script>

<script>
    function changeLabel(LoadType) {
        if (LoadType == 'P') {
            let lbl = document.getElementById('LoadType');
            var Load = 'Add Pickup';
            lbl.innerHTML = '<span style="text-transform:capitalize;"> ' + Load + ' </span>';
        }
        else if (LoadType == 'D') {
            let lbl = document.getElementById('LoadType');
            var Load = 'Add Delivery';
            lbl.innerHTML = '<span style="text-transform:capitalize;"> ' + Load + ' </span>';
        }
        else if (LoadType == 'AC') {

            let lbl = document.getElementById('LoadTypeCharges');
            var Load = 'Commission Charges';

            lbl.innerHTML = '<span style="text-transform:capitalize;"> ' + Load + ' </span>';
        }
        else if (LoadType == 'AD') {
            let lbl = document.getElementById('LoadTypeCharges');
            var Load = 'Deduction Charges';
            lbl.innerHTML = '<span style="text-transform:capitalize;"> ' + Load + ' </span>';
        }




    }
</script>

<Script>
    $("body").on("click", "#btnAddCharges", function () {

        //var c = document.getElementById('chkComissionCharge').checked;



        //Reference the Name and Country TextBoxes.
        var ChargeName = $("#txtChargeName");
        var Broker = $("#txtBroker");
        var Agent = $("#txtAgent");
        var Branch = $("#txtBranch");
        var Company = $("#txtCompany");
        var Carrier = $("#txtCarrier");
        var IsFlatToAgent = document.getElementById('chkIsAgent').checked;

        var IsFlatToBranch = document.getElementById('chkIsBranch').checked;
        var IsFlatToCompany = document.getElementById('chkIsCompany').checked;
        var IsQuickPay = document.getElementById('chkIsQuickPay').checked;

        var CommissionCharge = document.getElementById('chkComissionCharge').checked;
        var QP = 'QP';

        //var Comments = $("#txtChargesComments");
        //alert(Comments);

        var Comments = document.getElementById("txtChargesComments").value;


        //Calculating Agent Gross From Commission Deduction
        var AgentGross = $("#txtAgentGross");
        var BrokerRate = $("#txtBrokerRate");
        var CarrierRate = $("#txtCarrierRate");
        var AgentGross = $("#txtAgentGross");
        var BrokerAmount = $("#txtBrokerAmount");
        var CarrierAmount = $("#txtCarrierAmount");





        if (CommissionCharge == true) {


            //var NewProfit = BrokerRate.val() + Broker.val() - CarrierRate.val() - Carrier.val();

            //AgentGross = AgentGross.val();

            var BrokerAmount = parseInt(BrokerAmount.val()) + parseInt(Broker.val());

            var CarrierAmount = parseInt(CarrierAmount.val()) + parseInt(Carrier.val());
            //Update Amounts profit for broker carrier and calculate agent gross profit

            var AgentGross = parseInt(BrokerAmount) - parseInt(CarrierAmount);
            $("#txtBrokerAmount").val(BrokerAmount);
            $("#txtCarrierAmount").val(CarrierAmount);
            $("#txtAgentGross").val(AgentGross);


            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblCharges > TBODY")[0];

            if (Broker.val() == "") {
                //alert('Enter Charges From Broker');


                $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
                $("#txtBroker").focus();
                return;
            }


            if (ChargeName.val() == "") {
                //alert('Enter Charges Name');

                $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
                $("#txtChargeName").focus();
                return;
            }

            if (Carrier.val() == "") {
                //alert('Enter Carrier Charges');


                $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
                $("#txtCarrier").focus();
                return;
            }
            if (Broker.val() != "" || ChargeName.val() != "" || Carrier.val() != "") {
                //Add Row.
                var row = tBody.insertRow(-1);

                //Add Name cell.
                //Add Country cell.
                cell = $(row.insertCell(-1));
                cell.html(Broker.val());
                cell = $(row.insertCell(-1));
                cell.html(ChargeName.val());

                cell = $(row.insertCell(-1));
                cell.html("Commission");

                cell = $(row.insertCell(-1));
                cell.html("Jack");

                var todaydate = new Date();
                var day = todaydate.getDate();
                var month = todaydate.getMonth() + 1;
                var year = todaydate.getFullYear();
                var datestring = month + "/" + day + "/" + year;
                cell = $(row.insertCell(-1));
                cell.html(datestring);


                cell = $(row.insertCell(-1));
                cell.html(Agent.val());


                cell = $(row.insertCell(-1));
                cell.html(Branch.val());

                cell = $(row.insertCell(-1));
                cell.html(Company.val());

                cell = $(row.insertCell(-1));
                cell.html(Carrier.val());

                cell = $(row.insertCell(-1));
                cell.html('QP');

                cell = $(row.insertCell(-1));
                cell.html(IsFlatToAgent);
                cell.css({ 'display': 'none' });

                cell = $(row.insertCell(-1));
                cell.html(IsFlatToBranch);
                cell.css({ 'display': 'none' });

                cell = $(row.insertCell(-1));
                cell.html(IsFlatToCompany);
                cell.css({ 'display': 'none' });



                cell = $(row.insertCell(-1));
                cell.html(IsQuickPay);
                cell.css({ 'display': 'none' });

                cell = $(row.insertCell(-1));
                cell.html(Comments);
                cell.css({ 'display': 'none' });




                //Add Button cell.
                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("type", "button");
                btnRemove.attr("onclick", "RemoveCommission(this);");
                btnRemove.val("x");
                btnRemove.attr("style", "background - color: #7c0710; color: white; padding: 0px 7px;");
                btnRemove.attr("class", "btn");
                cell.append(btnRemove);

                //Clear the TextBoxes.
                //Broker.val("");
                //Charge.val("");
                //Type.val("");
                //By.val("");
                //On.val("");
                //Agent.val("");
                //Branch.val("");
                //Company.val("");
                //Carrier.val("");
                //QP.val("");
            }
        }

        else if (CommissionCharge == false) {

            //var NewProfit = BrokerRate.val() + Broker.val() - CarrierRate.val() - Carrier.val();

            //AgentGross = AgentGross.val();

            var BrokerAmount = parseInt(BrokerAmount.val()) - parseInt(Broker.val());

            var CarrierAmount = parseInt(CarrierAmount.val()) - parseInt(Carrier.val());
            //Update Amounts profit for broker carrier and calculate agent gross profit

            var AgentGross = parseInt(BrokerAmount) - parseInt(CarrierAmount);
            $("#txtBrokerAmount").val(BrokerAmount);
            $("#txtCarrierAmount").val(CarrierAmount);
            $("#txtAgentGross").val(AgentGross);

            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblDeduction > TBODY")[0];

            if (Broker.val() == "") {
                //alert('Enter Charges From Broker');

                $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
                $("#txtBroker").focus();
                return;
            }


            if (ChargeName.val() == "") {
                //alert('Enter Charges Name');


                $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
                $("#txtChargeName").focus();
                return;
            }

            if (Carrier.val() == "") {
                //alert('Enter Carrier Charges');

                $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
                $("#txtCarrier").focus();
                return;
            }




            if (Broker.val() != "" || ChargeName.val() != "" || Carrier.val() != "") {
                //Add Row.
                var row = tBody.insertRow(-1);


                //Add Name cell.
                //Add Country cell.
                cell = $(row.insertCell(-1));
                cell.html(Broker.val());
                cell = $(row.insertCell(-1));
                cell.html(ChargeName.val());

                cell = $(row.insertCell(-1));
                cell.html("Deduction");


                cell = $(row.insertCell(-1));
                cell.html("Jack");

                var todaydate = new Date();
                var day = todaydate.getDate();
                var month = todaydate.getMonth() + 1;
                var year = todaydate.getFullYear();
                var datestring = month + "/" + day + "/" + year;
                cell = $(row.insertCell(-1));
                cell.html(datestring);


                cell = $(row.insertCell(-1));
                cell.html(Agent.val());


                cell = $(row.insertCell(-1));
                cell.html(Branch.val());

                cell = $(row.insertCell(-1));
                cell.html(Company.val());

                cell = $(row.insertCell(-1));
                cell.html(Carrier.val());

                cell = $(row.insertCell(-1));
                cell.html('QP');

                cell = $(row.insertCell(-1));
                cell.html(IsFlatToAgent);
                cell.css({ 'display': 'none' });

                cell = $(row.insertCell(-1));
                cell.html(IsFlatToBranch);
                cell.css({ 'display': 'none' });

                cell = $(row.insertCell(-1));
                cell.html(IsFlatToCompany);
                cell.css({ 'display': 'none' });



                cell = $(row.insertCell(-1));
                cell.html(IsQuickPay);
                cell.css({ 'display': 'none' });

                cell = $(row.insertCell(-1));
                cell.html(Comments);
                cell.css({ 'display': 'none' });


                //Add Button cell.
                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("type", "button");
                btnRemove.attr("onclick", "RemoveDeduction(this);");
                btnRemove.val("x");
                btnRemove.attr("style", "background - color: #7c0710; color: white; padding: 0px 7px;");
                btnRemove.attr("class", "btn");
                cell.append(btnRemove);

                //Clear the TextBoxes.
                //Broker.val("");
                //Charge.val("");
                //Type.val("");
                //By.val("");
                //On.val("");
                //Agent.val("");
                //Branch.val("");
                //Company.val("");
                //Carrier.val("");
                //QP.val("");
            }
        }

    });

    function RemoveCommission(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {

            var BrokerAmount = $("#txtBrokerAmount");
            var CarrierAmount = $("#txtCarrierAmount");


            BrokerAmount = parseInt(BrokerAmount.val()) - parseInt($("TD", row).eq(0).html());


            CarrierAmount = parseInt(CarrierAmount.val()) - parseInt($("TD", row).eq(8).html());
            //var BrokerAmount = parseInt(BrokerRate.val()) + parseInt(Broker.val()) - parseInt($("TD", row).eq(0).html());

            //var CarrierAmount = parseInt(CarrierRate.val()) + parseInt(Carrier.val() - parseInt($("TD", row).eq(8).html()));


            var AgentGross = parseInt(BrokerAmount) - parseInt(CarrierAmount);
            $("#txtBrokerAmount").val(BrokerAmount);
            $("#txtCarrierAmount").val(CarrierAmount);
            $("#txtAgentGross").val(AgentGross);



            //Get the reference of the Table.
            var table = $("#tblCharges")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };

    function RemoveDeduction(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {



            var BrokerAmount = $("#txtBrokerAmount");
            var CarrierAmount = $("#txtCarrierAmount");


            BrokerAmount = parseInt(BrokerAmount.val()) + parseInt($("TD", row).eq(0).html());


            CarrierAmount = parseInt(CarrierAmount.val()) + parseInt($("TD", row).eq(8).html());
            //var BrokerAmount = parseInt(BrokerRate.val()) + parseInt(Broker.val()) - parseInt($("TD", row).eq(0).html());

            //var CarrierAmount = parseInt(CarrierRate.val()) + parseInt(Carrier.val() - parseInt($("TD", row).eq(8).html()));


            var AgentGross = parseInt(BrokerAmount) - parseInt(CarrierAmount);
            $("#txtBrokerAmount").val(BrokerAmount);
            $("#txtCarrierAmount").val(CarrierAmount);
            $("#txtAgentGross").val(AgentGross);

            //Get the reference of the Table.
            var table = $("#tblDeduction")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };
</Script>



<script>

    $("body").on("click", "#btnAddDed", function () {
        //Reference the Name and Country TextBoxes.
        var Brokerd = $("#ChargeId");
        //var Charged = $("#Charged");
        //var Typed = $("#Typed");
        //var Byd = $("#Byd");
        //var Ond = $("#Ond");
        //var Agentd = $("#Agentd");
        //var Branchd = $("#Branchd");
        //var Companyd = $("#Companyd");
        //var Carrierd = $("#Carrierd");
        //var QPd = $("#QPd");




        //Get the reference of the Table's TBODY element.
        var tBody = $("#tblDeduction > TBODY")[0];
        if (Brokerd.val() != "") {
            //Add Row.
            var row = tBody.insertRow(-1);



            //Add Name cell.
            //Add Country cell.
            cell = $(row.insertCell(-1));
            cell.html(Brokerd.val());
            cell = $(row.insertCell(-1));
            cell.html(Charged.val());
            cell = $(row.insertCell(-1));
            cell.html(Typed.val());
            cell = $(row.insertCell(-1));
            cell.html(Byd.val());

            cell = $(row.insertCell(-1));
            cell.html(Ond.val());

            cell = $(row.insertCell(-1));
            cell.html(Agentd.val());


            cell = $(row.insertCell(-1));
            cell.html(Branchd.val());

            cell = $(row.insertCell(-1));
            cell.html(Companyd.val());

            cell = $(row.insertCell(-1));
            cell.html(Carrierd.val());

            cell = $(row.insertCell(-1));
            cell.html(QPd.val());



            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input />");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "Remove5(this);");
            btnRemove.val("x");
            btnRemove.attr("style", "background - color: #7c0710; color: white; padding: 0px 7px;");
            btnRemove.attr("class", "btn");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            Brokerd.val("");
            Charged.val("");
            Typed.val("");
            Byd.val("");
            Ond.val("");
            Agentd.val("");
            Branchd.val("");
            Companyd.val("");
            Carrierd.val("");
            QPd.val("");
        }
    });

    function Remove5(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete: " + name)) {
            //Get the reference of the Table.
            var table = $("#tblDeduction")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };
</script>

@*<script>
        $("#input-ficons-6").fileinput({
            uploadUrl: "/file-upload-batch/2",
            uploadAsync: false,
            previewFileIcon: '<i class="fas fa-file"></i>',
            preferIconicZoomPreview: true, // this will force zoom preview thumbnails to display icons for following file extensions
            previewFileIconSettings: { // configure your icon file extensions
                'doc': '<i class="fas fa-file-word text-primary"></i>',
                'xls': '<i class="fas fa-file-excel text-success"></i>',
                'ppt': '<i class="fas fa-file-powerpoint text-danger"></i>',
                'pdf': '<i class="fas fa-file-pdf text-danger"></i>',
                'zip': '<i class="fas fa-file-archive text-muted"></i>',
                'htm': '<i class="fas fa-file-code text-info"></i>',
                'txt': '<i class="fas fa-file-text text-info"></i>',
                'mov': '<i class="fas fa-file-movie-o text-warning"></i>',
                'mp3': '<i class="fas fa-file-audio text-warning"></i>',
                // note for these file types below no extension determination logic
                // has been configured (the keys itself will be used as extensions)
                'jpg': '<i class="fas fa-file-image text-danger"></i>',
                'gif': '<i class="fas fa-file-image text-warning"></i>',
                'png': '<i class="fas fa-file-image text-primary"></i>'
            },
            previewFileExtSettings: { // configure the logic for determining icon file extensions
                'doc': function (ext) {
                    return ext.match(/(doc|docx)$/i);
                },
                'xls': function (ext) {
                    return ext.match(/(xls|xlsx)$/i);
                },
                'ppt': function (ext) {
                    return ext.match(/(ppt|pptx)$/i);
                },
                'zip': function (ext) {
                    return ext.match(/(zip|rar|tar|gzip|gz|7z)$/i);
                },
                'htm': function (ext) {
                    return ext.match(/(htm|html)$/i);
                },
                'txt': function (ext) {
                    return ext.match(/(txt|ini|csv|java|php|js|css)$/i);
                },
                'mov': function (ext) {
                    return ext.match(/(avi|mpg|mkv|mov|mp4|3gp|webm|wmv)$/i);
                },
                'mp3': function (ext) {
                    return ext.match(/(mp3|wav)$/i);
                },
            }
        });
    </script>*@


@*<script>
        $("body").on("click", "#btnSavePickup", function () {
            //Loop through the Table rows and build a JSON array.
            var customers = new Array();
            var LoaderNumber = @LoaderNumber;
            $("#tblPickup TBODY TR ").each(function () {
                var row = $(this);
                var customer = {};

                customer.Information = row.find("TD").eq(2).html();
                customer.StatusFlague = row.find("TD").eq(3).html();
                customer.ShipperId = row.find("TD").eq(4).html();
                customer.ShipperName = row.find("TD").eq(5).html();
                customer.CountryId = row.find("TD").eq(6).html();
                customer.Phone = row.find("TD").eq(7).html();
                customer.Address = row.find("TD").eq(8).html();
                customer.CityId = row.find("TD").eq(9).html();
                customer.StateId = row.find("TD").eq(10).html();
                customer.ZipCode = row.find("TD").eq(11).html();
                customer.DateTimeFrom = row.find("TD").eq(12).html();
                customer.DateTimeTo = row.find("TD").eq(13).html();
                customer.AppointmentNumber = row.find("TD").eq(14).html();
                customer.Traitor = row.find("TD").eq(15).html();
                customer.Comments = row.find("TD").eq(16).html();
                customers.push(customer);


            });

            $("#tblDelivery TBODY TR ").each(function () {
                var row = $(this);
                var customer = {};

                customer.Information = row.find("TD").eq(0).html();
                customer.StatusFlague = row.find("TD").eq(1).html();
                customer.ShipperId = row.find("TD").eq(2).html();
                customer.ShipperName = row.find("TD").eq(3).html();
                customer.CountryId = row.find("TD").eq(4).html();
                customer.Phone = row.find("TD").eq(5).html();
                customer.Address = row.find("TD").eq(6).html();
                customer.CityId = row.find("TD").eq(7).html();
                customer.StateId = row.find("TD").eq(8).html();
                customer.ZipCode = row.find("TD").eq(9).html();
                customer.DateTimeFrom = row.find("TD").eq(10).html();
                customer.DateTimeTo = row.find("TD").eq(11).html();
                customer.AppointmentNumber = row.find("TD").eq(12).html();
                customer.Traitor = row.find("TD").eq(13).html();
                customer.Comments = row.find("TD").eq(14).html();
                customers.push(customer);
            });
            var model = {
                LoaderNumber: LoaderNumber,
                delivery: customers,
            };

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Load/InsertDelivery",
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");
                }
            });
        });


    </script>*@




<script>
    $("body").on("click", "#btnSaveCharges", function () {
        //Loop through the Table rows and build a JSON array.
        var customers = new Array();
        var customer = {};
     @*var LoaderNumber = @LoaderNumber;*@
        //customer.Comments = 'Hello';
        //customers.push(customer);

        $("#tblCharges TBODY TR ").each(function () {
            var row = $(this);
            var customer = {};


            customer.BrokerCharges = row.find("TD").eq(0).html();
            customer.ChargesFor = row.find("TD").eq(1).html();
            customer.IsFlatToAgent = row.find("TD").eq(10).html();
            if (customer.IsFlatToAgent == "") {
                customer.IsFlatToAgent = false;
            }

            customer.AgentCharges = row.find("TD").eq(5).html();

            customer.IsFlatToBranch = row.find("TD").eq(11).html();

            if (customer.IsFlatToBranch == "") {
                customer.IsFlatToBranch = false;
            }
            customer.BranchCharges = row.find("TD").eq(6).html();

            customer.IsFlatToCompany = row.find("TD").eq(12).html();

            if (customer.IsFlatToCompany == "") {
                customer.IsFlatToCompany = false;
            }
            customer.CompanyCharges = row.find("TD").eq(7).html();

            customer.CarrierCharges = row.find("TD").eq(8).html();
            customer.IsQuickPay = row.find("TD").eq(13).html();

            if (customer.IsQuickPay == "") {
                customer.IsQuickPay = false;
            }

            customer.IsCommissionCharge = 1;
            customer.IsDeductionCharge = 0;
            customer.Comments = row.find("TD").eq(14).html();

            customers.push(customer);

        });


        $("#tblDeduction TBODY TR ").each(function () {
            var row = $(this);
            var customer = {};


            customer.BrokerCharges = row.find("TD").eq(0).html();
            customer.ChargesFor = row.find("TD").eq(1).html();
            customer.IsFlatToAgent = row.find("TD").eq(10).html();
            if (customer.IsFlatToAgent == "") {
                customer.IsFlatToAgent = false;
            }

            customer.AgentCharges = row.find("TD").eq(5).html();

            customer.IsFlatToBranch = row.find("TD").eq(11).html();

            if (customer.IsFlatToBranch == "") {
                customer.IsFlatToBranch = false;
            }
            customer.BranchCharges = row.find("TD").eq(6).html();

            customer.IsFlatToCompany = row.find("TD").eq(12).html();

            if (customer.IsFlatToCompany == "") {
                customer.IsFlatToCompany = false;
            }
            customer.CompanyCharges = row.find("TD").eq(7).html();

            customer.CarrierCharges = row.find("TD").eq(8).html();
            customer.IsQuickPay = row.find("TD").eq(13).html();

            if (customer.IsQuickPay == "") {
                customer.IsQuickPay = false;
            }

            customer.IsCommissionCharge = 0;
            customer.IsDeductionCharge = 1;
            customer.Comments = row.find("TD").eq(14).html();

            customers.push(customer);

        });
        var model = {
            LoaderNumber: LoaderNumber,
            charges: customers,
        };
        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/Load/InsertCharges",
            data: JSON.stringify(model),
            //data: { 'ListOfVariants': customers },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                alert(r + " record(s) inserted.");
            }
        });
    });


</script>



@*Dropdown selection validation*@
<script type="text/javascript">
    function sendform(type) {
        var selectedText;
        var selectedValue;
        if (type == 'S') {
            selectedText = $("#StateId").find("option:selected").text();
            selectedValue = $("#StateId").val();
            if (selectedValue == "0") {
                alert("Select State");
                return false;
            }


            selectedText = $("#CityId").find("option:selected").text();
            selectedValue = $("#CityId").val();

            if (selectedValue == "0") {
                alert("Select City");
                return false;

            }


            //alert((document.getElementById('Name').value == ""));
            if (document.getElementById('Name').value == "") {
                return false;

            }

        }
        else if (type == 'E') {

            selectedText = $("#CountryId").find("option:selected").text();
            selectedValue = $("#CountryId").val();
            //alert("Selected Text: " + selectedText + " Value: " + selectedValue);
            if (selectedValue == "0") {
                alert("Select Country");
                return false;

            }



        }


    }

    function onSelectedIndexChanged(value) {
        alert(value);
    }
</script>


@*<script>

        $("body").on("click", "#btnSaveCharges", function () {

            //Loop through the Table rows and build a JSON array.
            var charges = new Array();
            $("#tblCharges TBODY TR ").each(function () {
                var row = $(this);
                var charge = {};


                charge.Broker = row.find("TD").eq(0).html();
                alert("TopHere");
                //charge.ChargeName = row.find("TD").eq(1).html();
                //charge.ChargeType = row.find("TD").eq(2).html();
                //charge.By = row.find("TD").eq(3).html();
                //charge.On = row.find("TD").eq(4).html();
                //charge.Agent = row.find("TD").eq(5).html();
                //charge.Branch = row.find("TD").eq(6).html();
                //charge.Company = row.find("TD").eq(7).html();
                //charge.Carrier = row.find("TD").eq(8).html();
                //charge.Carrier = row.find("TD").eq(9).html();
                charges.push(charge);
                alert("Here");

            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                traditional: true,
                url: "/Load/InsertCharges",
                data: JSON.stringify(charges),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");
                }
            });
        });


    </script>*@
<script>

    $('#Brokerid').change(function () {
        //alert($(this).val());
        if ($("#Brokerid").val() > "0") {
            $("#BrokerHelperid").select2("val", "0");
        }


    });

    $('#BrokerHelperid').change(function () {

        if ($("#BrokerHelperid").val() > "0") {
            $("#Brokerid").select2("val", "0");
        }

    });

    $('#CarrierId').change(function () {

        if ($("#CarrierId").val() > "0") {
            $("#CarrierHelperId").select2("val", "0");
        }

    });

    $('#CarrierHelperId').change(function () {

        if ($("#CarrierHelperId").val() > "0") {
            $("#CarrierId").select2("val", "0");
        }

    });


</script>

<script type="text/javascript">



    function SelectedIndexChanged(element, type) {
        var selectedText;
        var selectedValue;

        if (type == 'B') {
            //$("#BrokerHelperid").select2("val", "0");
            //selectedText = $("#Brokerid").find("option:selected").text();
            //selectedValue = $("#Brokerid").val();

            //Comment label text
            //document.getElementById("LoderBrokerIds").textContent = selectedText;

            //document.getElementById("BrokerHelperid").value = 0;
            //$('#BrokerHelperid').select2();


            //$("#select").select2("val"); //get the value
            //set the value




            //$('#BrokerHelperid').select2('destroy');

            ////Load the options:
            //$('#BrokerHelperid').append(...);

            ////Select the default option:
            //$('#BrokerHelperid').val(default_option);

            ////And finally load the select2:
            //$('#BrokerHelperid').select2()



            //$('#BrokerHelperid').val('0');
            //$('#BrokerHelperid').trigger('change');

            //$('#mySelect2').val(null).trigger('change');
            //$('#BrokerHelperid').val(0).change();
            //$('#BrokerHelperid').val(0).trigger('change');
        }

        else if (type == 'BH') {
            //$("#Brokerid").select2("val", "0");

            //selectedText = $("#BrokerHelperid").find("option:selected").text();
            //selectedValue = $("#BrokerHelperid").val();



            //$('#Brokerid').val('0');
            //$('#Brokerid').trigger('change');
            ////
            //document.getElementById("LoderBrokerIds").textContent = selectedText;
            //$('#Brokerid').val(0).change();

            //document.getElementById('Brokerid').value = 0;

            //$('#Brokerid').val(0).trigger('change');
        }
        //else if (type == 'C') {

        //    selectedText = $("#CarrierId").find("option:selected").text();
        //    selectedValue = $("#CarrierId").val();


        //    document.getElementById("lblCarrier").textContent = selectedText;

        //    //document.getElementById("lblCarrier").textContent = 'Carrier ( ' + selectedText + ',' + 'ID:' + selectedValue + ')';

        //    document.getElementById('CarrierHelperId').value = 0;
        //}


        //else if (type == 'CH') {

        //    selectedText = $("#CarrierHelperId").find("option:selected").text();
        //    selectedValue = $("#CarrierHelperId").val();


        //    document.getElementById("lblCarrier").textContent = selectedText;

        //    //document.getElementById("lblCarrier").textContent = 'Carrier Helper( ' + selectedText + ',' + 'ID:' + selectedValue + ')';

        //    document.getElementById('CarrierId').value = 0;
        //}




    }


</script>

<script>

    function getCityList(type) {
        if (type == 'Save') {


            var state_Id = $("#StateId").val();

            $.ajax({
                url: '/Load/GetCities',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({ StateId: +state_Id }),
                success: function (result) {
                    $("#CitysId").html("");
                    $("#CitysId").append
                        ($('<option></option>').val(0).html("Select City"));
                    $.each($.parseJSON(result), function (i, city) { $("#CitysId").append($('<option></option>').val(city.Value).html(city.Text)) })
                },
                error: function () { alert("Whooaaa! Something went wrong..") },
            });
        }

        else if (type == 'Edit') {
            var state_Id = $("#StateId").val();


            //var myModal = $('#Edit_Carrier');
            //var stateId = $("#CitysId", myModal).val();

            $.ajax({
                url: '/Load/GetCities',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({ cityId: +state_Id }),
                success: function (result) {
                    $("#CitysId").html("");
                    $("#CitysId").append
                        ($('<option></option>').val(null).html("Select City"));
                    $.each($.parseJSON(result), function (i, city) { $("#CitysId").append($('<option></option>').val(city.Value).html(city.Text)) })
                },
                error: function () { alert("Whooaaa! Something went wrong..") },
            });
        }

    }

</script>


@*Pickup and Delivery addition to datatatable*@

<Script>
    $("body").on("click", "#btnAddPickup", function () {


        var PickupZipcode = $('#txtZipCode').val();

        //Reference the Name and Country TextBoxes
        //var ShipperName = $("#txtShipper");

        var ShipperName = $("#txtShipper");
        var ShipperNewName = $("#txtShipperName");
        var Address = $("#txtAddress");
        var Longitude = $("#txtAddressLongitude");
        var Latitude = $("#txtAddressLatitude");
        var CityName = $("#CitysId").find("option:selected").text();
        var StateName = $("#StateId").find("option:selected").text();
        var CountryNameVal = $("#txtCountry");
        var CityNameVal = $("#CitysId").find("option:selected").val();


        var StateNameVal = $("#StateId").find("option:selected").val();
        var DateFrom = $('#txtdateFrom').val();
        var DateTo = $('#txtDateTimeTo').val();


        var Traitor = $('#txtTraitor');
        var Phone = $('#txtPhone');
        var AppointmentNumber = $('#txtAppointmentNumber').val();
        var Comments = $('#txtComments').val();

        var StateCode = $('#txtStates').val();
        var CityName = $('#txtCity').val();
        var txtPickupId = "";
        var txtpickuporder = $('#txtpickuporder').val();
        var txtShipperId = $('#txtShipperId').val();




        //Get the reference of the Table's TBODY element.
        var tBody = $("#tblPickup > TBODY")[0];

        if (ShipperNewName.val() == "") {
            //alert('Enter Shipper Name ');
            //$("#lblShipperError").fadeIn();
            //$("#lblShipperError").fadeOut(3000);



            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtShipperName").focus();
            return;
        }
        if (Address.val() == "") {
            //alert('Enter Address ');

            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtAddress").focus();
            return;
        }
        if (Phone.val() == "") {
            //alert('Enter Phone ');


            //$("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            //$("#txtPhone").focus();
            //return;
        }

        if (PickupZipcode == "") {
            //alert('Enter Zip Code ');

            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtZipCode").focus();
            return;
        }

        if (Traitor.val() == "") {
            //alert('Enter Traitor ');

            //$("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            //$("#txtTraitor").focus();
            //return;
        }
        if (AppointmentNumber == "") {
            //alert('Enter Pickup Number ');

            //$("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            //$("#txtAppointmentNumber").focus();
            //return;
        }



        if ($('#btnAddPickup').text() == "+ Update Pickup") {
             txtPickupId = $('#txtPickupId').val();

            //return;
        }
        else
        {
            txtPickupId = "0";

            //return;
        }



        var LoadPikcup = new Array();
        var LoadPickupList = {};

        //Save Pickup Information in database and show in Pickup Table

        LoadPickupList.Information = ShipperNewName.val() + ', ' + Address.val() + ', ' + CityName + ', ' + StateCode + ', ' + DateFrom;
        LoadPickupList.ShipperName = ShipperNewName.val();
        LoadPickupList.PhoneNumber = Phone.val();
        LoadPickupList.Address = Address.val();
        LoadPickupList.Longitude = Longitude.val();
        LoadPickupList.Latitude = Latitude.val();
        LoadPickupList.ZipCode = PickupZipcode;
        LoadPickupList.CityName = CityName ;
        LoadPickupList.StateCode = StateCode;
        LoadPickupList.DateTimeFrom = DateFrom;
        LoadPickupList.DateTimeTo = DateTo;

        LoadPickupList.PickupNumber = AppointmentNumber;
        LoadPickupList.Pickuporder = txtpickuporder;
        LoadPickupList.Traitor = Traitor.val();
        LoadPickupList.Comments = Comments;
        LoadPickupList.ShipperId = txtShipperId;


        LoadPikcup.push(LoadPickupList);

        var LoaderNumber = $("#GetLoadNumber").val();
        var model = {
            txtPickupId: txtPickupId,
            //CarrierName: CarrierName.val(),
            //ContactName: ContactName.val(),
            //PhoneNumber: PhoneNumber.val(),
            //MC_: MC_.val(),
            LoaderNumber: LoaderNumber,
            LoadPickupList: LoadPikcup,
        };

        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/InsertLoadPickup",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('#txtPickupId').val(data[0].MaxPickupId);
                //Set Deliver Pickup Label
                $("#tblPickup #tblPickupBody").remove();

            var img = document.createElement('img');
            img.src = "/assets/img/Logistic-Truck_Pickup.png";

                //var dt = new Date(data[0].DateTimeFrom.year, data[0].DateTimeFrom.month, data[0].DateTimeFrom.day,
                //    data[0].DateTimeFrom.hours, data[0].DateTimeFrom.minutes, data[0].DateTimeFrom.seconds, data[0].DateTimeFrom.milliSeonds);
                //alert(dt.toDateString());

                //var json = JSON.stringify(data[0].DateTimeFrom);
                //alert(json);
                //return;





                for (var i = 0; i < data.length; i++) {


                    if (data[i].MaxPickupId == data[i].PickUpId) {

                        document.getElementById('DeliveryPickUpInfo').innerHTML = "( Current Pickup :" + data[i].ShipperName + data[i].Address + data[i].StateCode + " )";
                    }

                    var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                    var todayDate = new Date(datevalue);
                    var format = "AM";
                    var hour = todayDate.getHours();
                    var min = todayDate.getMinutes();
                    if (hour > 11) { format = "PM"; }
                    if (hour > 12) { hour = hour - 12; }
                    if (hour == 0) { hour = 12; }
                    if (min < 10) { min = "0" + min; }
                    var Month = todayDate.getMonth() + 1;

                    var PickupOrder = inWords(data[i].Pickuporder);

                    //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                    var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                    var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                    var todayDate = new Date(datevalue);
                    var format = "AM";
                    var hour = todayDate.getHours();
                    var min = todayDate.getMinutes();
                    if (hour > 11) { format = "PM"; }
                    if (hour > 12) { hour = hour - 12; }
                    if (hour == 0) { hour = 12; }
                    if (min < 10) { min = "0" + min; }
                    var Month = todayDate.getMonth() + 1;
                    var DateTo =  Month + "/"+ todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                    tr = $('<tr id="tblPickupBody"/>');
                    tr.append("<td hidden class='txtpickuporder'>" + data[i].Pickuporder + "</td>");
                    tr.append("<td hidden class='PickUpId'>" + data[i].PickUpId + "</td>");
                    tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
                    tr.append("<td>" + PickupOrder + " pick up , " + data[i].Information + ", " + DateFrom + "</td>");
                    tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                    tr.append("<td hidden>" + data[i].CountryName + "</td>");
                    tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                    tr.append("<td  class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                    tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                    tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                    tr.append("<td  class='CityName' hidden>" + data[i].CityName + "</td>");
                    tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                    tr.append("<td  class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                    tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                    tr.append("<td  class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                    tr.append("<td  class='Comments' hidden>" + data[i].Comments + "</td>");
                    tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                    tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                    tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");

                    //tr.append("<td hidden>" + data[i].PickUpId + "</td>");
                    //tr.append("<td><img src='" + img.src + "' /></td>");
                    //tr.append("<td>" + data[i].Information + "</td>");
                    //tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                    //tr.append("<td hidden>" + data[i].CountryName + "</td>");
                    //tr.append("<td hidden>" + data[i].Address + "</td>");
                    //tr.append("<td hidden>" + data[i].Phone + "</td>");
                    //tr.append("<td hidden>" + data[i].ZipCode + "</td>");
                    //tr.append("<td hidden>" + data[i].StateCode + "</td>");
                    //tr.append("<td hidden>" + data[i].CityName + "</td>");
                    //tr.append("<td hidden>" + data[i].DateTimeFrom + "</td>");
                    //tr.append("<td hidden>" + data[i].DateTimeTo + "</td>");
                    //tr.append("<td hidden>" + data[i].Traitor + "</td>");
                    //tr.append("<td hidden>" + data[i].PickupNumber + "</td>");
                    //tr.append("<td hidden>" + data[i].Comments + "</td>");
                    //tr.append("<td hidden>" + data[i].ShipperId + "</td>");
                    tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
                    tr.append("<td><input type='button' onclick='RemovePickup(" + data[i].PickUpId +")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                    tr.append("<td><i id='btnCopyPickup' style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyPickup'></i></td>");
                       $('#txtpickuporder').val(data[i].Pickuporder + 1);
                    $('#tblPickup').append(tr);
                }

                //IsSave 2 means Update
                if (data[0].IsSave == 2) {
                    document.getElementById("btnAddPickup").disabled = false;
                    document.getElementById("btnAddPickup").innerText = '+ Add Pickup';
                    document.getElementById("btnAddDelivery").disabled = false;
                }
                //IsSave 1 means Insert
                else if (data[0].IsSave == 1) {
                    document.getElementById("btnAddPickup").disabled = false;
                    document.getElementById("btnAddDelivery").disabled = false;
                }
                ClearFields();


            }
        });
    });

    //Function to clear Pickup Delivery after add
    function ClearFields() {
        $('#txtShipper').val("");
        $('#txtAddress').val("");
        $('#txtAddressLongitude').val("0");
        $('#txtAddressLatitude').val("0");

        $('#txtPhone').val("");
        $('#txtZipCode').val("");
        $('#txtStates').val("");
        $('#txtCity').val("");
        $('#txtTraitor').val("");
        $('#txtAppointmentNumber').val("");
        $('#txtComments').val("");
        $('#txtShipper').val("");
        $('#txtShipperName').val("");

    }
    //Get Pickup Data on Edit in textbox
    $(function () {


        $(document).on("click", ".EditPickup", function () {

            var PickUpId = $(this).closest('tr').find('.PickUpId').text().trim();
            var ShipperName = $(this).closest('tr').find('.ShipperName').text().trim();
            var Address = $(this).closest('tr').find('.Address').text().trim();
            var Phone = $(this).closest('tr').find('.Phone').text().trim();
            var ZipCode = $(this).closest('tr').find('.ZipCode').text().trim();
            var StateCode = $(this).closest('tr').find('.StateCode').text().trim();
            var CityName = $(this).closest('tr').find('.CityName').text().trim();
            var DateTimeFrom = $(this).closest('tr').find('.DateTimeFrom').text().trim();
            var DateTimeTo = $(this).closest('tr').find('.DateTimeTo').text().trim();
            var Traitor = $(this).closest('tr').find('.Traitor').text().trim();
            var PickupNumber = $(this).closest('tr').find('.PickupNumber').text().trim();
            var Comments = $(this).closest('tr').find('.Comments').text().trim();
            var ShipperId = $(this).closest('tr').find('.ShipperId').text().trim();

            var Longitude = $(this).closest('tr').find('.Longitude').text().trim();
            var Latitude = $(this).closest('tr').find('.Latitude').text().trim();

            var txtpickuporder = $(this).closest('tr').find('.txtpickuporder').text().trim();
            var dateFrom = FormatDate(DateTimeFrom);

            var dateTo = FormatDate(DateTimeTo);

            //return;

            //var todaydate = new Date(DateTimeFrom);
            //var day = todaydate.getDate();
            //var month = (("0" + (todaydate.getMonth() + 1)).slice(-2));
            //var year = todaydate.getFullYear();
            //var hours = ("0" + todaydate.getHours()).slice(-2);
            //var Minutes = ("0" + todaydate.getMinutes()).slice(-2);
            //var datestring = year + "-" + month + "-" + day + "T" + hours + ":" + Minutes;

            //alert(datestring);
            //$("#txtdateFrom").val("2013-03-18T13:00");

            //$("#txtdateFrom").val(datetest);



            $("#txtpickuporder").val(txtpickuporder);
            $("#txtPickupId").val(PickUpId);
            //$("#txtShipper").val(ShipperName);
            $("#txtAddress").val(Address);
            $("#txtPhone").val(Phone);
            $("#txtZipCode").val(ZipCode);
            $("#txtShipperName").val(ShipperName);
            $("#txtStates").val(StateCode);
            $("#txtCity").val(CityName);
            $("#txtdateFrom").val(dateFrom);
            $("#txtDateTimeTo").val(dateTo);
            $("#txtTraitor").val(Traitor);
            $("#txtAppointmentNumber").val(PickupNumber);
            $("#txtComments").val(Comments);
            $("#txtShipperId").val(ShipperId);

            $("#txtAddressLongitude").val(Longitude);
            $("#txtAddressLatitude").val(Latitude);


            document.getElementById('DeliveryPickUpInfo').innerHTML = " (Current Pickup :" +ShipperName + Address + StateCode +" )";
            document.getElementById('btnAddPickup').innerText = '+ Update Pickup';
            document.getElementById("btnAddDelivery").disabled = true;
            document.getElementById("btnAddPickup").disabled = false;
            //document.getElementById("btnAddDelivery").style.backgroundColor = 'Black !important';


        });
    });



    //Select Pickup Data to add delivery
    $(function () {


        $(document).on("click", ".selectPickup", function () {


             var table = document.getElementById('tblPickup');
        var cells = table.getElementsByTagName('td');

        for (var i = 0; i < cells.length; i++) {

            // Take each cell
            var cell = cells[i];
            // do something on onclick event for cell
            cell.onclick = function () {
                // Get the row id where the cell exists
                var rowId = this.parentNode.rowIndex;

                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = "";
                    rowsNotSelected[row].classList.remove('selected');
                }
                var rowSelected = table.getElementsByTagName('tr')[rowId];
                rowSelected.style.backgroundColor = "yellow";
                rowSelected.className += " selected";

                //msg = 'The ID of the company is: ' + rowSelected.cells[0].innerHTML;
                //msg += '\nThe cell value is: ' + this.innerHTML;
                //alert(rowSelected.cells[0].innerHTML + rowSelected.cells[3].innerHTML);


                $("#txtPickupId").val(rowSelected.cells[0].innerHTML);
                document.getElementById('lblPickupMoveId').innerHTML = rowSelected.cells[1].innerHTML;
                document.getElementById('DeliveryPickUpInfo').innerHTML = " ( Current Pickup: " + rowSelected.cells[4].innerHTML + " , " + rowSelected.cells[6].innerHTML + " , " + rowSelected.cells[7].innerHTML + " )";
            }
        }


            return;


            var PickUpId = $(this).closest('tr').find('.PickUpId').text().trim();
            var ShipperName = $(this).closest('tr').find('.ShipperName').text().trim();
            var Address = $(this).closest('tr').find('.Address').text().trim();
            var Phone = $(this).closest('tr').find('.Phone').text().trim();
            var ZipCode = $(this).closest('tr').find('.ZipCode').text().trim();
            var StateCode = $(this).closest('tr').find('.StateCode').text().trim();
            var CityName = $(this).closest('tr').find('.CityName').text().trim();
            var DateTimeFrom = $(this).closest('tr').find('.DateTimeFrom').text().trim();
            var DateTimeTo = $(this).closest('tr').find('.DateTimeTo').text().trim();
            var Traitor = $(this).closest('tr').find('.Traitor').text().trim();
            var PickupNumber = $(this).closest('tr').find('.PickupNumber').text().trim();
            var Comments = $(this).closest('tr').find('.Comments').text().trim();
            var ShipperId = $(this).closest('tr').find('.ShipperId').text().trim();

            alert(DateTimeFrom);


            var datetest = FormatDate(DateTimeFrom);
            alert(datetest);
            //return;

            //var todaydate = new Date(DateTimeFrom);
            //var day = todaydate.getDate();
            //var month = (("0" + (todaydate.getMonth() + 1)).slice(-2));
            //var year = todaydate.getFullYear();
            //var hours = ("0" + todaydate.getHours()).slice(-2);
            //var Minutes = ("0" + todaydate.getMinutes()).slice(-2);
            //var datestring = year + "-" + month + "-" + day + "T" + hours + ":" + Minutes;

            //alert(datestring);
            //$("#txtdateFrom").val("2013-03-18T13:00");

            $("#txtdateFrom").val(datetest);



            $("#txtPickupId").val(PickUpId);
            $("#txtShipper").val(ShipperName);
            $("#txtAddress").val(Address);
            $("#txtPhone").val(Phone);
            $("#txtZipCode").val(ZipCode);
            $("#txtShipper").val(ShipperName);
            $("#txtStates").val(StateCode);
            $("#txtCity").val(CityName);
            $("#txtdateFrom").val(datetest);
            $("#txtDateTimeTo").val(datetest);
            $("#txtTraitor").val(Traitor);
            $("#txtAppointmentNumber").val(PickupNumber);
            $("#txtComments").val(Comments);
            $("#txtShipperId").val(ShipperId);




            document.getElementById('DeliveryPickUpInfo').innerHTML = "Current Pickup" + ShipperName + Address + StateCode;
            document.getElementById('btnAddPickup').innerText = '+ Update Pickup';
            document.getElementById("btnAddDelivery").disabled = true;
            document.getElementById("btnAddPickup").disabled = false;
            //document.getElementById("btnAddDelivery").style.backgroundColor = 'Black !important';


        });
    });


    function FormatDate(DateTime) {
        var todaydate = new Date(DateTime);
        var day = ("0" + todaydate.getDate()).slice(-2);
        var month = (("0" + (todaydate.getMonth() + 1)).slice(-2));
        var year = todaydate.getFullYear();
        var hours = ("0" + todaydate.getHours()).slice(-2);
        var Minutes = ("0" + todaydate.getMinutes()).slice(-2);
        var datestring = year + "-" + month + "-" + day + "T" + hours + ":" + Minutes;
        return datestring;
    }

    //On Remove Pickup
    function RemovePickup(PickUpId) {

        var textArray = [];
        $('#tblPickup tr').each(function () {
            textArray.push($(this).find('td:nth-child(2)').text())

        });

        var textDeliveryArray = [];
        $('#tblDelivery tr').each(function () {
            textDeliveryArray.push($(this).find('td:nth-child(2)').text())

        });
        var LoaderNumber = $("#GetLoadNumber").val();

        //Determine the reference of the Row using the Button.
var model = {
    txtPickupId: PickUpId,
    LoaderNumber: LoaderNumber,
    PickupsId: textArray,
    DeliveriesId: textDeliveryArray
        };
        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/DeleteLoadPickup",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {


                if (data.length == 0)
                {
                    $("#tblPickup #tblPickupBody").remove();
                    $("#tblDelivery #tblDeliveryBody").remove();
                    document.getElementById('DeliveryPickUpInfo').innerHTML = "";
                    $('#txtpickuporder').val(1);
                    $('#txtDeliveryporder').val(1);
                    return;
                }



                    $('#txtPickupId').val(data[0].MaxPickupId);
                    //Set Deliver Pickup Label
                $("#tblPickup #tblPickupBody").remove();
                $("#tblDelivery #tblDeliveryBody").remove();

                    var img = document.createElement('img');
                    img.src = "/assets/img/Logistic-Truck_Pickup.png";

                    //var dt = new Date(data[0].DateTimeFrom.year, data[0].DateTimeFrom.month, data[0].DateTimeFrom.day,
                    //    data[0].DateTimeFrom.hours, data[0].DateTimeFrom.minutes, data[0].DateTimeFrom.seconds, data[0].DateTimeFrom.milliSeonds);
                    //alert(dt.toDateString());

                    //var json = JSON.stringify(data[0].DateTimeFrom);
                    //alert(json);
                    //return;




                var Pickupcount = 0;
                var Deliverycount = 0;

                for (var i = 0; i < data.length; i++) {


                    if (data[i].MaxPickupId == data[i].PickUpId) {

                        document.getElementById('DeliveryPickUpInfo').innerHTML = "( Current Pickup" + data[i].ShipperName + data[i].Address + data[i].StateCode + " )";
                    }

                    if (data[i].LoadType == 'P') {
                        Pickupcount = 1;
                        var PickupOrder = inWords(data[i].Pickuporder);

                        var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }

                        var Month = todayDate.getMonth() + 1;


                        //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;
                        var DateTo = Month + "/" + todayDate.getDate()  + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        tr = $('<tr id="tblPickupBody"/>');
                        tr.append("<td hidden class='txtpickuporder'>" + data[i].Pickuporder + "</td>");
                        tr.append("<td hidden class='PickUpId'>" + data[i].PickUpId + "</td>");
                        tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
                        tr.append("<td>" + PickupOrder + " pick up , " + data[i].Information + ", " + DateFrom + "</td>");
                        tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                        tr.append("<td hidden>" + data[i].CountryName + "</td>");
                        tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                        tr.append("<td  class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                        tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                        tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                        tr.append("<td  class='CityName' hidden>" + data[i].CityName + "</td>");
                        tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom + "</td>");
                        tr.append("<td  class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                        tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                        tr.append("<td  class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                        tr.append("<td  class='Comments' hidden>" + data[i].Comments + "</td>");
                        tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                        tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                        tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");



                        tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
                        tr.append("<td><input type='button' onclick='RemovePickup(" + data[i].PickUpId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                        tr.append("<td><i id='btnCopyPickup' style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyPickup'></i></td>");

                        $('#txtpickuporder').val(data[i].Pickuporder + 1);
                        $('#tblPickup').append(tr);
                    }
                    else if (data[i].LoadType == 'D') {
                        Deliverycount = 1;
                        var DeliveryOrder = inWords(data[i].Deliveryporder);

                        var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;

                        //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                        var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                        var todayDate = new Date(datevalue);
                        var format = "AM";
                        var hour = todayDate.getHours();
                        var min = todayDate.getMinutes();
                        if (hour > 11) { format = "PM"; }
                        if (hour > 12) { hour = hour - 12; }
                        if (hour == 0) { hour = 12; }
                        if (min < 10) { min = "0" + min; }
                        var Month = todayDate.getMonth() + 1;
                        var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                        $('#txtDeliveryId').val(data[i].MaxDeliveryID);
                        @*var someNumericValue = @(ViewBag.LastPickupId);*@
                        //alert(someNumericValue);


                        var img = document.createElement('img');
                        img.src = "/assets/img/Logistic-Truck_Delivery.png";



                        tr = $('<tr id="tblDeliveryBody"/>');
                        tr.append("<td hidden class='txtDeliveryorder'>" + data[i].Deliveryporder + "</td>");
                            tr.append("<td class='DeliveryId' hidden>" + data[i].DeliveryId + "</td>");
                            tr.append("<td class='DeliveryPickupId' hidden>" + data[i].PickUpId + "</td>");

                        tr.append("<td><img class='selectDelivery' src='" + img.src + "' /></td>");
                        tr.append("<td>" + DeliveryOrder + " stop,  " + data[i].Information + ", " + DateFrom + "</td>");
                            tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                            tr.append("<td hidden>" + data[i].CountryName + "</td>");
                            tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                            tr.append("<td class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                            tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                            tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                            tr.append("<td class='CityName' hidden>" + data[i].CityName + "</td>");
                        tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom + "</td>");
                        tr.append("<td class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                            tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                            tr.append("<td class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                            tr.append("<td class='Comments' hidden>" + data[i].Comments + "</td>");
                        tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                        tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                        tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");
                            tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
                        tr.append("<td><input type='button' onclick='RemoveDelivery(" + data[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                        tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");
                        $('#txtDeliveryporder').val(data[i].Deliveryporder + 1);
                        $('#tblDelivery').append(tr);


                    }


                    }

                if (parseInt(Pickupcount) == 0) {
                    $('#txtpickuporder').val(1);
                }
                if (parseInt(Deliverycount) == 0) {
                    $('#txtDeliveryporder').val(1);
                }





                //for (var i = 0; i < data.length; i++) {
                //    tr = $('<tr/>');
                //    tr.append("<td hidden class='PickUpId'>" + data[i].PickUpId + "</td>");
                //    tr.append("<td ><img class='selectPickup' src='" + img.src + "' /></td>");
                //    tr.append("<td>" + data[i].Information + "</td>");
                //    tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                //    tr.append("<td hidden>" + data[i].CountryName + "</td>");
                //    tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                //    tr.append("<td  class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                //    tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                //    tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                //    tr.append("<td  class='CityName' hidden>" + data[i].CityName + "</td>");
                //    tr.append("<td class='DateTimeFrom' hidden>" + data[i].DateTimeFrom + "</td>");
                //    tr.append("<td  class='DateTimeTo' hidden>" + data[i].DateTimeTo + "</td>");
                //    tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                //    tr.append("<td  class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                //    tr.append("<td  class='Comments' hidden>" + data[i].Comments + "</td>");
                //    tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                //    tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditPickup'></td>");
                //    tr.append("<td><input type='button' onclick='RemovePickup(" + data[i].PickUpId + ")' value='x' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn'></td>");
                //    $('#tblPickup').append(tr);
                //}






            }
        });
    }

    //function EditPickup(PickUpId) {
    //    //Determine the reference of the Row using the Button.
    //    alert(PickUpId);

    //    var PickupId = this.cells[0];
    //    var CountryName = this.cells[4];// the first <td>
    //    var Address = this.cells[5];

    //    alert($(Address).text());
    //    $('#txtPickupId').val($(PickupId).text());
    //    $('#txtCountry').val($(CountryName).text());
    //    $('#txtAddress').val($(Address).text());

    //    //let tr = $(this).closest('tr');
    //    //let a = tr.find('td:eq(0) input').val();
    //    //let b = tr.find('td:eq(2) input').val();
    //    //alert('Table 1: ' + tr.find('td:eq(3) .ShipperName').val() + ' ' + b);

    //}

    //Save Delivery on button click
    $("body").on("click", "#btnAddDelivery", function () {


        var PickupZipcode = $('#txtZipCode').val();

        //Reference the Name and Country TextBoxes
        var ShipperName = $("#txtShipper");

        var ShipperNewName = $("#txtShipperName");
        var Address = $("#txtAddress");
        var Longitude = $("#txtAddressLongitude");
        var Latitude = $("#txtAddressLatitude");
        var CityName = $("#CitysId").find("option:selected").text();
        var StateName = $("#StateId").find("option:selected").text();
        var CountryNameVal = $("#txtCountry");
        var CityNameVal = $("#CitysId").find("option:selected").val();


        var StateNameVal = $("#StateId").find("option:selected").val();
        var DateFrom = $('#txtdateFrom').val();
        var DateTo = $('#txtDateTimeTo').val();


        var CityName = $("#txtCity").val();
        var StateName = $("#txtStates").val();


        var Traitor = $('#txtTraitor');
        var Phone = $('#txtPhone');
        var AppointmentNumber = $('#txtAppointmentNumber').val();
        var Comments = $('#txtComments').val();
        var txtDeliveryId = "";

        var txtPickupId = $('#txtPickupId').val();

        var txtShipperId = $('#txtShipperId').val();

        //Get the reference of the Table's TBODY element.
        var tBody = $("#tblDelivery > TBODY")[0];

        if (ShipperNewName.val() == "") {
            //alert('Enter Shipper Name ');


            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtShipperName").focus();
            return;
        }
        if (Address.val() == "") {
            //alert('Enter Address ');

            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtAddress").focus();
            return;
        }
        if (Phone.val() == "") {
            //alert('Enter Phone ');

            //$("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            //$("#txtPhone").focus();
            //return;
        }

        if (PickupZipcode == "") {
            //alert('Enter Zip Code ');

            $("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            $("#txtZipCode").focus();
            return;
        }

        if (Traitor.val() == "") {
            //alert('Enter Traitor ');

            //$("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            //$("#txtTraitor").focus();
            //return;
        }
        if (AppointmentNumber == "") {
            //alert('Enter Appointment Number ');

            //$("div.failure").fadeIn(300).delay(2000).fadeOut(400);
            //$("#txtAppointmentNumber").focus();
            //return;
        }

        if ($('#btnAddDelivery').text() == "+ Update Delivery") {
            txtDeliveryId = $('#txtDeliveryId').val();

            //return;
        }
        else {
            txtDeliveryId = "0";

            //return;
        }

        var txtDeliveryporder = $('#txtDeliveryporder').val();

        var LoadDelivery = new Array();
        var LoadDeliveryList = {};

        //Save Pickup Information in database and show in Pickup Table
        LoadDeliveryList.Information = ShipperNewName.val() + ', ' + Address.val() + ', ' + CityName + ', ' + StateName + ', ' + DateFrom;
        LoadDeliveryList.ShipperName = ShipperNewName.val();
        LoadDeliveryList.PhoneNumber = Phone.val();
        LoadDeliveryList.Address = Address.val();
        LoadDeliveryList.Longitude = Longitude.val();
        LoadDeliveryList.Latitude = Latitude.val();
        LoadDeliveryList.ZipCode = PickupZipcode;
        LoadDeliveryList.CityName = PickupZipcode;
        LoadDeliveryList.StateCode = PickupZipcode;
        LoadDeliveryList.DateTimeFrom = DateFrom;
        LoadDeliveryList.DateTimeTo = DateTo;

        LoadDeliveryList.PickupNumber = AppointmentNumber;
        LoadDeliveryList.Traitor = Traitor.val();
        LoadDeliveryList.Comments = Comments;
        LoadDeliveryList.PickUpId = txtPickupId;
        LoadDeliveryList.ShipperId = txtShipperId;
        LoadDeliveryList.Deliveryorder = txtDeliveryporder;
        LoadDelivery.push(LoadDeliveryList);

        var LoaderNumber = $("#GetLoadNumber").val();
        var model = {
            txtDeliveryId: txtDeliveryId,
            //CarrierName: CarrierName.val(),
            //ContactName: ContactName.val(),
            //PhoneNumber: PhoneNumber.val(),
            //MC_: MC_.val(),
            LoaderNumber: LoaderNumber,
            LoadDeliveryList: LoadDelivery,
        };

        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/InsertLoadDelivery",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {

                $('#txtDeliveryId').val(data[0].MaxDeliveryID);

                @*var someNumericValue = @(ViewBag.LastPickupId);*@
                //alert(someNumericValue);
                $("#tblDelivery #tblDeliveryBody").remove();

                var img = document.createElement('img');
                img.src = "/assets/img/Logistic-Truck_Delivery.png";









                //$('#txtPickupId').val("111");

                for (var i = 0; i < data.length; i++) {

                    var DeliveryOrder = inWords(data[i].Deliveryorder);
                    var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                    var todayDate = new Date(datevalue);
                    var format = "AM";
                    var hour = todayDate.getHours();
                    var min = todayDate.getMinutes();
                    if (hour > 11) { format = "PM"; }
                    if (hour > 12) { hour = hour - 12; }
                    if (hour == 0) { hour = 12; }
                    if (min < 10) { min = "0" + min; }
                    var Month = todayDate.getMonth() + 1;
                 //   var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                    var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                    var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                    var todayDate = new Date(datevalue);
                    var format = "AM";
                    var hour = todayDate.getHours();
                    var min = todayDate.getMinutes();
                    if (hour > 11) { format = "PM"; }
                    if (hour > 12) { hour = hour - 12; }
                    if (hour == 0) { hour = 12; }
                    if (min < 10) { min = "0" + min; }
                    var Month = todayDate.getMonth() + 1;
                    var DateTo = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                    tr = $('<tr id="tblDeliveryBody"/>');
                    tr.append("<td hidden class='txtDeliveryorder'>" + data[i].Deliveryorder + "</td>");
                    tr.append("<td class='DeliveryId' hidden>" + data[i].DeliveryId + "</td>");
                    tr.append("<td class='DeliveryPickupId' hidden>" + data[i].PickUpId + "</td>");

                    tr.append("<td><img class='selectDelivery' src='" + img.src + "' /></td>");
                    tr.append("<td>" + DeliveryOrder + " stop , " + data[i].Information + ", " + DateFrom + "</td>");
                    tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                    tr.append("<td hidden>" + data[i].CountryName + "</td>");
                    tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                    tr.append("<td class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                    tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                    tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                    tr.append("<td class='CityName' hidden>" + data[i].CityName + "</td>");
                    tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                    tr.append("<td class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                    tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                    tr.append("<td class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                    tr.append("<td class='Comments' hidden>" + data[i].Comments + "</td>");
                    tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                    tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                    tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");
                    tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
                    tr.append("<td><input type='button' onclick='RemoveDelivery(" + data[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                    tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");
                    $('#txtDeliveryporder').val(data[i].Deliveryorder + 1);
                    $('#tblDelivery').append(tr);
                }

                // If Save 2 means Update
                if (data[0].IsSave == 2) {
                    document.getElementById("btnAddPickup").disabled = false;
                    document.getElementById("btnAddDelivery").innerText = '+ Add Delivery';
                    document.getElementById("btnAddDelivery").disabled = false;
                }
                // If Save 1 means Insert
                else if (data[0].IsSave == 1) {
                    document.getElementById("btnAddPickup").disabled = false;
                    document.getElementById("btnAddDelivery").disabled = false;
                }


                ClearFields();

            }
        });
    });


    //Get Pickup Data on Edit in textbox
    $(function () {


        $(document).on("click", ".EditDelivery", function () {

            var DeliveryId = $(this).closest('tr').find('.DeliveryId').text().trim();
            var PickUpId = $(this).closest('tr').find('.DeliveryPickupId').text().trim();
            var ShipperName = $(this).closest('tr').find('.ShipperName').text().trim();
            var Address = $(this).closest('tr').find('.Address').text().trim();
            var Phone = $(this).closest('tr').find('.Phone').text().trim();
            var ZipCode = $(this).closest('tr').find('.ZipCode').text().trim();
            var StateCode = $(this).closest('tr').find('.StateCode').text().trim();
            var CityName = $(this).closest('tr').find('.CityName').text().trim();
            var DateTimeFrom = $(this).closest('tr').find('.DateTimeFrom').text().trim();
            var DateTimeTo = $(this).closest('tr').find('.DateTimeTo').text().trim();
            var Traitor = $(this).closest('tr').find('.Traitor').text().trim();
            var PickupNumber = $(this).closest('tr').find('.PickupNumber').text().trim();
            var Comments = $(this).closest('tr').find('.Comments').text().trim();
            var ShipperId = $(this).closest('tr').find('.ShipperId').text().trim();
            var Longitude = $(this).closest('tr').find('.Longitude').text().trim();
            var Latitude = $(this).closest('tr').find('.Latitude').text().trim();

            var txtDeliveryorder = $(this).closest('tr').find('.txtDeliveryorder').text().trim();
            var dateFrom = FormatDate(DateTimeFrom);

            var dateTo = FormatDate(DateTimeTo);


            $("#txtDeliveryId").val(DeliveryId);
            $("#txtPickupId").val(PickUpId);
            //$("#txtShipper").val(ShipperName);
            $("#txtShipperName").val(ShipperName);
            $("#txtAddress").val(Address);
            $("#txtPhone").val(Phone);
            $("#txtZipCode").val(ZipCode);
            $("#txtShipperName").val(ShipperName);
            $("#txtStates").val(StateCode);
            $("#txtCity").val(CityName);
            $("#txtdateFrom").val(dateFrom);
            $("#txtDateTimeTo").val(dateTo);
            $("#txtTraitor").val(Traitor);
            $("#txtAppointmentNumber").val(PickupNumber);
            $("#txtComments").val(Comments);
            $("#txtShipperId").val(ShipperId);
            $("#txtDeliveryporder").val(txtDeliveryorder);

            $("#txtAddressLongitude").val(Longitude);
            $("#txtAddressLatitude").val(Latitude);


            document.getElementById('btnAddDelivery').innerText = '+ Update Delivery';
            document.getElementById("btnAddDelivery").disabled = false;
            document.getElementById("btnAddPickup").disabled = true;
            //document.getElementById("btnAddDelivery").style.backgroundColor = 'Black !important';


            var table = document.getElementById('tblDelivery');
            var cells = table.getElementsByTagName('td');

            for (var i = 0; i < cells.length; i++) {
                // Take each cell
                var cell = cells[i];
                // do something on onclick event for cell
                cell.onclick = function () {
                    // Get the row id where the cell exists
                    var rowId = this.parentNode.rowIndex;

                    var rowsNotSelected = table.getElementsByTagName('tr');
                    for (var row = 0; row < rowsNotSelected.length; row++) {
                        rowsNotSelected[row].style.backgroundColor = "";
                        rowsNotSelected[row].classList.remove('selected');
                    }
                    var rowSelected = table.getElementsByTagName('tr')[rowId];
                    rowSelected.style.backgroundColor = "yellow";
                    rowSelected.className += " selected";

                }
            }


        });
    });

    //On Remove Pickup
    function RemoveDelivery(DeliveryId) {

        var textArray = [];
        $('#tblDelivery tr').each(function () {
            textArray.push($(this).find('td:nth-child(2)').text())

        });
        //Determine the reference of the Row using the Button.
        var LoaderNumber = $("#GetLoadNumber").val();
        var model = {
            txtDeliveryId: DeliveryId,
            LoaderNumber: LoaderNumber,
            DeliverysId: textArray
        };
        //Send the JSON array to Controller using AJAX.
        $.ajax({

            type: "POST",
            url: "/EditLoad/DeleteLoadDelivery",
            data: JSON.stringify(model),
            //data: JSON.stringify(formData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {



                if (data.length == 0) {
                    $("#tblDelivery #tblDeliveryBody").remove();
                    document.getElementById('DeliveryPickUpInfo').innerHTML = "";
                    $('#txtpickuporder').val(1);
                    $('#txtDeliveryporder').val(1);

                    return;
                }


                //$('#txtPickupId').val(data[0].MaxPickupId);
                @*var someNumericValue = @(ViewBag.LastPickupId);*@
                //alert(someNumericValue);
                $("#tblDelivery #tblDeliveryBody").remove();

                var img = document.createElement('img');
                img.src = "/assets/img/Logistic-Truck_Delivery.png";



                //$('#txtPickupId').val("111");

                for (var i = 0; i < data.length; i++) {
                    var DeliveryOrder = inWords(data[i].Deliveryorder);
                    var datevalue = new Date(parseInt(data[i].DateTimeFrom.replace("/Date(", "").replace(")/", ""), 10));
                    var todayDate = new Date(datevalue);
                    var format = "AM";
                    var hour = todayDate.getHours();
                    var min = todayDate.getMinutes();
                    if (hour > 11) { format = "PM"; }
                    if (hour > 12) { hour = hour - 12; }
                    if (hour == 0) { hour = 12; }
                    if (min < 10) { min = "0" + min; }
                    var Month = todayDate.getMonth() + 1;


                    //var DateFrom = Month + "/" + todayDate.getDate() + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;


                    var DateFrom = todayDate.getDate() + "/" + Month + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                    var datevalue = new Date(parseInt(data[i].DateTimeTo.replace("/Date(", "").replace(")/", ""), 10));
                    var todayDate = new Date(datevalue);
                    var format = "AM";
                    var hour = todayDate.getHours();
                    var min = todayDate.getMinutes();
                    if (hour > 11) { format = "PM"; }
                    if (hour > 12) { hour = hour - 12; }
                    if (hour == 0) { hour = 12; }
                    if (min < 10) { min = "0" + min; }
                    var Month = todayDate.getMonth() + 1;
                    var DateTo = Month + "/" + todayDate.getDate()  + "/" + todayDate.getFullYear() + " " + hour + ":" + min + " " + format;

                    tr = $('<tr id="tblDeliveryBody"/>');
                    tr.append("<td hidden class='txtDeliveryorder'>" + data[i].Deliveryorder + "</td>");
                    tr.append("<td class='DeliveryId' hidden>" + data[i].DeliveryId + "</td>");
                    tr.append("<td class='PickupId' hidden>" + data[i].PickUpId + "</td>");

                    tr.append("<td><img src='" + img.src + "' /></td>");
                    tr.append("<td>" + DeliveryOrder + " stop, " + data[i].Information + ", " + DateFrom + "</td>");
                    tr.append("<td class='ShipperName' hidden>" + data[i].ShipperName + "</td>");
                    tr.append("<td hidden>" + data[i].CountryName + "</td>");
                    tr.append("<td class='Address' hidden>" + data[i].Address + "</td>");
                    tr.append("<td class='Phone' hidden>" + data[i].PhoneNumber + "</td>");
                    tr.append("<td class='ZipCode' hidden>" + data[i].ZipCode + "</td>");
                    tr.append("<td class='StateCode' hidden>" + data[i].StateCode + "</td>");
                    tr.append("<td class='CityName' hidden>" + data[i].CityName + "</td>");
                    //tr.append("<td class='DateTimeFrom' hidden>" + data[i].DateTimeFrom + "</td>");
                    //tr.append("<td class='DateTimeTo' hidden>" + data[i].DateTimeTo + "</td>");

                    tr.append("<td class='DateTimeFrom' hidden>" + data[i].NewDateFrom  + "</td>");
                    tr.append("<td class='DateTimeTo' hidden>" + data[i].NewDateTo + "</td>");
                    tr.append("<td  class='Traitor' hidden>" + data[i].Traitor + "</td>");
                    tr.append("<td class='PickupNumber' hidden>" + data[i].PickupNumber + "</td>");
                    tr.append("<td class='Comments' hidden>" + data[i].Comments + "</td>");
                    tr.append("<td class='ShipperId' hidden>" + data[i].ShipperId + "</td>");
                    tr.append("<td class='Longitude' hidden>" + data[i].Longitude + "</td>");
                    tr.append("<td class='Latitude' hidden>" + data[i].Latitude + "</td>");
                    tr.append("<td><input type='button'  value='✎' style='background - color: #7c0710; color: white; padding: 0px 7px;' class='btn EditDelivery'></td>");
                    tr.append("<td><input type='button' onclick='RemoveDelivery(" + data[i].DeliveryId + ")' value='x' style='background-color:Red !important; color: white; padding: 0px 7px;' class='btn'></td>");
                    tr.append("<td><i id='btnCopyDelivery'  style='cursor: pointer; font-size: 22px; color: darkgoldenrod' class='fa fa-copy CopyDelivery'></i></td>");
                    $('#txtDeliveryporder').val(data[i].Deliveryorder + 1);
                    $('#tblDelivery').append(tr);
                }



                document.getElementById('btnAddDelivery').innerText = '+ Add Delivery';
                document.getElementById("btnAddDelivery").disabled = false;
                document.getElementById("btnAddPickup").disabled = false;




            }
        });
    }


</Script>



<script>

    $(document).on("click", ".selectDelivery", function () {


        var table = document.getElementById('tblDelivery');
        var cells = table.getElementsByTagName('td');

        for (var i = 0; i < cells.length; i++) {

            // Take each cell
            var cell = cells[i];
            // do something on onclick event for cell
            cell.onclick = function () {
                // Get the row id where the cell exists
                var rowId = this.parentNode.rowIndex;

                var rowsNotSelected = table.getElementsByTagName('tr');
                for (var row = 0; row < rowsNotSelected.length; row++) {
                    rowsNotSelected[row].style.backgroundColor = "";
                    rowsNotSelected[row].classList.remove('selected');
                }
                var rowSelected = table.getElementsByTagName('tr')[rowId];
                rowSelected.style.backgroundColor = "yellow";
                rowSelected.className += " selected";

                document.getElementById('lblDeliveryMoveId').innerHTML = rowSelected.cells[1].innerHTML;


            }
        }


        return;



    });
    // In your Javascript (external .js resource or <script> tag)
    jQuery(document).ready(function () {
        jQuery('#Brokerid').select2();
        jQuery('#BrokerHelperid').select2();
        jQuery('#CompanyId').select2();
        jQuery('#CarrierId').select2();
        jQuery('#CarrierHelperId').select2();
        jQuery('#LoadTypeId').select2();
        jQuery('#TruckId').select2();
        jQuery('#LoadSubTypeId').select2();
        jQuery('#QuantityTypeId').select2();
        jQuery('#DriverTypeId').select2();
        jQuery('#StateId').select2();
        jQuery('#CitysId').select2();
        jQuery('#BrokerModelid').select2();
        jQuery('#CompanyModelid').select2();
    });
</script>






<script type="text/javascript">

    var counter = 0;

    function AddFileUpload() {

        var div = document.createElement('FileUploadContainer');

        div.innerHTML = '<input id="file' + counter + '" name = "file' + counter +

            '" type="file" />' +

            '<input id="Button' + counter + '" type="button" ' +

            'value="Remove" onclick = "RemoveFileUpload(this)" />';

        document.getElementById("FileUploadContainer").appendChild(div);

        counter++;

    }

    function RemoveFileUpload(div) {

        document.getElementById("FileUploadContainer").removeChild(div.parentNode);

    }

</script>



@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@
@*<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript">


        $(document).ready(function () {
            $("#txtShipper").autocomplete({
                source: function (request, responce) {
                    $.ajax({
                        url: "Load/GetShipperNames",
                        method: "post",
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify({ term: request.term }),
                        dataType: 'json',
                        success: function (data) {
                            responce(data.d);
                        },
                        error: function (err) {
                            alert(err);
                        }
                    });
                }
            });
        });
    </script>*@

<script>

    $("#SectionPickup").on("click", function () {

        //alert("tab no 2 is clicked......");

        //$("#SectionPickup").removeClass("active");
        //$("#General").addClass("active");

    });

       @*var i = @TempData["CurrentLoad"];


        $(".Pickup").on("click", function () {
            alert('Test');
            if (i == "") {

                alert("Fill General Tab First");
            }

        });
        $(".Message").on("click", function () {

            if (i == "") {
                alert("Fill General Tab First");
            }
        });
        $(".Charges").on("click", function () {

            if (i == "") {
                alert("Fill General Tab First");
            }
        });*@



</script>




<script type="text/javascript">

    function remove(el) {
        var element = el.target;
        element.parentNode.remove();
    }



    updateList = function () {
        var input = document.getElementById('file');
        var output = document.getElementById('fileList');
        var children = "";
        for (var i = 0; i < input.files.length; ++i) {
            alert(input.files.item(i).mozFullPath);
            children += '<li>  <a  target="_blank" href="' + input.files.item(i).mozFullPath + '">' + input.files.item(i).name + '</a> <a t class="activity-delete" onclick="remove(event)" title="Delete">&times;</a> </li>';

        }
        output.innerHTML = output.innerHTML + children;
        //output.innerHTML = '<ul class="activity-list">' + children + '</ul>';
    }
</script>


@*<script>$("#file-upload").fileinput();</script>*@




@*<script src="http://khaalipaper.com/js/jquery-3.2.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>*@

@*<script src="~/Content/jquery-3.2.1.min.js"></script>
    <script src="~/Content/bootstrap.min.js"></script>*@

<script type="text/javascript" language="javascript">
    jQuery(document).ready(function () {


        //$('.nav-tabs').not('.active').addClass('enable');


        //$("#tabs").tabs();
        //$("#tabs").tabs("option", {
        //    "selected": 0,
        //    "disabled": [1, 2, 3]
        //});




        //$("#tabs").tabs();
        //$("#tabs").tabs("option", {
        //    "selected": 0,
        //    "disabled": [1, 2, 3]
        //});


        @*var i = @TempData["CurrentLoad"];

        if (i != "") {
            //btnGeneralSubmit

            //$('#btnGeneralSubmit').addClass('disabled');
            document.getElementById("btnGeneralSubmit").disabled = true;

            $('#SectionPickup').removeClass('disabled');
            $('.nav-tabs a[href="#Section2"]').tab('show');

            $('#SectionMessages').removeClass('disabled');
            $('#SectionCharges').removeClass('disabled');
        }*@

        @*var j = @TempData["IsBroker"];
        if (j == 0) {
            $('.nav-tabs a[href="#top-tab3"]').tab('show');


        }*@
    });

</script>

<script>

    $("body").on("click", "#btnNextPickup", function () {

        $('.nav-tabs a[href="#Section3"]').tab('show');

    });
    $("body").on("click", "#btnNextMessage", function () {

        $('.nav-tabs a[href="#Charges"]').tab('show');

    });
    $("body").on("click", "#btnCreditCheck", function () {

        var BrokerID = $("#BrokerModelid").find("option:selected").val();
        var CompanyId = $("#CompanyModelid").find("option:selected").val();

        var CreditAmount = $("#txtCreditAmount");
        if (BrokerID == "0") {
            alert("Select Broker");
            return;
        }

        if (CompanyId == "0") {
            alert("Select Company");
        }
        if (CreditAmount == "") {
            alert("Enter Credit Amount");
            $("#txtCreditAmount").focus();
            return;
        }

    });



</script>

<!--<script>
    $(document).ready(function () {
        //$("#CreditCheckModel").modal('show');-->
@*var i = @TempData["CurrentLoad"];
    alert('Test');*@

@*var i = @TempData["CurrentLoad"];
    alert('Test');
     if (i == "") {
         $('#CreditCheckModel').modal({ backdrop: 'static', keyboard: false });
     }*@


<!--});
</script>-->

<script>

    $(document).ready(function () {

        $("#txtShipper").autocomplete({

            source: function (request, response) {

                $.ajax({

                    url: "/Load/GetShipperRecord",

                    type: "POST",

                    dataType: "json",

                    data: { prefix: request.term },

                    success: function (data) {

                        response($.map(data, function (item) {



                            return {
                                /*label: item.ShipperName,*/
                                label: 'Name: ' + item.ShipperName + ', Address: ' + item.ShipperAddress,
                                ShipperId: item.ShipperId
                            };

                        }))

                    }

                })

            },


            select: function (event, ui) {
                //$('#txtShipperId').val(ui.item.ShipperId);
                //$('#txtAddress').val(ui.item.Address);

                //Call EmpDetails jsonResult Method
                $.getJSON("/Load/GetShipperDetail/?AssignID=" + ui.item.ShipperId + " ",
                    function (json) {

                        $('#txtShipperId').val(json[0].ShipperId);
                        $('#txtAddress').val(json[0].ShipperAddress);
                        $('#txtPhone').val(json[0].ShipperPhone);
                        $('#txtZipCode').val(json[0].ShipperZipCode);
                        $('#txtStates').val(json[0].ShipperStateCode);
                        $('#txtCity').val(json[0].ShipperCity);
                        $('#txtShipperName').val(json[0].ShipperName);

                        $('#txtAddressLongitude ').val(json[0].Longitude);
                        $('#txtAddressLatitude').val(json[0].Latitude);

                        $('#txtShipper').val("");



                        //$('#txtBrokerName').val("");


                        //$('#txtContactName').val(json[0].ContactName);
                        //$('#txtBrokerAssignId').val(json[0].AssignID);
                        //$('#txtContactPhone').val(json[0].Phone);
                        //$('#txtBrokerName').val(json[0].Name);
                        //$('#txtContactEmail').val(json[0].Email);

                    });



            }

        });

    });

</script>

@*Ajax Auto Complete Search For Broker*@
<script>

    $("#txtBrokerName").autocomplete({

        source: function (request, response) {

            $.ajax({

                url: "/Definition/GetBrokerRecord",

                type: "POST",

                dataType: "json",

                data: { prefix: request.term },

                success: function (data) {

                    response($.map(data, function (item) {



                        return {
                            label: 'Broker Name:' + item.Name + ', AssignID:' + item.AssignID + ', ContactName:' + item.ContactName +
                                + ', Phonenumber:' + item.Phone

                            , AssignID: item.AssignID
                        };

                    }))

                }

            })

        },

        select: function (event, ui) {


            //Call EmpDetails jsonResult Method
            $.getJSON("/Definition/GetBrokerDetail/?AssignID=" + ui.item.AssignID + " ",
                function (json) {

                    //alert(json[0].ContactName);
                    //$('#txtContactName').val(json[0].ContactName);
                    $('#txtBrokerName').val("");


                    $('#txtContactName').val(json[0].ContactName);
                    $('#txtBrokerAssignId').val(json[0].AssignID);
                    $('#txtContactPhone').val(json[0].Phone);
                    $('#txtBrokerName').val(json[0].Name);
                    $('#txtContactEmail').val(json[0].Email);

                });

        }

    });



    $("#txtCarrierSearch").autocomplete({

        source: function (request, response) {

            $.ajax({

                url: "/Load/GetRecord",

                type: "POST",

                dataType: "json",

                data: { prefix: request.term },

                success: function (data) {

                    response($.map(data, function (item) {



                        return {
                            label: 'Carrier Name:' + item.CarrierName + ', AssignID:' + item.AssignID + ', ContactName:' + item.ContactName +
                                + ', Phonenumber:' + item.Phonenumber

                            //label: 'Carrier Name:' + item.CarrierName + ', AssignID:' + item.AssignID + ', ContactName:' + item.ContactName +
                            // + ', Phonenumber:' + item.Phonenumber
                            , AssignID: item.AssignID
                        };

                    }))

                }

            })

        },

        select: function (event, ui) {
            //Call EmpDetails jsonResult Method
            $.getJSON("/Load/GetCarrierTruckList/?CarrierAssignId=" + ui.item.AssignID + " ",

                //$.getJSON("/Load/GetCarrierDetail/?AssignID=" + ui.item.AssignID + " ",
                function (json) {

                    if (json[0].Validcarrier == 0) {
                        $("#txtCarrierSearch").val("");
                        swal({ title: "Insurance Expired", text: json[0].CarrierName, type: "warning" },
                            //function () {
                            //    location.reload();
                            //    }

                        );
                        return;
                    }

                    if (json[0].IsBlackList == 0) {
                        var tr;
                        //$('#txtContactName').val(json[0].ContactName);
                        $('#txtCarrierSearch').val("");
                        $('#txtDispatchName').val("Jack");
                        $('#txtContactNumber').val('469-651-9059');

                        //Comment by Hasan Bilal (Vache need his phone number instead of carrier phone number)
                        //$('#txtContactNumber').val(json[0].Phonenumber);
                        $('#txtCarrierSearch').val(json[0].CarrierName);
                        $('#txtCarrierAssignId').val(json[0].AssignID);

                        //$('#txtDriverName').val(json[0].DriverName);
                        //$('#txtDriverId').val(json[0].DriverId);
                        //$('#txtDriverPhone').val(json[0].AssignID);


                        $('#TruckId').html('');
                        var options = '';
                        options += '<option value="0">Select Truck</option>';
                        for (var i = 0; i < json.length; i++) {

                            options += '<option value="' + json[i].Truckid + '">' + json[i].TruckNo + ' ,Phone: ' + json[i].Phone + '</option>';
                        }
                        $('#TruckId').append(options);

                    }
                    else {
                        $("#txtCarrierSearch").val("");
                        swal({ title: "Black List Carrier", text: json[0].CarrierName, type: "warning" },
                            //function () {
                            //    location.reload();
                            //    }

                        );

                    }




                });

        }
    });





</script>


<script>





    //On table cell click of carrier truck
    //$('#tblPickup').on('click', 'tr', function () {
    $('#tblPickup').on('click', function (e) {

        //var table = document.getElementById('tblPickup');
        //var cells = table.getElementsByTagName('td');
        //alert('Testzz');
        //for (var i = 0; i < cells.length; i++) {
        //    alert('inside loop');
        //    // Take each cell
        //    var cell = cells[i];
        //    // do something on onclick event for cell
        //    cell.onclick = function () {
        //        // Get the row id where the cell exists
        //        var rowId = this.parentNode.rowIndex;

        //        var rowsNotSelected = table.getElementsByTagName('tr');
        //        for (var row = 0; row < rowsNotSelected.length; row++) {
        //            rowsNotSelected[row].style.backgroundColor = "";
        //            rowsNotSelected[row].classList.remove('selected');
        //        }
        //        var rowSelected = table.getElementsByTagName('tr')[rowId];
        //        rowSelected.style.backgroundColor = "yellow";
        //        rowSelected.className += " selected";

        //        msg = 'The ID of the company is: ' + rowSelected.cells[0].innerHTML;
        //        msg += '\nThe cell value is: ' + this.innerHTML;
        //        alert(msg);
        //    }
        //}
        //alert('Test');
        //return;





        //var tr = $(this).closest('tr')
        //console.log(tr);
        //var tdUuid = $(tr).find('td').eq(0).text();
        //var PickUpId = $(this).closest('tr').find('.PickUpId').text().trim();
        //var ShipperName = $(this).closest('tr').find('.ShipperName').text().trim();
        //var Address = $(this).closest('tr').find('.Address').text().trim();
        //var Phone = $(this).closest('tr').find('.Phone').text().trim();
        //var ZipCode = $(this).closest('tr').find('.ZipCode').text().trim();
        //var StateCode = $(this).closest('tr').find('.StateCode').text().trim();
        //var CityName = $(this).closest('tr').find('.CityName').text().trim();
        //var DateTimeFrom = $(this).closest('tr').find('.DateTimeFrom').text().trim();
        //var DateTimeTo = $(this).closest('tr').find('.DateTimeTo').text().trim();
        //var Traitor = $(this).closest('tr').find('.Traitor').text().trim();
        //var PickupNumber = $(this).closest('tr').find('.PickupNumber').text().trim();
        //var Comments = $(this).closest('tr').find('.Comments').text().trim();
        //var ShipperId = $(this).closest('tr').find('.ShipperId').text().trim();



        //document.getElementById('DeliveryPickUpInfo').innerHTML = "Current Pickup" + ShipperName + Address + StateCode;
        //var CountryName = this.cells[4];// the first <td>
        //var Address = this.cells[5];
        //$('#txtPickupId').val($(PickupId).text());
        //$('#txtCountry').val($(CountryName).text());
        //$('#txtAddress').val($(Address).text());


    });

    //Function to get State and city against Zip Code
    function GetStateCity() {
        var ZipCode = document.getElementById("txtZipCode");
        $.ajax({
            type: "GET",
            url: "/Definition/GetStateCity/?ZipCode=" + ZipCode.value + " ",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    if (response.StateName == "0") {
                        $("#lblZipCodeError").fadeIn();
                        $("#lblZipCodeError").fadeOut(3000);
                        $('#txtStates').val("");
                        $('#txtCity').val("");
                        $('#txtZipCode').val("");
                        //$('#txtZipCode').focus();

                        return;
                    }
                    $('#txtStates').val(response.StateCode);
                    $('#txtStateCode').val(response.StateCode);
                    $('#txtCity').val(response.CityName);

                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert("No Data");
            },
            error: function (response) {
                //alert(response.responseText);
            }
        });
    }


    //Function to get Truck Driver Information
    function GetDriverInfo() {



        var TruckId = document.getElementById("TruckId");


        $.ajax({
            type: "GET",
            url: "/Definition/GetDriverInfo/?TruckId=" + TruckId.value + " ",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response != null) {



                    $('#txtDriverName').val(response.Name);
                    $('#txtDriverId').val(response.DriverId);
                    $('#txtDriverPhone').val(response.Phone);


                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert("No Data");
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }
</script>


@*Agent Gross Calculation*@
<script type="text/javascript">
    $("#txtBrokerRate").focusout(function () {

        var BrokerRate = $("#txtBrokerRate");

        var CarrierRate = $("#txtCarrierRate");

        $("#txtAgentGross").val((BrokerRate.val() - CarrierRate.val()).toFixed(2));

        $("#txtBrokerAmount").val(BrokerRate.val());


    });

    $("#txtCarrierRate").focusout(function () {

        var BrokerRate = $("#txtBrokerRate");

        var CarrierRate = $("#txtCarrierRate");

        $("#txtAgentGross").val((BrokerRate.val() - CarrierRate.val()).toFixed(2));
        $("#txtCarrierAmount").val(CarrierRate.val());


    });
    //Get Pickup Data on Edit in textbox
    $(function () {


        $(document).on("click", ".CopyPickup", function () {

            var PickUpId = $(this).closest('tr').find('.PickUpId').text().trim();
            var ShipperName = $(this).closest('tr').find('.ShipperName').text().trim();
            var Address = $(this).closest('tr').find('.Address').text().trim();
            var Phone = $(this).closest('tr').find('.Phone').text().trim();
            var ZipCode = $(this).closest('tr').find('.ZipCode').text().trim();
            var StateCode = $(this).closest('tr').find('.StateCode').text().trim();
            var CityName = $(this).closest('tr').find('.CityName').text().trim();
            var DateTimeFrom = $(this).closest('tr').find('.DateTimeFrom').text().trim();
            var DateTimeTo = $(this).closest('tr').find('.DateTimeTo').text().trim();
            var Traitor = $(this).closest('tr').find('.Traitor').text().trim();
            var PickupNumber = $(this).closest('tr').find('.PickupNumber').text().trim();
            var Comments = $(this).closest('tr').find('.Comments').text().trim();
            var ShipperId = $(this).closest('tr').find('.ShipperId').text().trim();
            var Longitude = $(this).closest('tr').find('.Longitude').text().trim();
            var Latitude = $(this).closest('tr').find('.Latitude').text().trim();




            var dateFrom = FormatDate(DateTimeFrom);

            var dateTo = FormatDate(DateTimeTo);




            //$("#txtPickupId").val(PickUpId);
            //$("#txtShipper").val(ShipperName);
            $("#txtShipperName").val(ShipperName);

            $("#txtAddress").val(Address);
            $("#txtPhone").val(Phone);
            $("#txtZipCode").val(ZipCode);
            //$("#txtShipper").val(ShipperName);
            $("#txtStates").val(StateCode);
            $("#txtCity").val(CityName);
            $("#txtdateFrom").val(dateFrom);
            $("#txtDateTimeTo").val(dateTo);
            $("#txtTraitor").val(Traitor);
            $("#txtAppointmentNumber").val(PickupNumber);
            $("#txtComments").val(Comments);
            $("#txtShipperId").val(ShipperId);
            $("#txtAddressLongitude").val(Longitude);
            $("#txtAddressLatitude").val(Latitude);




            //document.getElementById('DeliveryPickUpInfo').innerHTML = " ( Current Pickup : " + ShipperName + " , " + Address + " , " + StateCode + " )";
            //document.getElementById('btnAddPickup').innerText = 'Update Pickup';
            //document.getElementById("btnAddDelivery").disabled = true;
            //document.getElementById("btnAddPickup").disabled = false;
            //document.getElementById("btnAddDelivery").style.backgroundColor = 'Black !important';


        });
    });

    //Get Pickup Data on Edit in textbox
    $(function () {


        $(document).on("click", ".CopyDelivery", function () {

            var DeliveryId = $(this).closest('tr').find('.DeliveryId').text().trim();
            var PickUpId = $(this).closest('tr').find('.DeliveryPickupId').text().trim();
            var ShipperName = $(this).closest('tr').find('.ShipperName').text().trim();
            var Address = $(this).closest('tr').find('.Address').text().trim();
            var Phone = $(this).closest('tr').find('.Phone').text().trim();
            var ZipCode = $(this).closest('tr').find('.ZipCode').text().trim();
            var StateCode = $(this).closest('tr').find('.StateCode').text().trim();
            var CityName = $(this).closest('tr').find('.CityName').text().trim();
            var DateTimeFrom = $(this).closest('tr').find('.DateTimeFrom').text().trim();
            var DateTimeTo = $(this).closest('tr').find('.DateTimeTo').text().trim();
            var Traitor = $(this).closest('tr').find('.Traitor').text().trim();
            var PickupNumber = $(this).closest('tr').find('.PickupNumber').text().trim();
            var Comments = $(this).closest('tr').find('.Comments').text().trim();
            var ShipperId = $(this).closest('tr').find('.ShipperId').text().trim();
            var Longitude = $(this).closest('tr').find('.Longitude').text().trim();
            var Latitude = $(this).closest('tr').find('.Latitude').text().trim();
            var dateFrom = FormatDate(DateTimeFrom);

            var dateTo = FormatDate(DateTimeTo);


            //$("#txtDeliveryId").val(DeliveryId);
            $("#txtPickupId").val(PickUpId);
            //$("#txtShipper").val(ShipperName);
            $("#txtShipperName").val(ShipperName);

            $("#txtAddress").val(Address);
            $("#txtPhone").val(Phone);
            $("#txtZipCode").val(ZipCode);
            //$("#txtShipper").val(ShipperName);
            $("#txtStates").val(StateCode);
            $("#txtCity").val(CityName);
            $("#txtdateFrom").val(dateFrom);
            $("#txtDateTimeTo").val(dateTo);
            $("#txtTraitor").val(Traitor);
            $("#txtAppointmentNumber").val(PickupNumber);
            $("#txtComments").val(Comments);
            $("#txtShipperId").val(ShipperId);

            $("#txtAddressLongitude").val(Longitude);
            $("#txtAddressLatitude").val(Latitude);
            //document.getElementById('btnAddDelivery').innerText = 'Update Delivery';
            //document.getElementById("btnAddDelivery").disabled = false;
            //document.getElementById("btnAddPickup").disabled = true;
            //document.getElementById("btnAddDelivery").style.backgroundColor = 'Black !important';





        });
    });
</script>