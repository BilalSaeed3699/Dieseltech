//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dieseltech.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DieseltechEntities : DbContext
    {
        public DieseltechEntities()
            : base("name=DieseltechEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBroker> tblBrokers { get; set; }
        public virtual DbSet<tblAccess_Level_Menu> tblAccess_Level_Menu { get; set; }
        public virtual DbSet<tblActivationCode> tblActivationCodes { get; set; }
        public virtual DbSet<tblForgetPassword> tblForgetPasswords { get; set; }
        public virtual DbSet<tblMenu> tblMenus { get; set; }
        public virtual DbSet<tblUser_Rights> tblUser_Rights { get; set; }
        public virtual DbSet<tblPackage> tblPackages { get; set; }
        public virtual DbSet<tblCountry> tblCountries { get; set; }
        public virtual DbSet<tblCarrierHelper> tblCarrierHelpers { get; set; }
        public virtual DbSet<tblCity> tblCities { get; set; }
        public virtual DbSet<tblState> tblStates { get; set; }
        public virtual DbSet<tblZone> tblZones { get; set; }
        public virtual DbSet<tblDriver> tblDrivers { get; set; }
        public virtual DbSet<tblBrokerHelper> tblBrokerHelpers { get; set; }
        public virtual DbSet<tblAccess_Level> tblAccess_Level { get; set; }
        public virtual DbSet<tblCompany> tblCompanies { get; set; }
        public virtual DbSet<tblDriverType> tblDriverTypes { get; set; }
        public virtual DbSet<tblLoadDocument> tblLoadDocuments { get; set; }
        public virtual DbSet<tblLoadSubType> tblLoadSubTypes { get; set; }
        public virtual DbSet<tblLoadType> tblLoadTypes { get; set; }
        public virtual DbSet<tblQuantityType> tblQuantityTypes { get; set; }
        public virtual DbSet<tblLoadPickupDelivery> tblLoadPickupDeliveries { get; set; }
        public virtual DbSet<tblLoadCharge1> tblLoadCharges1 { get; set; }
        public virtual DbSet<tblLoadFilePath> tblLoadFilePaths { get; set; }
        public virtual DbSet<tblZoneList> tblZoneLists { get; set; }
        public virtual DbSet<tblLoadConfirmationDocument> tblLoadConfirmationDocuments { get; set; }
        public virtual DbSet<tblCarrierDocument> tblCarrierDocuments { get; set; }
        public virtual DbSet<tblDriverLicense> tblDriverLicenses { get; set; }
        public virtual DbSet<tblLoadFilePathTemp> tblLoadFilePathTemps { get; set; }
        public virtual DbSet<tblThemeColor> tblThemeColors { get; set; }
        public virtual DbSet<tblCarrierCategory> tblCarrierCategories { get; set; }
        public virtual DbSet<tblComment> tblComments { get; set; }
        public virtual DbSet<tblEmailSetting> tblEmailSettings { get; set; }
        public virtual DbSet<tblEmailHistory> tblEmailHistories { get; set; }
        public virtual DbSet<tblDriverLocation> tblDriverLocations { get; set; }
        public virtual DbSet<tblNotification> tblNotifications { get; set; }
        public virtual DbSet<tblAgentcommission> tblAgentcommissions { get; set; }
        public virtual DbSet<tblcarriercollection> tblcarriercollections { get; set; }
        public virtual DbSet<tblcustomercollection> tblcustomercollections { get; set; }
        public virtual DbSet<tblProfile> tblProfiles { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<tblLoadDelivery> tblLoadDeliveries { get; set; }
        public virtual DbSet<tblLoadPickup> tblLoadPickups { get; set; }
        public virtual DbSet<tblShipper> tblShippers { get; set; }
        public virtual DbSet<tblStateCityData> tblStateCityDatas { get; set; }
        public virtual DbSet<tblAgentSalary> tblAgentSalaries { get; set; }
        public virtual DbSet<tblTruck> tblTrucks { get; set; }
        public virtual DbSet<tblCarrier> tblCarriers { get; set; }
        public virtual DbSet<tblLoadHead> tblLoadHeads { get; set; }
        public virtual DbSet<tblAgentTier> tblAgentTiers { get; set; }
        public virtual DbSet<tblCarrierAgent> tblCarrierAgents { get; set; }
    
        public virtual int SP_ActivationCode_Info(Nullable<System.Guid> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActivationCode_Info", codeParameter);
        }
    
        public virtual int Sp_Insert_ActivationCode(Nullable<int> userId, Nullable<System.Guid> code)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_ActivationCode", userIdParameter, codeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Insert_User(string userName, string paswword, string email_Adress, Nullable<int> agentTierId, string crudType)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var paswwordParameter = paswword != null ?
                new ObjectParameter("Paswword", paswword) :
                new ObjectParameter("Paswword", typeof(string));
    
            var email_AdressParameter = email_Adress != null ?
                new ObjectParameter("Email_Adress", email_Adress) :
                new ObjectParameter("Email_Adress", typeof(string));
    
            var agentTierIdParameter = agentTierId.HasValue ?
                new ObjectParameter("AgentTierId", agentTierId) :
                new ObjectParameter("AgentTierId", typeof(int));
    
            var crudTypeParameter = crudType != null ?
                new ObjectParameter("CrudType", crudType) :
                new ObjectParameter("CrudType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Insert_User", userNameParameter, paswwordParameter, email_AdressParameter, agentTierIdParameter, crudTypeParameter);
        }
    
        public virtual ObjectResult<SP_Verify_UserLogin_Result> SP_Verify_UserLogin(string email_Adress, string password)
        {
            var email_AdressParameter = email_Adress != null ?
                new ObjectParameter("Email_Adress", email_Adress) :
                new ObjectParameter("Email_Adress", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Verify_UserLogin_Result>("SP_Verify_UserLogin", email_AdressParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_Get_Carrier_List_Result> sp_Get_Carrier_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Carrier_List_Result>("sp_Get_Carrier_List");
        }
    
        public virtual ObjectResult<sp_Get_Carrier_Helper_List_Result> sp_Get_Carrier_Helper_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Carrier_Helper_List_Result>("sp_Get_Carrier_Helper_List");
        }
    
        public virtual ObjectResult<sp_Get_City_List_Result> sp_Get_City_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_City_List_Result>("sp_Get_City_List");
        }
    
        public virtual ObjectResult<sp_Get_Zone_List_Result> sp_Get_Zone_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Zone_List_Result>("sp_Get_Zone_List");
        }
    
        public virtual ObjectResult<sp_Driver_List_Result> sp_Driver_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Driver_List_Result>("sp_Driver_List");
        }
    
        public virtual ObjectResult<sp_Get_Broker_Helper_List_Result> sp_Get_Broker_Helper_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Broker_Helper_List_Result>("sp_Get_Broker_Helper_List");
        }
    
        public virtual ObjectResult<sp_getAccessMenus_Result1> sp_getAccessMenus(Nullable<int> access_ID)
        {
            var access_IDParameter = access_ID.HasValue ?
                new ObjectParameter("Access_ID", access_ID) :
                new ObjectParameter("Access_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAccessMenus_Result1>("sp_getAccessMenus", access_IDParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Truck_List_Result3> Sp_Get_Truck_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Truck_List_Result3>("Sp_Get_Truck_List");
        }
    
        public virtual ObjectResult<Sp_Get_Truck_Detailed_List_Result> Sp_Get_Truck_Detailed_List(Nullable<int> id, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Truck_Detailed_List_Result>("Sp_Get_Truck_Detailed_List", idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoadDetails_Result2> Sp_Get_LoadDetails(string loadNumber)
        {
            var loadNumberParameter = loadNumber != null ?
                new ObjectParameter("LoadNumber", loadNumber) :
                new ObjectParameter("LoadNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadDetails_Result2>("Sp_Get_LoadDetails", loadNumberParameter);
        }
    
        public virtual ObjectResult<sp_Get_Country_State_Result> sp_Get_Country_State()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Country_State_Result>("sp_Get_Country_State");
        }
    
        public virtual ObjectResult<Sp_Get_CarrierTrucks_Result> Sp_Get_CarrierTrucks(Nullable<int> carrierAssignId)
        {
            var carrierAssignIdParameter = carrierAssignId.HasValue ?
                new ObjectParameter("CarrierAssignId", carrierAssignId) :
                new ObjectParameter("CarrierAssignId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CarrierTrucks_Result>("Sp_Get_CarrierTrucks", carrierAssignIdParameter);
        }
    
        public virtual ObjectResult<string> Sp_Get_DriverDetails(Nullable<int> driverId)
        {
            var driverIdParameter = driverId.HasValue ?
                new ObjectParameter("DriverId", driverId) :
                new ObjectParameter("DriverId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Get_DriverDetails", driverIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Zone_States_Result> Sp_Get_Zone_States()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Zone_States_Result>("Sp_Get_Zone_States");
        }
    
        public virtual ObjectResult<Sp_Get_ZoneList_Result> Sp_Get_ZoneList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_ZoneList_Result>("Sp_Get_ZoneList");
        }
    
        public virtual ObjectResult<sp_getAccessMenusUser_Result2> sp_getAccessMenusUser(Nullable<int> user_ID)
        {
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAccessMenusUser_Result2>("sp_getAccessMenusUser", user_IDParameter);
        }
    
        public virtual ObjectResult<sp_Broker_List_Result> sp_Broker_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Broker_List_Result>("sp_Broker_List");
        }
    
        public virtual ObjectResult<Sp_Show_TruckDetails_Result> Sp_Show_TruckDetails(string assignId)
        {
            var assignIdParameter = assignId != null ?
                new ObjectParameter("AssignId", assignId) :
                new ObjectParameter("AssignId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Show_TruckDetails_Result>("Sp_Show_TruckDetails", assignIdParameter);
        }
    
        public virtual ObjectResult<Sp_TruckBoard_Truck_List_Result> Sp_TruckBoard_Truck_List(string filterData, string filterType)
        {
            var filterDataParameter = filterData != null ?
                new ObjectParameter("FilterData", filterData) :
                new ObjectParameter("FilterData", typeof(string));
    
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_TruckBoard_Truck_List_Result>("Sp_TruckBoard_Truck_List", filterDataParameter, filterTypeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoadPickupDelivery_Detail_FilterWise_Result> Sp_Get_LoadPickupDelivery_Detail_FilterWise(string filterType)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadPickupDelivery_Detail_FilterWise_Result>("Sp_Get_LoadPickupDelivery_Detail_FilterWise", filterTypeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoadDetail_FilterMonthWise_Result> Sp_Get_LoadDetail_FilterMonthWise(string filterType, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadDetail_FilterMonthWise_Result>("Sp_Get_LoadDetail_FilterMonthWise", filterTypeParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoadDetail_FilterWise_Result> Sp_Get_LoadDetail_FilterWise(string filterType)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadDetail_FilterWise_Result>("Sp_Get_LoadDetail_FilterWise", filterTypeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Agents_List_Result> Sp_Get_Agents_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Agents_List_Result>("Sp_Get_Agents_List");
        }
    
        public virtual ObjectResult<SP_Get_Load_Confirmation_Data_Result> SP_Get_Load_Confirmation_Data(string loaderNumber)
        {
            var loaderNumberParameter = loaderNumber != null ?
                new ObjectParameter("LoaderNumber", loaderNumber) :
                new ObjectParameter("LoaderNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Load_Confirmation_Data_Result>("SP_Get_Load_Confirmation_Data", loaderNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Carrier_LoadList_Result> Sp_Get_Carrier_LoadList(string carrierAssignId)
        {
            var carrierAssignIdParameter = carrierAssignId != null ?
                new ObjectParameter("CarrierAssignId", carrierAssignId) :
                new ObjectParameter("CarrierAssignId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Carrier_LoadList_Result>("Sp_Get_Carrier_LoadList", carrierAssignIdParameter);
        }
    
        public virtual ObjectResult<Sp_Get_All_Carrier_List_Filter_Result> Sp_Get_All_Carrier_List_Filter(Nullable<int> filterType, Nullable<int> blackList, Nullable<int> ownerlist)
        {
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            var blackListParameter = blackList.HasValue ?
                new ObjectParameter("BlackList", blackList) :
                new ObjectParameter("BlackList", typeof(int));
    
            var ownerlistParameter = ownerlist.HasValue ?
                new ObjectParameter("Ownerlist", ownerlist) :
                new ObjectParameter("Ownerlist", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_Carrier_List_Filter_Result>("Sp_Get_All_Carrier_List_Filter", filterTypeParameter, blackListParameter, ownerlistParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoadDetail_PickupDelivery_WithAllFilter_Result> Sp_Get_LoadDetail_PickupDelivery_WithAllFilter(string filterType, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTime, string cwhere, Nullable<int> userid)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var cwhereParameter = cwhere != null ?
                new ObjectParameter("cwhere", cwhere) :
                new ObjectParameter("cwhere", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadDetail_PickupDelivery_WithAllFilter_Result>("Sp_Get_LoadDetail_PickupDelivery_WithAllFilter", filterTypeParameter, dateFromParameter, dateTimeParameter, cwhereParameter, useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_Find_Duplicate_Reference(string loaderNumber, string customerreference, string type)
        {
            var loaderNumberParameter = loaderNumber != null ?
                new ObjectParameter("LoaderNumber", loaderNumber) :
                new ObjectParameter("LoaderNumber", typeof(string));
    
            var customerreferenceParameter = customerreference != null ?
                new ObjectParameter("Customerreference", customerreference) :
                new ObjectParameter("Customerreference", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_Find_Duplicate_Reference", loaderNumberParameter, customerreferenceParameter, typeParameter);
        }
    
        public virtual ObjectResult<Sp_Get_LoadHeadInformation_Edit_Result> Sp_Get_LoadHeadInformation_Edit(string loadNumber)
        {
            var loadNumberParameter = loadNumber != null ?
                new ObjectParameter("LoadNumber", loadNumber) :
                new ObjectParameter("LoadNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadHeadInformation_Edit_Result>("Sp_Get_LoadHeadInformation_Edit", loadNumberParameter);
        }
    
        public virtual ObjectResult<Sp_Get_User_Extensions_List_Result> Sp_Get_User_Extensions_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_User_Extensions_List_Result>("Sp_Get_User_Extensions_List");
        }
    
        public virtual ObjectResult<Sp_Get_Invoice_Load_List_Result> Sp_Get_Invoice_Load_List(string filterType, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTime, string cwhere, Nullable<int> userid)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var cwhereParameter = cwhere != null ?
                new ObjectParameter("cwhere", cwhere) :
                new ObjectParameter("cwhere", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Invoice_Load_List_Result>("Sp_Get_Invoice_Load_List", filterTypeParameter, dateFromParameter, dateTimeParameter, cwhereParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Annual_Totals_Result> Sp_Get_Annual_Totals(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Annual_Totals_Result>("Sp_Get_Annual_Totals", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Leader_Board_Result> Sp_Get_Leader_Board(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Leader_Board_Result>("Sp_Get_Leader_Board", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Sp_get_Customer_Month_Comparison_Result> Sp_get_Customer_Month_Comparison(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_get_Customer_Month_Comparison_Result>("Sp_get_Customer_Month_Comparison", customerParameter);
        }
    
        public virtual ObjectResult<Sp_Search_Autocomplete_TruckInfo_Result> Sp_Search_Autocomplete_TruckInfo(string filter)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Search_Autocomplete_TruckInfo_Result>("Sp_Search_Autocomplete_TruckInfo", filterParameter);
        }
    
        public virtual ObjectResult<Sp_get_collection_list_Result> Sp_get_collection_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_get_collection_list_Result>("Sp_get_collection_list");
        }
    
        public virtual ObjectResult<Sp_Get_Company_Revenue_Result> Sp_Get_Company_Revenue(string searchValue)
        {
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Company_Revenue_Result>("Sp_Get_Company_Revenue", searchValueParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Company_Summary_Revenue_Result> Sp_Get_Company_Summary_Revenue(string searchValue)
        {
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Company_Summary_Revenue_Result>("Sp_Get_Company_Summary_Revenue", searchValueParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Customer_Revenue_Result> Sp_Get_Customer_Revenue(string searchValue)
        {
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Customer_Revenue_Result>("Sp_Get_Customer_Revenue", searchValueParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Carrier_Revenue_Result> Sp_Get_Carrier_Revenue(string searchValue)
        {
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Carrier_Revenue_Result>("Sp_Get_Carrier_Revenue", searchValueParameter);
        }
    
        public virtual ObjectResult<sp_Get_AgentCommisionList_Result> sp_Get_AgentCommisionList(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_AgentCommisionList_Result>("sp_Get_AgentCommisionList", iDParameter);
        }
    
        public virtual ObjectResult<sp_Get_AgentsLatestCommision_Result> sp_Get_AgentsLatestCommision()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_AgentsLatestCommision_Result>("sp_Get_AgentsLatestCommision");
        }
    
        public virtual ObjectResult<Sp_Get_Agent_Statistics_New_Result> Sp_Get_Agent_Statistics_New(string filterType, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTime, Nullable<int> agentId)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var agentIdParameter = agentId.HasValue ?
                new ObjectParameter("AgentId", agentId) :
                new ObjectParameter("AgentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Agent_Statistics_New_Result>("Sp_Get_Agent_Statistics_New", filterTypeParameter, dateFromParameter, dateTimeParameter, agentIdParameter);
        }
    
        public virtual ObjectResult<sp_Get_AgentSalaryList_Result> sp_Get_AgentSalaryList(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_AgentSalaryList_Result>("sp_Get_AgentSalaryList", iDParameter);
        }
    
        public virtual ObjectResult<Sp_Get_All_Carrier_List_Result> Sp_Get_All_Carrier_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_Carrier_List_Result>("Sp_Get_All_Carrier_List");
        }
    
        public virtual ObjectResult<Sp_GetAll_Truck_List_Result> Sp_GetAll_Truck_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAll_Truck_List_Result>("Sp_GetAll_Truck_List");
        }
    
        public virtual ObjectResult<Sp_Get_LoadDetail_WithAllFilter_Result> Sp_Get_LoadDetail_WithAllFilter(string filterType, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTime, Nullable<int> userid, string cwhere)
        {
            var filterTypeParameter = filterType != null ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var cwhereParameter = cwhere != null ?
                new ObjectParameter("cwhere", cwhere) :
                new ObjectParameter("cwhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_LoadDetail_WithAllFilter_Result>("Sp_Get_LoadDetail_WithAllFilter", filterTypeParameter, dateFromParameter, dateTimeParameter, useridParameter, cwhereParameter);
        }
    
        public virtual ObjectResult<Sp_Get_CarrierTruck_Information_Result> Sp_Get_CarrierTruck_Information(string assignID)
        {
            var assignIDParameter = assignID != null ?
                new ObjectParameter("AssignID", assignID) :
                new ObjectParameter("AssignID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_CarrierTruck_Information_Result>("Sp_Get_CarrierTruck_Information", assignIDParameter);
        }
    
        public virtual ObjectResult<Sp_Get_Dashboard_Stats_Result> Sp_Get_Dashboard_Stats(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Dashboard_Stats_Result>("Sp_Get_Dashboard_Stats", iDParameter);
        }
    
        public virtual ObjectResult<Sp_Get_All_Carrier_List_ForMapping_Result> Sp_Get_All_Carrier_List_ForMapping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_Carrier_List_ForMapping_Result>("Sp_Get_All_Carrier_List_ForMapping");
        }
    
        public virtual ObjectResult<Sp_Get_All_Carrier_List_Filter_ForMapping_Result> Sp_Get_All_Carrier_List_Filter_ForMapping(Nullable<int> filterType, Nullable<int> blackList, Nullable<int> ownerlist)
        {
            var filterTypeParameter = filterType.HasValue ?
                new ObjectParameter("FilterType", filterType) :
                new ObjectParameter("FilterType", typeof(int));
    
            var blackListParameter = blackList.HasValue ?
                new ObjectParameter("BlackList", blackList) :
                new ObjectParameter("BlackList", typeof(int));
    
            var ownerlistParameter = ownerlist.HasValue ?
                new ObjectParameter("Ownerlist", ownerlist) :
                new ObjectParameter("Ownerlist", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_All_Carrier_List_Filter_ForMapping_Result>("Sp_Get_All_Carrier_List_Filter_ForMapping", filterTypeParameter, blackListParameter, ownerlistParameter);
        }
    }
}
